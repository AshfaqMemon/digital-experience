{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"welcome/","text":"Welcome to HCL Digital Experience 9.5","title":"Welcome to HCL Digital Experience 9.5"},{"location":"welcome/#welcome-to-hcl-digital-experience-95","text":"","title":"Welcome to HCL Digital Experience 9.5"},{"location":"containerization/credentialvaultslot/","text":"Create or update credential vault slot | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Create or update credential vault slot | HCL Digital Experience This topic describes the commands that are used to create or update credential vault slot in the DX server. Credential vault slot Command description Use the create-credential-vault command to create or update a credential vault slot. dxclient create-credential-vault Help command This command shows the help information for create-credential-vault command usage: dxclient create-credential-vault -h Command options Use this attribute to specify the protocol to connect to the server: -dxProtocol <value> Use this attribute to specify the hostname of the target server: -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443): -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server: -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server: -dxPassword <value> Use this attribute to specify the path to DX configuration endpoint: -xmlConfigPath <value> Use this attribute to specify the credential vault segment slot name: -credentialSlotName <value> Use this attribute to specify the credential vault vaultUsername: -vaultUsername <value> Use this attribute to specify the credential vault UserGroup: -vaultUserGroup <value> Use this attribute to specify the credential vault shared userid password: -vaultPassword <value> Use this attribute to specify the credential vault segment name and the default is set to DefaultAdminSegment : -vaultSegmentName <value> Use this attribute to specify the credential vault segment description: -vaultDescription <value> All the command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line overrides the default values. Example Usage: dxclient create-credential-vault -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlConfigPath <xmlConfigPath> -credentialSlotName <credentialSlotName> -vaultUsername <vaultUsername> -vaultPassword <vaultPassword> Generated by XML WebHelp","title":"Credentialvaultslot"},{"location":"containerization/credentialvaultslot/#create-or-update-credential-vault-slot-hcl-digital-experience","text":"This topic describes the commands that are used to create or update credential vault slot in the DX server.","title":"Create or update credential vault slot | HCL Digital Experience"},{"location":"containerization/credentialvaultslot/#credential-vault-slot","text":"Command description Use the create-credential-vault command to create or update a credential vault slot. dxclient create-credential-vault Help command This command shows the help information for create-credential-vault command usage: dxclient create-credential-vault -h Command options Use this attribute to specify the protocol to connect to the server: -dxProtocol <value> Use this attribute to specify the hostname of the target server: -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443): -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server: -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server: -dxPassword <value> Use this attribute to specify the path to DX configuration endpoint: -xmlConfigPath <value> Use this attribute to specify the credential vault segment slot name: -credentialSlotName <value> Use this attribute to specify the credential vault vaultUsername: -vaultUsername <value> Use this attribute to specify the credential vault UserGroup: -vaultUserGroup <value> Use this attribute to specify the credential vault shared userid password: -vaultPassword <value> Use this attribute to specify the credential vault segment name and the default is set to DefaultAdminSegment : -vaultSegmentName <value> Use this attribute to specify the credential vault segment description: -vaultDescription <value> All the command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line overrides the default values. Example Usage: dxclient create-credential-vault -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlConfigPath <xmlConfigPath> -credentialSlotName <credentialSlotName> -vaultUsername <vaultUsername> -vaultPassword <vaultPassword> Generated by XML WebHelp","title":"Credential vault slot"},{"location":"containerization/dam_subscription_staging/","text":"DAM staging | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DAM staging | HCL Digital Experience This topic contains the commands that administrators can use to configure the staging of Digital Asset Management (DAM) content. This allows you to manage subscriber registration or configure periodic sync. DAM staging framework The DAM staging framework allows you to stage your DAM content from an authoring environment (source environment/publisher) to multiple rendering environments (target environment/subscriber). Using DXClient, you can configure DAM staging to:* Trigger a manual staging or use periodic staging processes. * Set the cycle length (default: 2 minutes, maximum: 24 hours) for periodic sync. * Register a subscriber with a publisher.Note: A subscriber must be registered with a publisher. Access rights from DAM staging assets are not transferred for subscribers that do not share the same Lightweight Directory Access Protocol (LDAP). Manage DAM staging Use the manage-dam-staging trigger-staging command to trigger DAM staging. Command description You can trigger the DAM staging with the following command: dxclient manage-dam-staging trigger-staging Help command This command shows the help information for manage-dam-staging trigger-staging command usage: dxclient manage-dam-staging trigger-staging -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient manage-dam-staging trigger-staging -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -targetHostname <targetHostname> Registering or deregistering for DAM staging Use the manage-dam-staging **register**-dam-subscriber command to register or the manage-dam-staging **deregister**-dam-subscriber command to deregister the subscriber for DAM staging. Command description You can register a subscriber for DAM staging with the following command: dxclient manage-dam-staging register-dam-subscriber You can deregister a subscriber for DAM staging with the following command: dxclient manage-dam-staging deregister-dam-subscriber Help command The following command shows the help information for manage-dam-staging **register**-dam-subscriber command usage: dxclient manage-dam-staging register-dam-subscriber -h The following command shows the help information for manage-dam-staging **deregister**-dam-subscriber command usage: dxclient manage-dam-staging deregister-dam-subscriber -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the subscriber ID of the target environment: -subscriberId <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example usage: To register: dxclient manage-dam-staging register-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> To deregister: dxclient manage-dam-staging deregister-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> On this page* DAM staging framework * Manage DAM staging * Registering or deregistering for DAM staging Generated by XML WebHelp","title":"DAM staging | HCL Digital Experience"},{"location":"containerization/dam_subscription_staging/#dam-staging-hcl-digital-experience","text":"Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search","title":"DAM staging | HCL Digital Experience"},{"location":"containerization/dam_subscription_staging/#dam-staging-hcl-digital-experience_1","text":"This topic contains the commands that administrators can use to configure the staging of Digital Asset Management (DAM) content. This allows you to manage subscriber registration or configure periodic sync.","title":"DAM staging | HCL Digital Experience"},{"location":"containerization/dam_subscription_staging/#dam-staging-framework","text":"The DAM staging framework allows you to stage your DAM content from an authoring environment (source environment/publisher) to multiple rendering environments (target environment/subscriber). Using DXClient, you can configure DAM staging to:* Trigger a manual staging or use periodic staging processes. * Set the cycle length (default: 2 minutes, maximum: 24 hours) for periodic sync. * Register a subscriber with a publisher.Note: A subscriber must be registered with a publisher. Access rights from DAM staging assets are not transferred for subscribers that do not share the same Lightweight Directory Access Protocol (LDAP).","title":"DAM staging framework"},{"location":"containerization/dam_subscription_staging/#manage-dam-staging","text":"Use the manage-dam-staging trigger-staging command to trigger DAM staging. Command description You can trigger the DAM staging with the following command: dxclient manage-dam-staging trigger-staging Help command This command shows the help information for manage-dam-staging trigger-staging command usage: dxclient manage-dam-staging trigger-staging -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient manage-dam-staging trigger-staging -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -targetHostname <targetHostname>","title":"Manage DAM staging"},{"location":"containerization/dam_subscription_staging/#registering-or-deregistering-for-dam-staging","text":"Use the manage-dam-staging **register**-dam-subscriber command to register or the manage-dam-staging **deregister**-dam-subscriber command to deregister the subscriber for DAM staging. Command description You can register a subscriber for DAM staging with the following command: dxclient manage-dam-staging register-dam-subscriber You can deregister a subscriber for DAM staging with the following command: dxclient manage-dam-staging deregister-dam-subscriber Help command The following command shows the help information for manage-dam-staging **register**-dam-subscriber command usage: dxclient manage-dam-staging register-dam-subscriber -h The following command shows the help information for manage-dam-staging **deregister**-dam-subscriber command usage: dxclient manage-dam-staging deregister-dam-subscriber -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the subscriber ID of the target environment: -subscriberId <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example usage: To register: dxclient manage-dam-staging register-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> To deregister: dxclient manage-dam-staging deregister-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> On this page* DAM staging framework * Manage DAM staging * Registering or deregistering for DAM staging Generated by XML WebHelp","title":"Registering or deregistering for DAM staging"},{"location":"containerization/damschemas/","text":"DAM schemas | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DAM schemas | HCL Digital Experience This topic contains the commands that administrators can use to get a list of all DAM schemas or delete inactive Digital Asset Management (DAM) schemas from persistence. Listing DAM schemas The list-dam-schemas command is used to list all the DAM schemas. Command description This command invokes list-dam-schemas inside DXClient and provides a list DAM schemas. dxclient list-dam-schemas Help command This command shows the help information for list-dam-schemas command usage: dxclient list-dam-schemas -h Command options Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server(for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server(for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM(for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core(for Kubernetes Environment default port is 443) -ringAPIVersion <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient list-dam-schemas -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> Deleting DAM schemas Deleting DAM schema is a recommended step when the configuration of the DAM database schema has been changed, due to a release update such as from Container Update CF196 to Container Update CF197. When a DAM database is migrated, a new schema gets generated and the old schema is rendered inactive. To avoid the accumulation of inactive schemas, you can use the delete-dam-schema command to delete them. Use the delete-dam-schema command to delete the inactive DAM schema. Command description This command invokes delete-dam-schema inside DXClient and deletes the DAM schema. dxclient delete-dam-schema Help command This command shows the help information for delete-dam-schema command usage: dxclient delete-dam-schema -h Command options Use this attribute to specify the protocol that is used to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server (for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM (for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core (for Kubernetes Environment default port is 443) -ringAPIVersion <value> Use this attribute to specify the DAM Schema Version (for Kubernetes Environment default port is 443) -schemaVersion <value> Note: In case the user does not enter the schemaVersion , user is prompted with a list of inactive schemas to choose from. All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient delete-dam-schema -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> -schemaVersion <schemaVersion> On this page* Listing DAM schemas * Deleting DAM schemas Generated by XML WebHelp","title":"Damschemas"},{"location":"containerization/damschemas/#dam-schemas-hcl-digital-experience","text":"This topic contains the commands that administrators can use to get a list of all DAM schemas or delete inactive Digital Asset Management (DAM) schemas from persistence.","title":"DAM schemas | HCL Digital Experience"},{"location":"containerization/damschemas/#listing-dam-schemas","text":"The list-dam-schemas command is used to list all the DAM schemas. Command description This command invokes list-dam-schemas inside DXClient and provides a list DAM schemas. dxclient list-dam-schemas Help command This command shows the help information for list-dam-schemas command usage: dxclient list-dam-schemas -h Command options Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server(for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server(for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM(for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core(for Kubernetes Environment default port is 443) -ringAPIVersion <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient list-dam-schemas -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion>","title":"Listing DAM schemas"},{"location":"containerization/damschemas/#deleting-dam-schemas","text":"Deleting DAM schema is a recommended step when the configuration of the DAM database schema has been changed, due to a release update such as from Container Update CF196 to Container Update CF197. When a DAM database is migrated, a new schema gets generated and the old schema is rendered inactive. To avoid the accumulation of inactive schemas, you can use the delete-dam-schema command to delete them. Use the delete-dam-schema command to delete the inactive DAM schema. Command description This command invokes delete-dam-schema inside DXClient and deletes the DAM schema. dxclient delete-dam-schema Help command This command shows the help information for delete-dam-schema command usage: dxclient delete-dam-schema -h Command options Use this attribute to specify the protocol that is used to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server (for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM (for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core (for Kubernetes Environment default port is 443) -ringAPIVersion <value> Use this attribute to specify the DAM Schema Version (for Kubernetes Environment default port is 443) -schemaVersion <value> Note: In case the user does not enter the schemaVersion , user is prompted with a list of inactive schemas to choose from. All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient delete-dam-schema -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> -schemaVersion <schemaVersion> On this page* Listing DAM schemas * Deleting DAM schemas Generated by XML WebHelp","title":"Deleting DAM schemas"},{"location":"containerization/deployapplication/","text":"Digital Experience applications | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Digital Experience applications | HCL Digital Experience This section provides information about the deployment of DX application artifacts by using the DXClient tool. Deploy Application The deploy-application command is used to deploy the EAR file into the WebSphere Application Server. Command description This command invokes the deploy-application tool inside DXClient. This command uses the provided files and execute the deploy application task. dxclient deploy-application Required files The following EAR file will be deployed into the WebSphere Application Server: Deployable EAR Help command This command shows the help information for deploy-application command usage: dxclient deploy-application -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Required options for application deployment: Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR file path that is required while executing the deploy application task \u2013applicationFile <Absolute or relative path to deployable ear file> Use this attribute to specify the application name -applicationName <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values passed through the command line command override the default values. Example Usage: dxclient deploy-application -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -applicationFile <application-file-with-path> -applicationName <application name> -dxProfileName <Profile name of the DX core server> Generated by XML WebHelp","title":"Deployapplication"},{"location":"containerization/deployapplication/#digital-experience-applications-hcl-digital-experience","text":"This section provides information about the deployment of DX application artifacts by using the DXClient tool.","title":"Digital Experience applications | HCL Digital Experience"},{"location":"containerization/deployapplication/#deploy-application","text":"The deploy-application command is used to deploy the EAR file into the WebSphere Application Server. Command description This command invokes the deploy-application tool inside DXClient. This command uses the provided files and execute the deploy application task. dxclient deploy-application Required files The following EAR file will be deployed into the WebSphere Application Server: Deployable EAR Help command This command shows the help information for deploy-application command usage: dxclient deploy-application -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Required options for application deployment: Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR file path that is required while executing the deploy application task \u2013applicationFile <Absolute or relative path to deployable ear file> Use this attribute to specify the application name -applicationName <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values passed through the command line command override the default values. Example Usage: dxclient deploy-application -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -applicationFile <application-file-with-path> -applicationName <application name> -dxProfileName <Profile name of the DX core server> Generated by XML WebHelp","title":"Deploy Application"},{"location":"containerization/deployment/","text":"Digital Experience on containerized platforms Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Digital Experience on containerized platforms Learn how to deploy HCL Digital Experience as a cloud-native platform and optimize business-critical digital experiences for your customers. The Kubernetes container orchestration platform allows orchestration features for the automated deployment, coordination, scaling, and management of containerized applications. Originally designed by Google, now governed by the Cloud Native Computing Foundation (CNCF), and developed by Google, Red Hat, and many others, Kubernetes is now widely used by organizations of various sizes to run containers in a cloud environment. Generated by XML WebHelp","title":"Deployment"},{"location":"containerization/deployment/#digital-experience-on-containerized-platforms","text":"Learn how to deploy HCL Digital Experience as a cloud-native platform and optimize business-critical digital experiences for your customers. The Kubernetes container orchestration platform allows orchestration features for the automated deployment, coordination, scaling, and management of containerized applications. Originally designed by Google, now governed by the Cloud Native Computing Foundation (CNCF), and developed by Google, Red Hat, and many others, Kubernetes is now widely used by organizations of various sizes to run containers in a cloud environment. Generated by XML WebHelp","title":"Digital Experience on containerized platforms"},{"location":"containerization/dx_non_container/","text":"Digital Experience on non-containerized platforms Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience is a rock-solid and reliable platform that can help deliver the vital services of your organization. It is designed for scaling and flexibility, supports authentication for security and personalization, and eases the integration of multiple and varied applications. Intelligence-agency-grade encryption and cross-system authentication keep your business-critical functions safe. Your teams can easily create, manage, and deliver powerful digital experiences that can be counted on, every day. Generated by XML WebHelp","title":"Dx non container"},{"location":"containerization/dx_non_container/#digital-experience-on-non-containerized-platforms","text":"Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience is a rock-solid and reliable platform that can help deliver the vital services of your organization. It is designed for scaling and flexibility, supports authentication for security and personalization, and eases the integration of multiple and varied applications. Intelligence-agency-grade encryption and cross-system authentication keep your business-critical functions safe. Your teams can easily create, manage, and deliver powerful digital experiences that can be counted on, every day. Generated by XML WebHelp","title":"Digital Experience on non-containerized platforms"},{"location":"containerization/dxclient/","text":"DXClient | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DXClient | HCL Digital Experience DXClient is a tool that helps developers and administrators manage tasks, such as uploading one or more portlets or Script Applications, from source development environments to target HCL DX 9.5 deployments. This tool is capable of taking artifacts developed locally and deploying them to DX 9.5 servers deployed to supported on-premises platforms in standalone, cluster, or farm-topologies and supported Kubernetes platforms. Notes: * DXClient is enabled in supported Kubernetes platforms from HCL Digital Experience 9.5 CF192 and later releases. * DXClient is available as a Docker image from HCL DX 9.5 CF196 and later releases, See the installation section for more details. DXClient is a Node.js -based CLI tool and requires Node.js to be installed as a prerequisite. See video: Getting Started with DXClient on Red Hat OpenShift using HCL Digital Experience Container Update CF194 DXConnect DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later deployments, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Architecture Notes: 1. HCL DX 9.5 CF19 or later version is installed on target servers, on supported on premises platforms (Microsoft Windows, Linux or IBM AIX). 2. Beginning with HCL DX 9.5 Container Update CF192 and later releases, the DXConnect Servlet is pre-configured and started on supported Red Hat OpenShift and Kubernetes platforms that DX 9.5 containers are deployed to. 3. For supported on premises platforms with HCL DX 9.5 CF19 and later releases, the DXConnect application needs to be installed (refer to DXConnect Installation ) and started under the Configuration Wizard ( cw_profile ) on target servers. For more information on starting the Configuration Wizard, refer to Accessing the Configuration Wizard Remember: Configuration Wizard Administrator credentials are required to access the DXConnect application. Installing using the Docker image Prerequisites: You must ensure that Docker is installed on the workstation. DXClient docker image comes with a script that you can use to run the docker image. This script creates a store directory,and copies the input files from the absolute path to the shared volume location. 1. Navigate to folder where you wish to use DXClient from. 2. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your HCL Digital Experience 9.5 CF196 or higher entitlements on the HCL Software License Portal. 3. Extract the DXClient.zip file locally. 4. Run docker load < dxclient.tar.gz. 5. Add the execution shell script to the bin directory to the PATH variable to be able to call dxclient from any directory. export PATH=<working-directory>/bin:$PATH For Microsoft Windows platforms: use dxclient.bat script in the bin directory to the PATH variable to be able to call DXClient from any directory. 6. Set appropriate permission. chmod xxx <working-directory>/bin Run 'dxclient -V' to verify that the dxclient command line is installed. A folder named store will be created in your working directory. This is the shared volume location to your docker container. Configuration, logger, output, and sample files under location - /store. Common command arguments can be pre-configured inside the config.json file available under <working-directory>/store folder. A sample configuration file that could be used on-premises platforms in standalone, cluster platforms is also available under <working-directory>/store/samples/sample-configurations/default-config.json for reference. Installing using the node package file (deprecated in CF196) Prerequisites: Node.js version 12.18.3 is the minimum supported version, and must be installed on the local workstation or automation server. Note: DXClient node package is deprecated in the HCL Digital Experience Container CF196 release. It might be removed in the future releases. You are encouraged to use the DXClient Docker package from CF Container release CF196 and later. Complete the following steps to install the DXClient tool in your local development workstation or automation server.Note: If you are upgrading from CF19, CF191, or later releases, you should first unlink the current version using the following command before installing the newer version.Syntax for Linux and Apple macOS platforms: make unlink Syntax for Microsoft Windows platforms: make_unlink.bat Ensure that Node.js version 12.18.3 or later version is installed to the local workstation. The DXClient tool is supported on Microsoft Windows, Linux, and Apple macOS workstations and automation servers. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your DX 9.5 CF19 or later entitlements on the HCL Software License Portal . Reference the Docker topic for the latest list of HCL DX 9.5 files available for download. Extract the DXClient.zip file locally. From the extracted folder, run the following command.For Linux and Apple macOS platforms: make install For Microsoft Windows platforms: make_install.bat The following commands are run: 6. Run the following command to link your application to the local npm module in your machine. Refer to the following Notes section before you proceed.For Linux and Apple MacOS platforms: make link For Microsoft Windows platforms: make_link.bat Notes: * Avoid using this command when scripting deployments from an automation server (for example, in pipelines) as there is a chance of picking up the wrong dependencies during tool version upgrades. * If the `link` command is not used (such as on automation servers), then use the following command to run the application:For Linux and Apple MacOS platforms: ``` ./bin/dxclient ``` For Microsoft Windows platforms: ``` node bin/dxclient ``` DXClient node installation configuration Common command arguments can be pre-configured inside the config.json file available under dist/src/configuration folder. A sample configuration file that could be used for any of the supported Kubernetes platforms is also available under samples/sample-configurations.json for reference. { \"enableLogger\": true, \"dxProtocol\": \"\", \"hostname\": \"\", \"dxPort\": \"\", \"xmlConfigPath\": \"/wps/config\", \"dxUsername\": \"\", \"dxPassword\": \"\", \"dxSoapPort\": \"10033\", \"dxProfilePath\": \"\", \"dxConnectHostname\": \"\", \"dxConnectUsername\": \"\", \"dxConnectPassword\": \"\", \"dxConnectPort\": \"10202\", \"xmlFile\": \"\", \"warFile\": \"\", \"applicationFile\": \"\", \"applicationName\": \"\", \"themeName\": \"\", \"themePath\": \"\", \"outputFilePath\": \"\", \"dxConnectProtocol\": \"https\", \"wcmSiteArea\": \"\", \"excludes\": [ \"^bin$\", \"^lib$\", \"^src$\", \"^node_modules$\", \"^\\\\.classpath$\", \"^\\\\.project$\", \"^\\\\..*ignore$\", \"^config.json$\", \"^sp-cmdln.log$\", \"^sp.bat$\", \"^sp.sh$\" ], \"wcmContentPath\": \"\", \"wcmContentName\": \"\", \"prebuiltZip\": \"\", \"contenthandlerPath\": \"/wps/mycontenthandler\", \"mainHtmlFile\": \"\", \"wcmContentTitle\": \"\", \"contentRoot\": \"\", \"wcmContentId\": \"\", \"virtualPortalContext\": \"\", \"projectContext\": \"\", \"versionName\": \"\", \"restoreAsPublished\": false } DXClient node uninstalling To uninstall the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make clean For Microsoft Windows platforms: make uninstall.bat To unlink the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make unlink For Microsoft Windows platforms: make_unlink.bat Verify the DXClient installation Successful installation of the DXClient tool can be checked by using the \" dxclient -V \" command, which should show the version of the DXClient tool installed. Once installed, commands can be executed using the DXClient tool to perform CI / CD actions on HCL DX 9.5 servers. Notes: Refer to the list of features that were released in the following HCL DX 9.5 Container releases:* HCL DX 9.5 CF199 release: + DAM Staging + Create credential vault slot + Create syndication relation + Export and import multiple resource environment providers + Specify the context root for exporting and importing personalization rules * HCL DX 9.5 CF198 release: + List DAM schemas + Personalization export and import rules + Resource environment provider + Manage virtual portals * HCL DX 9.5 CF197 release: + Undeploy portlets + Deploy and undeploy themes + Deploy application + manage get-syndication report + Restart Core + Delete DAM schema * HCL DX 9.5 CF196 release: + Shared library * HCL DX 9.5 CF195 release: + Undeploy theme + MLS export and import of WCM library * HCL DX 9.5 CF193 release: + Restart DX Core server + Deploy Application + Managing syndicators + Managing subscribers * HCL DX 9.5 CF192 release: + Undeploy script applications + Deploy theme (EAR and WebDAV based) * HCL DX 9.5 CF19 release: + Deploy Portlets or Undeploy portlets + Deploy script applications + XML Access + Restore Script Application DXClient commands Command syntax conventions: dxclient [command] [options] Use the following command to execute the deploy portlet action: dxclient deploy-portlet [options] Use the following command to execute the undeploy portlet action: dxclient undeploy-portlet [options] Use the following command to execute the xmlaccess action: dxclient xmlaccess [options] Use the following command to execute the pull script application action: dxclient deploy-scriptapplication pull [options] Use the following command to execute the push script application action: dxclient deploy-scriptapplication push [options] Use the following command to execute the undeploy script application action: dxclient undeploy-scriptapplication [options] Use the following command to execute the restore script application action: dxclient restore-scriptapplication [options] Use the following command to execute the deploy application action: dxclient deploy-application [options] Use the following command to execute the DX Core restart action: dxclient restart-dx-core Use the following command to execute manage-subscriber action: dxclient manage-subscriber -h Use the following command to execute manage-syndicator action: dxclient manage-syndicator -h Use the following command to execute the deploy theme action: dxclient deploy-theme [options] Use the following command to execute the undeploy theme action: dxclient undeploy-theme [options] Use the following command to execute the manage-syndicator get-syndication-report action: dxclient manage-syndicator get-syndication-report [options] Use the following command to execute the shared-library action: dxclient shared-library [options] Use the following command to execute the delete DAM schema action: dxclient delete-dam-schema [options] Use the following command to list all DAM schemas present: dxclient list-dam-schemas [options] Use the following command to export the personalization rules from the target server: dxclient pzn-export [options] Use the following command to import the personalization rules into the target server: dxclient pzn-import [options] Use the following command to manage virtual portal tasks in the DX server: dxclient manage-virtual-portal [options] Use the following command to register subscriber: dxclient manage-dam-staging register-dam-subscriber [options] Use the following command to deregister subscriber: dxclient manage-dam-staging deregister-dam-subscriber [options] Use the following command to trigger manual sync: dxclient manage-dam-staging trigger-staging [options] Use the following command to create credential vault slot in the DX server: dxclient create-credential-vault [options] Use the following command to create the syndication relation between syndicator and subscriber in DX server: dxclient create-syndication-relation [options] Use the following command to create, update, delete, export or import a custom property from an existing Resource Environment Provider: dxclient resource-env-provider [options] DXClient Help commands The following commands show the Help documents for DXClient command usage. Use the following commands to display the Help document for DXClient: dxclient dxclient -h, --help Use the following command to display the DXClient version number: dxclient -V, --version Use the following command to display the detailed help for a specific command: dxclient help [command] On this page* Architecture * Installing using the Docker image * Installing using the node package file (deprecated in CF196) * Verify the DXClient installation * DXClient commands * DXClient Help commands Generated by XML WebHelp","title":"Dxclient"},{"location":"containerization/dxclient/#dxclient-hcl-digital-experience","text":"DXClient is a tool that helps developers and administrators manage tasks, such as uploading one or more portlets or Script Applications, from source development environments to target HCL DX 9.5 deployments. This tool is capable of taking artifacts developed locally and deploying them to DX 9.5 servers deployed to supported on-premises platforms in standalone, cluster, or farm-topologies and supported Kubernetes platforms. Notes: * DXClient is enabled in supported Kubernetes platforms from HCL Digital Experience 9.5 CF192 and later releases. * DXClient is available as a Docker image from HCL DX 9.5 CF196 and later releases, See the installation section for more details. DXClient is a Node.js -based CLI tool and requires Node.js to be installed as a prerequisite. See video: Getting Started with DXClient on Red Hat OpenShift using HCL Digital Experience Container Update CF194 DXConnect DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later deployments, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands.","title":"DXClient | HCL Digital Experience"},{"location":"containerization/dxclient/#architecture","text":"Notes: 1. HCL DX 9.5 CF19 or later version is installed on target servers, on supported on premises platforms (Microsoft Windows, Linux or IBM AIX). 2. Beginning with HCL DX 9.5 Container Update CF192 and later releases, the DXConnect Servlet is pre-configured and started on supported Red Hat OpenShift and Kubernetes platforms that DX 9.5 containers are deployed to. 3. For supported on premises platforms with HCL DX 9.5 CF19 and later releases, the DXConnect application needs to be installed (refer to DXConnect Installation ) and started under the Configuration Wizard ( cw_profile ) on target servers. For more information on starting the Configuration Wizard, refer to Accessing the Configuration Wizard Remember: Configuration Wizard Administrator credentials are required to access the DXConnect application.","title":"Architecture"},{"location":"containerization/dxclient/#installing-using-the-docker-image","text":"Prerequisites: You must ensure that Docker is installed on the workstation. DXClient docker image comes with a script that you can use to run the docker image. This script creates a store directory,and copies the input files from the absolute path to the shared volume location. 1. Navigate to folder where you wish to use DXClient from. 2. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your HCL Digital Experience 9.5 CF196 or higher entitlements on the HCL Software License Portal. 3. Extract the DXClient.zip file locally. 4. Run docker load < dxclient.tar.gz. 5. Add the execution shell script to the bin directory to the PATH variable to be able to call dxclient from any directory. export PATH=<working-directory>/bin:$PATH For Microsoft Windows platforms: use dxclient.bat script in the bin directory to the PATH variable to be able to call DXClient from any directory. 6. Set appropriate permission. chmod xxx <working-directory>/bin Run 'dxclient -V' to verify that the dxclient command line is installed. A folder named store will be created in your working directory. This is the shared volume location to your docker container. Configuration, logger, output, and sample files under location - /store. Common command arguments can be pre-configured inside the config.json file available under <working-directory>/store folder. A sample configuration file that could be used on-premises platforms in standalone, cluster platforms is also available under <working-directory>/store/samples/sample-configurations/default-config.json for reference.","title":"Installing using the Docker image"},{"location":"containerization/dxclient/#installing-using-the-node-package-file-deprecated-in-cf196","text":"Prerequisites: Node.js version 12.18.3 is the minimum supported version, and must be installed on the local workstation or automation server. Note: DXClient node package is deprecated in the HCL Digital Experience Container CF196 release. It might be removed in the future releases. You are encouraged to use the DXClient Docker package from CF Container release CF196 and later. Complete the following steps to install the DXClient tool in your local development workstation or automation server.Note: If you are upgrading from CF19, CF191, or later releases, you should first unlink the current version using the following command before installing the newer version.Syntax for Linux and Apple macOS platforms: make unlink Syntax for Microsoft Windows platforms: make_unlink.bat Ensure that Node.js version 12.18.3 or later version is installed to the local workstation. The DXClient tool is supported on Microsoft Windows, Linux, and Apple macOS workstations and automation servers. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your DX 9.5 CF19 or later entitlements on the HCL Software License Portal . Reference the Docker topic for the latest list of HCL DX 9.5 files available for download. Extract the DXClient.zip file locally. From the extracted folder, run the following command.For Linux and Apple macOS platforms: make install For Microsoft Windows platforms: make_install.bat The following commands are run: 6. Run the following command to link your application to the local npm module in your machine. Refer to the following Notes section before you proceed.For Linux and Apple MacOS platforms: make link For Microsoft Windows platforms: make_link.bat Notes: * Avoid using this command when scripting deployments from an automation server (for example, in pipelines) as there is a chance of picking up the wrong dependencies during tool version upgrades. * If the `link` command is not used (such as on automation servers), then use the following command to run the application:For Linux and Apple MacOS platforms: ``` ./bin/dxclient ``` For Microsoft Windows platforms: ``` node bin/dxclient ``` DXClient node installation configuration Common command arguments can be pre-configured inside the config.json file available under dist/src/configuration folder. A sample configuration file that could be used for any of the supported Kubernetes platforms is also available under samples/sample-configurations.json for reference. { \"enableLogger\": true, \"dxProtocol\": \"\", \"hostname\": \"\", \"dxPort\": \"\", \"xmlConfigPath\": \"/wps/config\", \"dxUsername\": \"\", \"dxPassword\": \"\", \"dxSoapPort\": \"10033\", \"dxProfilePath\": \"\", \"dxConnectHostname\": \"\", \"dxConnectUsername\": \"\", \"dxConnectPassword\": \"\", \"dxConnectPort\": \"10202\", \"xmlFile\": \"\", \"warFile\": \"\", \"applicationFile\": \"\", \"applicationName\": \"\", \"themeName\": \"\", \"themePath\": \"\", \"outputFilePath\": \"\", \"dxConnectProtocol\": \"https\", \"wcmSiteArea\": \"\", \"excludes\": [ \"^bin$\", \"^lib$\", \"^src$\", \"^node_modules$\", \"^\\\\.classpath$\", \"^\\\\.project$\", \"^\\\\..*ignore$\", \"^config.json$\", \"^sp-cmdln.log$\", \"^sp.bat$\", \"^sp.sh$\" ], \"wcmContentPath\": \"\", \"wcmContentName\": \"\", \"prebuiltZip\": \"\", \"contenthandlerPath\": \"/wps/mycontenthandler\", \"mainHtmlFile\": \"\", \"wcmContentTitle\": \"\", \"contentRoot\": \"\", \"wcmContentId\": \"\", \"virtualPortalContext\": \"\", \"projectContext\": \"\", \"versionName\": \"\", \"restoreAsPublished\": false } DXClient node uninstalling To uninstall the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make clean For Microsoft Windows platforms: make uninstall.bat To unlink the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make unlink For Microsoft Windows platforms: make_unlink.bat","title":"Installing using the node package file (deprecated in CF196)"},{"location":"containerization/dxclient/#verify-the-dxclient-installation","text":"Successful installation of the DXClient tool can be checked by using the \" dxclient -V \" command, which should show the version of the DXClient tool installed. Once installed, commands can be executed using the DXClient tool to perform CI / CD actions on HCL DX 9.5 servers. Notes: Refer to the list of features that were released in the following HCL DX 9.5 Container releases:* HCL DX 9.5 CF199 release: + DAM Staging + Create credential vault slot + Create syndication relation + Export and import multiple resource environment providers + Specify the context root for exporting and importing personalization rules * HCL DX 9.5 CF198 release: + List DAM schemas + Personalization export and import rules + Resource environment provider + Manage virtual portals * HCL DX 9.5 CF197 release: + Undeploy portlets + Deploy and undeploy themes + Deploy application + manage get-syndication report + Restart Core + Delete DAM schema * HCL DX 9.5 CF196 release: + Shared library * HCL DX 9.5 CF195 release: + Undeploy theme + MLS export and import of WCM library * HCL DX 9.5 CF193 release: + Restart DX Core server + Deploy Application + Managing syndicators + Managing subscribers * HCL DX 9.5 CF192 release: + Undeploy script applications + Deploy theme (EAR and WebDAV based) * HCL DX 9.5 CF19 release: + Deploy Portlets or Undeploy portlets + Deploy script applications + XML Access + Restore Script Application","title":"Verify the DXClient installation"},{"location":"containerization/dxclient/#dxclient-commands","text":"Command syntax conventions: dxclient [command] [options] Use the following command to execute the deploy portlet action: dxclient deploy-portlet [options] Use the following command to execute the undeploy portlet action: dxclient undeploy-portlet [options] Use the following command to execute the xmlaccess action: dxclient xmlaccess [options] Use the following command to execute the pull script application action: dxclient deploy-scriptapplication pull [options] Use the following command to execute the push script application action: dxclient deploy-scriptapplication push [options] Use the following command to execute the undeploy script application action: dxclient undeploy-scriptapplication [options] Use the following command to execute the restore script application action: dxclient restore-scriptapplication [options] Use the following command to execute the deploy application action: dxclient deploy-application [options] Use the following command to execute the DX Core restart action: dxclient restart-dx-core Use the following command to execute manage-subscriber action: dxclient manage-subscriber -h Use the following command to execute manage-syndicator action: dxclient manage-syndicator -h Use the following command to execute the deploy theme action: dxclient deploy-theme [options] Use the following command to execute the undeploy theme action: dxclient undeploy-theme [options] Use the following command to execute the manage-syndicator get-syndication-report action: dxclient manage-syndicator get-syndication-report [options] Use the following command to execute the shared-library action: dxclient shared-library [options] Use the following command to execute the delete DAM schema action: dxclient delete-dam-schema [options] Use the following command to list all DAM schemas present: dxclient list-dam-schemas [options] Use the following command to export the personalization rules from the target server: dxclient pzn-export [options] Use the following command to import the personalization rules into the target server: dxclient pzn-import [options] Use the following command to manage virtual portal tasks in the DX server: dxclient manage-virtual-portal [options] Use the following command to register subscriber: dxclient manage-dam-staging register-dam-subscriber [options] Use the following command to deregister subscriber: dxclient manage-dam-staging deregister-dam-subscriber [options] Use the following command to trigger manual sync: dxclient manage-dam-staging trigger-staging [options] Use the following command to create credential vault slot in the DX server: dxclient create-credential-vault [options] Use the following command to create the syndication relation between syndicator and subscriber in DX server: dxclient create-syndication-relation [options] Use the following command to create, update, delete, export or import a custom property from an existing Resource Environment Provider: dxclient resource-env-provider [options]","title":"DXClient commands"},{"location":"containerization/dxclient/#dxclient-help-commands","text":"The following commands show the Help documents for DXClient command usage. Use the following commands to display the Help document for DXClient: dxclient dxclient -h, --help Use the following command to display the DXClient version number: dxclient -V, --version Use the following command to display the detailed help for a specific command: dxclient help [command] On this page* Architecture * Installing using the Docker image * Installing using the node package file (deprecated in CF196) * Verify the DXClient installation * DXClient commands * DXClient Help commands Generated by XML WebHelp","title":"DXClient Help commands"},{"location":"containerization/dxconnect/","text":"DXConnect | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DXConnect | HCL Digital Experience DXConnect is a servlet-based internal application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later releases, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. This topic covers the DXConnect installation and configuration instructions. Authentication DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in an HCL DX 9.5 CF19 and later deployment, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTPS connection from a client development workstation or automation server to a target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Authentication DXConnect requires the cw_profile Administrator security role to access the application servlet APIs. DXConnect Installation To install DXConnect use the command below: ./ConfigEngine.sh install-dxconnect-application This task will not only install the DxConnect application, but it will create the \"DXC_ConfigSettings\" WAS Resource Environment Provider and will create two custom properties in that REP: DXCONNECT_MAX_MEMORY_SIZE_MB DXCONNECT_MAX_FILE_SIZE_MB To remove DXConnect use the command below: ./ConfigEngine.sh remove-dxconnect-application To re-install DXConnect use the command below: ./ConfigEngine.sh reinstall-dxconnect-application Notes: 1. In Standalone and Cluster setups, the ConfigEngine task should be run under the wp_profile to have DXConnect installed in the correct location, and a restart of the cw_profile server may be required.To verify it is installed on a given HCL DX Server 9.5 with CF19 or later, navigate to the Configuration Wizard Admin console and then under Enterprise Applications . The dxconnect application will appear on the console as shown in the example below. For more information on accessing and working with the Configuration Wizard, refer to Accessing the Configuration Wizard topics. 2. In Red Hat OpenShift, the route for DXConnect is available under the name dx-deployment-service-dxconnect. For the other supported platforms, there is only one route path as usual. Generated by XML WebHelp","title":"Dxconnect"},{"location":"containerization/dxconnect/#dxconnect-hcl-digital-experience","text":"DXConnect is a servlet-based internal application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later releases, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. This topic covers the DXConnect installation and configuration instructions.","title":"DXConnect | HCL Digital Experience"},{"location":"containerization/dxconnect/#authentication","text":"DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in an HCL DX 9.5 CF19 and later deployment, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTPS connection from a client development workstation or automation server to a target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Authentication DXConnect requires the cw_profile Administrator security role to access the application servlet APIs. DXConnect Installation To install DXConnect use the command below: ./ConfigEngine.sh install-dxconnect-application This task will not only install the DxConnect application, but it will create the \"DXC_ConfigSettings\" WAS Resource Environment Provider and will create two custom properties in that REP: DXCONNECT_MAX_MEMORY_SIZE_MB DXCONNECT_MAX_FILE_SIZE_MB To remove DXConnect use the command below: ./ConfigEngine.sh remove-dxconnect-application To re-install DXConnect use the command below: ./ConfigEngine.sh reinstall-dxconnect-application Notes: 1. In Standalone and Cluster setups, the ConfigEngine task should be run under the wp_profile to have DXConnect installed in the correct location, and a restart of the cw_profile server may be required.To verify it is installed on a given HCL DX Server 9.5 with CF19 or later, navigate to the Configuration Wizard Admin console and then under Enterprise Applications . The dxconnect application will appear on the console as shown in the example below. For more information on accessing and working with the Configuration Wizard, refer to Accessing the Configuration Wizard topics. 2. In Red Hat OpenShift, the route for DXConnect is available under the name dx-deployment-service-dxconnect. For the other supported platforms, there is only one route path as usual. Generated by XML WebHelp","title":"Authentication"},{"location":"containerization/dxcoreserver/","text":"DX Core server | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DX Core server | HCL Digital Experience This topic provides information about restarting the DX Core server by using the DXClient tool. Restart DX Core server The restart-dx-core command is used to restart the DX Core server. Command description This command invokes the restart-dx-core tool inside the DXClient and runs the DX Core restart action. dxclient restart-dx-core Help command This command shows the help information for restart-dx-core command usage: dxclient restart-dx-core -h Command options Use this attribute to specify the username that is required for authenticating with the DX Core -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example Usage: dxclient restart-dx-core -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server> Limitation In Kubernetes based deployments, if there are more than one pod for the core container, the restart command of DXClient only restarts the pod it is connected to and not all running pods. For a full restart of all pods, leverage using the Kubernetes interfaces like kubectl . Generated by XML WebHelp","title":"Dxcoreserver"},{"location":"containerization/dxcoreserver/#dx-core-server-hcl-digital-experience","text":"This topic provides information about restarting the DX Core server by using the DXClient tool.","title":"DX Core server | HCL Digital Experience"},{"location":"containerization/dxcoreserver/#restart-dx-core-server","text":"The restart-dx-core command is used to restart the DX Core server. Command description This command invokes the restart-dx-core tool inside the DXClient and runs the DX Core restart action. dxclient restart-dx-core Help command This command shows the help information for restart-dx-core command usage: dxclient restart-dx-core -h Command options Use this attribute to specify the username that is required for authenticating with the DX Core -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example Usage: dxclient restart-dx-core -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server> Limitation In Kubernetes based deployments, if there are more than one pod for the core container, the restart command of DXClient only restarts the pod it is connected to and not all running pods. For a full restart of all pods, leverage using the Kubernetes interfaces like kubectl . Generated by XML WebHelp","title":"Restart DX Core server"},{"location":"containerization/helm_arch_applications/","text":"import useBaseUrl from '@docusaurus/useBaseUrl'; This document will provide you with the deployment architecture of each application inside the HCL Digital Experience Kubernetes deployment using Helm Charts. Applications This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed. Core Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid. Ring API Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation. Content Composer Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities. Digital Asset Management Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data. Persistence Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller. Image Processor Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management. Design Studio (beta) Depends on: Core, Ring API Type: Stateless Runtime Controller Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence. Interdependency Matrix This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Applications"},{"location":"containerization/helm_arch_applications/#applications","text":"This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed.","title":"Applications"},{"location":"containerization/helm_arch_applications/#core","text":"Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid.","title":"Core"},{"location":"containerization/helm_arch_applications/#ring-api","text":"Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation.","title":"Ring API"},{"location":"containerization/helm_arch_applications/#content-composer","text":"Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities.","title":"Content Composer"},{"location":"containerization/helm_arch_applications/#digital-asset-management","text":"Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data.","title":"Digital Asset Management"},{"location":"containerization/helm_arch_applications/#persistence","text":"Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller.","title":"Persistence"},{"location":"containerization/helm_arch_applications/#image-processor","text":"Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management.","title":"Image Processor"},{"location":"containerization/helm_arch_applications/#design-studio-beta","text":"Depends on: Core, Ring API Type: Stateless","title":"Design Studio (beta)"},{"location":"containerization/helm_arch_applications/#runtime-controller","text":"Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence.","title":"Runtime Controller"},{"location":"containerization/helm_arch_applications/#interdependency-matrix","text":"This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Interdependency Matrix"},{"location":"containerization/helm_arch_applications_o/","text":"import useBaseUrl from '@docusaurus/useBaseUrl'; This document will provide you with the deployment architecture of each application inside the HCL Digital Experience Kubernetes deployment using Helm Charts. Applications This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed. Core Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid. Ring API Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation. Content Composer Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities. Digital Asset Management Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data. Persistence Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller. Image Processor Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management. Design Studio (beta) Depends on: Core, Ring API Type: Stateless Runtime Controller Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence. Interdependency Matrix This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Applications"},{"location":"containerization/helm_arch_applications_o/#applications","text":"This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed.","title":"Applications"},{"location":"containerization/helm_arch_applications_o/#core","text":"Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid.","title":"Core"},{"location":"containerization/helm_arch_applications_o/#ring-api","text":"Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation.","title":"Ring API"},{"location":"containerization/helm_arch_applications_o/#content-composer","text":"Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities.","title":"Content Composer"},{"location":"containerization/helm_arch_applications_o/#digital-asset-management","text":"Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data.","title":"Digital Asset Management"},{"location":"containerization/helm_arch_applications_o/#persistence","text":"Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller.","title":"Persistence"},{"location":"containerization/helm_arch_applications_o/#image-processor","text":"Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management.","title":"Image Processor"},{"location":"containerization/helm_arch_applications_o/#design-studio-beta","text":"Depends on: Core, Ring API Type: Stateless","title":"Design Studio (beta)"},{"location":"containerization/helm_arch_applications_o/#runtime-controller","text":"Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence.","title":"Runtime Controller"},{"location":"containerization/helm_arch_applications_o/#interdependency-matrix","text":"This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Interdependency Matrix"},{"location":"containerization/portlets/","text":"Portlets | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Portlets | HCL Digital Experience This topic provides information about the deployment and undeployment of portlets. Deploy Portlets The deploy-portlet command is used to deploy one or more new or updated portlets from a source client or server environment to target HCL DX 9.5 CF19 or later server using a provided input XMLAccess file and deployable Portlet WAR file.Note: The synchronization mode of all nodes in a clustered DX environment must be consistently set for a newly deployed portlet to be automatically started; otherwise redeployment or a manual start is required. Required files XMLAccess file This xml file should contain the definition of the web application along with the details of the portlet(s) to be deployed. The web archive file path referred to in this file inside the URL element is ignored, but the URL element itself must exist as it is dynamically replaced when the command is executed. A sample XML file for deploying portlet(s) can be found in the samples directory of DXClient (samples/DeployPortlet.xml) or in DX server located in the following directory: PortalServer_root/doc/xml-samples/DeployPortlet.xml. Portlet Application web archive file This web archive .war file should contain the necessary portlet artifacts for deployment, as per the JSR 286 portlet standard. Refer to Importing WAR files | HCL Digital Experience Command dxclient deploy-portlet -xmlFile <path> -warFile <path> Help command This command shows the help document on the deploy-portlet command usage: dxclient deploy-portlet -h Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to XMLAccess input file> Use this attribute to specify the local path to the WAR file to be deployed: -warFile <Absolute or relative path to deployable war file> Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value will typically be the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the dist/src/configuration directory of the DXClient installation. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Undeploy portlets The undeploy-portlet command is used to undeploy the portlets in the target DX servers.Note: Undeploy-portlet command takes a backup of the XML file of the deployed portlet application and application (EAR) if user has given enableBackup as true. By default, enableBackup is set to true and placed in the store/outputFiles/portlets/backup/undeploy-portlet/ . In case, if the undeployed portlet is required again, then the user can restore the portlet WAR file from the downloaded portlet application EAR file along with the exported deployable portlet application XML file. Command description This command invokes the undeploy-portlet tool inside the DXClient. The undeploy-portlet dxtool uses the provided files and executes the undeploy portlet task. dxclient undeploy-portlet Help command This command shows the help information for undeploy-portlet command usage: dxclient undeploy-portlet -h Required files This file should contain the definition of the web application along with the undeploy portlet. dxclient undeploy-portlet -xmlFile <path> Command options Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/configwps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to take the backup of portlet application before undeploying it: -enableBackup <value> Commands required when enableBackup is set to true Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example usage: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> Example Usage when enableBackup is set to true: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -enableBackup true -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy Portlets * Undeploy portlets Generated by XML WebHelp","title":"Portlets"},{"location":"containerization/portlets/#portlets-hcl-digital-experience","text":"This topic provides information about the deployment and undeployment of portlets.","title":"Portlets | HCL Digital Experience"},{"location":"containerization/portlets/#deploy-portlets","text":"The deploy-portlet command is used to deploy one or more new or updated portlets from a source client or server environment to target HCL DX 9.5 CF19 or later server using a provided input XMLAccess file and deployable Portlet WAR file.Note: The synchronization mode of all nodes in a clustered DX environment must be consistently set for a newly deployed portlet to be automatically started; otherwise redeployment or a manual start is required. Required files XMLAccess file This xml file should contain the definition of the web application along with the details of the portlet(s) to be deployed. The web archive file path referred to in this file inside the URL element is ignored, but the URL element itself must exist as it is dynamically replaced when the command is executed. A sample XML file for deploying portlet(s) can be found in the samples directory of DXClient (samples/DeployPortlet.xml) or in DX server located in the following directory: PortalServer_root/doc/xml-samples/DeployPortlet.xml. Portlet Application web archive file This web archive .war file should contain the necessary portlet artifacts for deployment, as per the JSR 286 portlet standard. Refer to Importing WAR files | HCL Digital Experience Command dxclient deploy-portlet -xmlFile <path> -warFile <path> Help command This command shows the help document on the deploy-portlet command usage: dxclient deploy-portlet -h Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to XMLAccess input file> Use this attribute to specify the local path to the WAR file to be deployed: -warFile <Absolute or relative path to deployable war file> Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value will typically be the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the dist/src/configuration directory of the DXClient installation. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation.","title":"Deploy Portlets"},{"location":"containerization/portlets/#undeploy-portlets","text":"The undeploy-portlet command is used to undeploy the portlets in the target DX servers.Note: Undeploy-portlet command takes a backup of the XML file of the deployed portlet application and application (EAR) if user has given enableBackup as true. By default, enableBackup is set to true and placed in the store/outputFiles/portlets/backup/undeploy-portlet/ . In case, if the undeployed portlet is required again, then the user can restore the portlet WAR file from the downloaded portlet application EAR file along with the exported deployable portlet application XML file. Command description This command invokes the undeploy-portlet tool inside the DXClient. The undeploy-portlet dxtool uses the provided files and executes the undeploy portlet task. dxclient undeploy-portlet Help command This command shows the help information for undeploy-portlet command usage: dxclient undeploy-portlet -h Required files This file should contain the definition of the web application along with the undeploy portlet. dxclient undeploy-portlet -xmlFile <path> Command options Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/configwps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to take the backup of portlet application before undeploying it: -enableBackup <value> Commands required when enableBackup is set to true Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example usage: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> Example Usage when enableBackup is set to true: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -enableBackup true -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy Portlets * Undeploy portlets Generated by XML WebHelp","title":"Undeploy portlets"},{"location":"containerization/resourceenvironments/","text":"Resource environment provider | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Resource environment provider | HCL Digital Experience This topic describes the commands that are used to create, update, or delete custom properties from an existing resource environment. It also provides the commands to export or import multiple resource environment providers. Resource environment commands Command description: The resource-env-provider command is used to create, update or delete a custom property from an existing Resource Environment Provider, and to export or import multiple resource environment providers. dxclient resource-env-provider Help command: This command shows the help information for resource-env-provider command usage: dxclient resource-env-provider -h Help command for creating the resource environment property: dxclient resource-env-provider create-property -h Help command for updating the resource environment property: dxclient resource-env-provider update-property -h Help command for deleting the resource environment property: dxclient resource-env-provider delete-property -h Help command for exporting the resource environment property: dxclient resource-env-provider export-properties -h Help command for importing the resource environment property: dxclient resource-env-provider import-properties -h Commands: Create a custom property from an existing resource environment: resource-env-provider create-property [OPTIONS] Update a custom property from an existing resource environment: resource-env-provider update-property [OPTIONS] Delete a custom property from an existing resource environment: resource-env-provider delete-property[OPTIONS] Export all the existing resource environment providers: resource-env-provider export-properties [OPTIONS] Import all the existing resource environment providers provided in the input file containing the resource environment providers: resource-env-provider import-properties [OPTIONS] Command options: Use this attribute to specify the protocol with which to connect to the server: -dxProtocol <value> Use this attribute to specify the hostname of the target server: -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443): -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server: -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server: -dxPassword <value> Use this attribute to specify the config wizard home (route change is only in case of Open Shift Kubernetes Environment, otherwise it is the same as hostname) that is required for authenticating to the cw_profile: -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment, dxConnectPort is 443): -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile: -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile: -dxConnectPassword <value> Use this attribute to specify the name of the Resource Environment Provider: -providerName <value> Use this attribute to specify the name of the Custom Property: -propertyName <value> Use this attribute to specify the value of the Custom Property: -propertyValue <value> Use this attribute to specify the description of the Custom Property: -propertyDesc <value> Command options required for exporting and importing resource environment properties: Use this attribute to specify the configuration wizard home (route change is only in the case of Open Shift Kubernetes Environment, otherwise it is same as hostname) that is required for authenticating to the cw_profile: -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment, dxConnectPort is 443): -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile: -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile: -dxConnectPassword <value> Use this attribute to specify the username of the DX WAS server: -dxWASUsername <value> Use this attribute to specify the password of the DX WAS server: -dxWASPassword <value> Use this attribute to specify the profile name of the DX core server: -dxProfileName <Profile name of the DX core server> For importing resource environment properties, use this attribute to specify the File path: -filePath <value> Example Usage: For creating property: dxclient resource-env-provider create-property -providerName <providerName> -propertyName <propertyName> -propertyValue <propertyValue> For updating property: dxclient resource-env-provider update-property -providerName <providerName> -propertyName <propertyName> -propertyValue <modifiedpropertyValue> For deleting property: dxclient resource-env-provider delete-property -providerName <providerName> -propertyName <propertyName> -propertyValue <modifiedpropertyValue> For exporting property: dxclient resource-env-provider export-properties -dxProfileName <dxProfileName> For importing property: dxclient resource-env-provider import-properties -dxProfileName <dxProfileName> -filePath <filePath> Generated by XML WebHelp","title":"Resourceenvironments"},{"location":"containerization/resourceenvironments/#resource-environment-provider-hcl-digital-experience","text":"This topic describes the commands that are used to create, update, or delete custom properties from an existing resource environment. It also provides the commands to export or import multiple resource environment providers.","title":"Resource environment provider | HCL Digital Experience"},{"location":"containerization/resourceenvironments/#resource-environment-commands","text":"Command description: The resource-env-provider command is used to create, update or delete a custom property from an existing Resource Environment Provider, and to export or import multiple resource environment providers. dxclient resource-env-provider Help command: This command shows the help information for resource-env-provider command usage: dxclient resource-env-provider -h Help command for creating the resource environment property: dxclient resource-env-provider create-property -h Help command for updating the resource environment property: dxclient resource-env-provider update-property -h Help command for deleting the resource environment property: dxclient resource-env-provider delete-property -h Help command for exporting the resource environment property: dxclient resource-env-provider export-properties -h Help command for importing the resource environment property: dxclient resource-env-provider import-properties -h Commands: Create a custom property from an existing resource environment: resource-env-provider create-property [OPTIONS] Update a custom property from an existing resource environment: resource-env-provider update-property [OPTIONS] Delete a custom property from an existing resource environment: resource-env-provider delete-property[OPTIONS] Export all the existing resource environment providers: resource-env-provider export-properties [OPTIONS] Import all the existing resource environment providers provided in the input file containing the resource environment providers: resource-env-provider import-properties [OPTIONS] Command options: Use this attribute to specify the protocol with which to connect to the server: -dxProtocol <value> Use this attribute to specify the hostname of the target server: -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443): -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server: -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server: -dxPassword <value> Use this attribute to specify the config wizard home (route change is only in case of Open Shift Kubernetes Environment, otherwise it is the same as hostname) that is required for authenticating to the cw_profile: -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment, dxConnectPort is 443): -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile: -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile: -dxConnectPassword <value> Use this attribute to specify the name of the Resource Environment Provider: -providerName <value> Use this attribute to specify the name of the Custom Property: -propertyName <value> Use this attribute to specify the value of the Custom Property: -propertyValue <value> Use this attribute to specify the description of the Custom Property: -propertyDesc <value> Command options required for exporting and importing resource environment properties: Use this attribute to specify the configuration wizard home (route change is only in the case of Open Shift Kubernetes Environment, otherwise it is same as hostname) that is required for authenticating to the cw_profile: -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment, dxConnectPort is 443): -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile: -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile: -dxConnectPassword <value> Use this attribute to specify the username of the DX WAS server: -dxWASUsername <value> Use this attribute to specify the password of the DX WAS server: -dxWASPassword <value> Use this attribute to specify the profile name of the DX core server: -dxProfileName <Profile name of the DX core server> For importing resource environment properties, use this attribute to specify the File path: -filePath <value> Example Usage: For creating property: dxclient resource-env-provider create-property -providerName <providerName> -propertyName <propertyName> -propertyValue <propertyValue> For updating property: dxclient resource-env-provider update-property -providerName <providerName> -propertyName <propertyName> -propertyValue <modifiedpropertyValue> For deleting property: dxclient resource-env-provider delete-property -providerName <providerName> -propertyName <propertyName> -propertyValue <modifiedpropertyValue> For exporting property: dxclient resource-env-provider export-properties -dxProfileName <dxProfileName> For importing property: dxclient resource-env-provider import-properties -dxProfileName <dxProfileName> -filePath <filePath> Generated by XML WebHelp","title":"Resource environment commands"},{"location":"containerization/scriptapplications/","text":"Script applications | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Script applications | HCL Digital Experience This topic provides information about the deployment, undeployment, and restoration of script applications. Deploy script applications The deploy-scriptapplication command is used with the DXClient tool to push or pull Script Applications between a local development workstation or automation server and DX 9.5 CF19 or later servers. The command will push or pull the files that make up a script application to or from a Script Application instance stored in a Web Content Manager library on the server. Required Files : The script application push command in the DXClient tool requires a Script Application zip file or an extracted folder of the same (identified by the prebuiltZip or contentRoot attributes respectively). For more information on Script Applications, refer to the Script Application topics in the HCL DX Help Center. Command This command invokes the deploy-scriptapplication command inside the DXClient tool to either push or pull a script application: dxclient deploy-scriptapplication Subcommands Use this command to create or update the content of a Script Application on the HCL DX server: push [options] Use this command to download the content of a Script Application from the HCL DX server: pull [options] Help command This command shows the help document on the deploy-scriptapplication command: dxclient deploy-scriptapplication pull -h dxclient deploy-scriptapplication push -h Options for the pull subcommand Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on DX server (example: /wps/mycontenthandler ): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that contains the Script Application instance that you want to retrieve, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM content ID of the Script Application content item: -wcmContentId <value> Options for the push subcommand Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on the DX server (e.g. /wps/mycontenthandler): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that should receive the Script Application instance being pushed, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM ID of the Script Application content item: -wcmContentId <value> Use this attribute to specify the SiteArea containing the Script Application content item: -wcmSiteArea <value> Use this attribute to specify the name of the Script Application content item to be created or updated: -wcmContentName <value> Use this attribute to specify the full WCM path of the Script Application content item to be created or updated: -wcmContentPath <value> Use this attribute to set or update the title of the Script Application content item: -wcmContentTitle <value> Use this attribute to specify the path to the main HTML file within the Script Application: -mainHtmlFile <value> Use this attribute to specify the absolute or relative path to the Script Application's content as a ZIP file: -prebuiltZip <value> Use this attribute to specify the absolute or relative path to the Script Application's content in a directory: contentRoot <value> Notes: * At least one of (a) wcmContentId , (b) wcmContentPath or (c) both wcmContentName and wcmSiteArea must be specified. If multiple options are provided, then the priority order goes as follows: (a), then (b), and then (c). * Use wcmContentId only if you are updating an existing Script Application instance - for new Script Applications specify either (a) wcmContentPath or (b) both wcmContentName and wcmSiteArea . * mainHtmlFile is mandatory. * The outputfile for pull will be generated inside store/outputFiles/sp-pull-output. * When prebuiltZip is specified, the main HTML file path must be relative to the top-level directory in the compressed file. All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line will override values set in the config.json file. Example Usage: For Script Application Pull: dxclient deploy-scriptapplication pull -wcmContentId <wcmContentId> If all required options are configured in config.json of the DX Client tool, then execute: dxclient deploy-scriptapplication pull For Script Application Push, if the Script Application is extracted to a folder named temp at the root of the DXClient machine: dxclient deploy-scriptapplication push -contentRoot /temp -wcmSiteArea \"Script Application Library/Script Applications/\" -wcmContentName DemoScriptApplication If the Script Application is available as a .zip file in a folder named temp on the DXClient tool location, execute: dxclient deploy-scriptapplication push -prebuiltZip /temp/DemoScriptApplication.zip -wcmSiteArea \"Script Application Library/Script Applications/\" -wcmContentName DemoScriptApplication If all required options are configured in the config.json at the /dist/src/configuration path of the DXClient tool, then execute: dxclient deploy-scriptapplication push Undeploy script applications The undeploy-scriptapplication command is used to remove a script application from a target HCL DX 9.5 CF192 or later servers. Required file This command invokes the undeploy-scriptapplication tool inside the DXClient. The undeploy-scriptapplication dxtool uses the provided files and execute the undeploy scriptapplication task. Command dxclient undeploy-scriptapplication -wcmContentId <value> Help command This command shows the help information for undeploy-scriptapplication command usage: dxclient undeploy-scriptapplication -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on DX server (example, /wps/mycontenthandler ): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that contains the Script Application instance that you want to retrieve, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM content ID of the Script Application content item: -wcmContentId <value> Use this tag to forcefully delete the Script Application. -f All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient undeploy-scriptapplication -wcmContentId <wcm-content-id> dxclient undeploy-scriptapplication -wcmContentId <wcm-content-id> -f Restore Script Application The restore-scriptapplication command is used to restore a script application into one of its previous versions present in the target HCL DX 9.5 CF 19 or later servers. Required file This command invokes the restore-scriptapplication tool inside the DXClient. The restore-scriptapplication dxtool uses the provided files and execute the restore scriptapplication task. Command dxclient restore-scriptapplication -wcmContentId <value> -versionName <version-name> Help command This command shows the help information for restore-scriptapplication command usage: dxclient restore-scriptapplication -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on DX server (example, /wps/mycontenthandler ): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that contains the Script Application instance that you want to retrieve, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM content ID of the Script Application content item: -wcmContentId <value> Use this attribute to specify the versionName for the Script Application. -versionName <value> Use this attribute to specify the restore as a draft or replace the published version of Script Application. -restoreAsPublished <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient restore-scriptapplication -wcmContentID <wcm-content-id> -versionName <version-name> -restoreAsPublished <restore-as-published> On this page* Deploy script applications * Undeploy script applications * Restore Script Application Generated by XML WebHelp","title":"Scriptapplications"},{"location":"containerization/scriptapplications/#script-applications-hcl-digital-experience","text":"This topic provides information about the deployment, undeployment, and restoration of script applications.","title":"Script applications | HCL Digital Experience"},{"location":"containerization/scriptapplications/#deploy-script-applications","text":"The deploy-scriptapplication command is used with the DXClient tool to push or pull Script Applications between a local development workstation or automation server and DX 9.5 CF19 or later servers. The command will push or pull the files that make up a script application to or from a Script Application instance stored in a Web Content Manager library on the server. Required Files : The script application push command in the DXClient tool requires a Script Application zip file or an extracted folder of the same (identified by the prebuiltZip or contentRoot attributes respectively). For more information on Script Applications, refer to the Script Application topics in the HCL DX Help Center. Command This command invokes the deploy-scriptapplication command inside the DXClient tool to either push or pull a script application: dxclient deploy-scriptapplication Subcommands Use this command to create or update the content of a Script Application on the HCL DX server: push [options] Use this command to download the content of a Script Application from the HCL DX server: pull [options] Help command This command shows the help document on the deploy-scriptapplication command: dxclient deploy-scriptapplication pull -h dxclient deploy-scriptapplication push -h Options for the pull subcommand Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on DX server (example: /wps/mycontenthandler ): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that contains the Script Application instance that you want to retrieve, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM content ID of the Script Application content item: -wcmContentId <value> Options for the push subcommand Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on the DX server (e.g. /wps/mycontenthandler): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that should receive the Script Application instance being pushed, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM ID of the Script Application content item: -wcmContentId <value> Use this attribute to specify the SiteArea containing the Script Application content item: -wcmSiteArea <value> Use this attribute to specify the name of the Script Application content item to be created or updated: -wcmContentName <value> Use this attribute to specify the full WCM path of the Script Application content item to be created or updated: -wcmContentPath <value> Use this attribute to set or update the title of the Script Application content item: -wcmContentTitle <value> Use this attribute to specify the path to the main HTML file within the Script Application: -mainHtmlFile <value> Use this attribute to specify the absolute or relative path to the Script Application's content as a ZIP file: -prebuiltZip <value> Use this attribute to specify the absolute or relative path to the Script Application's content in a directory: contentRoot <value> Notes: * At least one of (a) wcmContentId , (b) wcmContentPath or (c) both wcmContentName and wcmSiteArea must be specified. If multiple options are provided, then the priority order goes as follows: (a), then (b), and then (c). * Use wcmContentId only if you are updating an existing Script Application instance - for new Script Applications specify either (a) wcmContentPath or (b) both wcmContentName and wcmSiteArea . * mainHtmlFile is mandatory. * The outputfile for pull will be generated inside store/outputFiles/sp-pull-output. * When prebuiltZip is specified, the main HTML file path must be relative to the top-level directory in the compressed file. All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line will override values set in the config.json file. Example Usage: For Script Application Pull: dxclient deploy-scriptapplication pull -wcmContentId <wcmContentId> If all required options are configured in config.json of the DX Client tool, then execute: dxclient deploy-scriptapplication pull For Script Application Push, if the Script Application is extracted to a folder named temp at the root of the DXClient machine: dxclient deploy-scriptapplication push -contentRoot /temp -wcmSiteArea \"Script Application Library/Script Applications/\" -wcmContentName DemoScriptApplication If the Script Application is available as a .zip file in a folder named temp on the DXClient tool location, execute: dxclient deploy-scriptapplication push -prebuiltZip /temp/DemoScriptApplication.zip -wcmSiteArea \"Script Application Library/Script Applications/\" -wcmContentName DemoScriptApplication If all required options are configured in the config.json at the /dist/src/configuration path of the DXClient tool, then execute: dxclient deploy-scriptapplication push","title":"Deploy script applications"},{"location":"containerization/scriptapplications/#undeploy-script-applications","text":"The undeploy-scriptapplication command is used to remove a script application from a target HCL DX 9.5 CF192 or later servers. Required file This command invokes the undeploy-scriptapplication tool inside the DXClient. The undeploy-scriptapplication dxtool uses the provided files and execute the undeploy scriptapplication task. Command dxclient undeploy-scriptapplication -wcmContentId <value> Help command This command shows the help information for undeploy-scriptapplication command usage: dxclient undeploy-scriptapplication -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on DX server (example, /wps/mycontenthandler ): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that contains the Script Application instance that you want to retrieve, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM content ID of the Script Application content item: -wcmContentId <value> Use this tag to forcefully delete the Script Application. -f All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient undeploy-scriptapplication -wcmContentId <wcm-content-id> dxclient undeploy-scriptapplication -wcmContentId <wcm-content-id> -f","title":"Undeploy script applications"},{"location":"containerization/scriptapplications/#restore-script-application","text":"The restore-scriptapplication command is used to restore a script application into one of its previous versions present in the target HCL DX 9.5 CF 19 or later servers. Required file This command invokes the restore-scriptapplication tool inside the DXClient. The restore-scriptapplication dxtool uses the provided files and execute the restore scriptapplication task. Command dxclient restore-scriptapplication -wcmContentId <value> -versionName <version-name> Help command This command shows the help information for restore-scriptapplication command usage: dxclient restore-scriptapplication -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server: -dxPort <value> Use this attribute to specify the path to the content handler servlet on DX server (example, /wps/mycontenthandler ): -contenthandlerPath <value> Use this attribute to specify the context of the virtual portal that contains the Script Application instance that you want to retrieve, if any: -virtualPortalContext <value> Use this attribute to specify the context of the portal project that manages the publication of changes to the Script Application instance, if any: -projectContext <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the WCM content ID of the Script Application content item: -wcmContentId <value> Use this attribute to specify the versionName for the Script Application. -versionName <value> Use this attribute to specify the restore as a draft or replace the published version of Script Application. -restoreAsPublished <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient restore-scriptapplication -wcmContentID <wcm-content-id> -versionName <version-name> -restoreAsPublished <restore-as-published> On this page* Deploy script applications * Undeploy script applications * Restore Script Application Generated by XML WebHelp","title":"Restore Script Application"},{"location":"containerization/sharedlibrary/","text":"Shared library | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Shared library | HCL Digital Experience Shared libraries are jar files representing code that is shared across multiple components of the customer, for example, portlets, themes, preprocessors, and others. Shared library The shared-library command is used to manage the jar files in the provided default shared library location. Default shared Library: DXCLib Default shared library location: <dx-server-profile>/PortalServer/sharedLibrary Note: For Shared Library artifact, the DX Server needs to be at HCL DX 9.5 CF196 or higher. The default shared library DXCLib is already configured and associated to application server. The shared-library command uses two sub-commands upload and delete to manage files in the DX server. The sub-command upload is used to upload jar files and sub-command delete is used to delete the files from the default shared library location provided below. Command Description This command invokes the shared library upload task inside the DXClient. This is used to upload jar files into the default shared library location. dxclient shared-library upload This command invokes the shared library delete task inside the DXClient. This is used to delete jar files from the default shared library location. dxclient shared-library delete Help command This command shows the help information for shared-library upload command usage: dxclient shared-library upload -h This command shows the help information for shared-library delete command usage: dxclient shared-library delete -h Common Command options Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile. -dxConnectPassword <value> Use this attribute to specify the profile name of the DX Core -dxProfileName <Name of the DX server profile> Command option for upload Use this attribute to specify the path to a jar/zip file or folder containing jars in it. -libFilePath <value> Command option for delete Use this attribute to specify the names of the jar files present in the shared library location on the server. -libFileNames <value> Note: For upload, the folder or zip file should contain only jars files that are to be uploaded to the default shared library location. All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration Example usage Use this attribute to specify the path to a jar/zip file or folder containing jars in it. dxclient shared-library upload -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX Server> -libFilePath <path to jar/zip/Folder> dxclient shared-library delete -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX Server> -libFileNames <file names> -libFilePath <value> Generated by XML WebHelp","title":"Sharedlibrary"},{"location":"containerization/sharedlibrary/#shared-library-hcl-digital-experience","text":"Shared libraries are jar files representing code that is shared across multiple components of the customer, for example, portlets, themes, preprocessors, and others.","title":"Shared library | HCL Digital Experience"},{"location":"containerization/sharedlibrary/#shared-library","text":"The shared-library command is used to manage the jar files in the provided default shared library location. Default shared Library: DXCLib Default shared library location: <dx-server-profile>/PortalServer/sharedLibrary Note: For Shared Library artifact, the DX Server needs to be at HCL DX 9.5 CF196 or higher. The default shared library DXCLib is already configured and associated to application server. The shared-library command uses two sub-commands upload and delete to manage files in the DX server. The sub-command upload is used to upload jar files and sub-command delete is used to delete the files from the default shared library location provided below. Command Description This command invokes the shared library upload task inside the DXClient. This is used to upload jar files into the default shared library location. dxclient shared-library upload This command invokes the shared library delete task inside the DXClient. This is used to delete jar files from the default shared library location. dxclient shared-library delete Help command This command shows the help information for shared-library upload command usage: dxclient shared-library upload -h This command shows the help information for shared-library delete command usage: dxclient shared-library delete -h Common Command options Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile. -dxConnectPassword <value> Use this attribute to specify the profile name of the DX Core -dxProfileName <Name of the DX server profile> Command option for upload Use this attribute to specify the path to a jar/zip file or folder containing jars in it. -libFilePath <value> Command option for delete Use this attribute to specify the names of the jar files present in the shared library location on the server. -libFileNames <value> Note: For upload, the folder or zip file should contain only jars files that are to be uploaded to the default shared library location. All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration Example usage Use this attribute to specify the path to a jar/zip file or folder containing jars in it. dxclient shared-library upload -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX Server> -libFilePath <path to jar/zip/Folder> dxclient shared-library delete -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX Server> -libFileNames <file names> -libFilePath <value> Generated by XML WebHelp","title":"Shared library"},{"location":"containerization/syndicatorsandsubscribers/","text":"Managing Web Content Syndicators and Subscribers using DXClient | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Managing Web Content Syndicators and Subscribers using DXClient | HCL Digital Experience The section provides information about using the DXClient process to automate the management of Web Content Manager Syndicators, Subscribers, and get-syndication reports. For more information on the process and settings of the Web Content Manager Syndicators and Subscribers, see How to manage syndicators and subscribers | HCL Digital Experience . Managing syndicators The manage-syndicator command is used to enable or disable the syndicator using the provided input. Command description This command invokes the manage-syndicator tool inside the DXClient. It is used to enable or disable the syndicator. dxclient manage-syndicator Help command This command shows the help document on the manage-syndicator command usage: dxclient manage-syndicator -h Command options Use this attribute to specify the hostname of the target server. -hostname <value> Use this attribute to specify the protocol with which to connect to the server. -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server. -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server. -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (example: /wps/mycontenthandler). -contenthandlerPath <value> Use this attribute to specify the UUID of the syndicator instance. -UUID <value> Use true or false to enable or disable the syndicator. -enable <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The options that are passed through the command line override the default values. Example Usage: dxclient manage-syndicator -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> -UUID <UUID> -enable <enable> Manage-syndicator get-syndication-report The manage-syndicator get-syndication-report command is used to fetch the failed reports of the syndicator. Command description This command invokes the syndicator-faileditems tool inside the DXClient, which is used to fetch the failed reports. dxclient manage-syndicator get-syndication-report Help command This command shows the help document on the manage-syndicator get-syndication-report command usage: dxclient manage-syndicator get-syndication-report -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (for example, /wps/mycontenthandler) -contenthandlerPath <value> Use this attribute to specify the UUID of the syndicator instance -UUID <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. This file is read by default.Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration The options that are passed through the command line override the default values. Example usage with UUID: dxclient manage-syndicator get-syndication-report -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> -UUID <UUID> Example usage without UUID: dxclient manage-syndicator get-syndication-report -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> Note: If UUID of a syndicator is specified, then the command provides the report for only the particular syndicator that is present in the target DX Server; otherwise, it provides the failure report for all syndicators. Managing subscribers The manage-subscriber command is used to enable or disable the subscriber using the provided input. Command description This command invokes the manage-subscriber tool inside the DXClient. It is used to enable/disable the subscriber. dxclient manage-subscriber Help command This command shows the help document on the manage-syndicator command usage: dxclient manage-subscriber -h Command options Use this attribute to specify the hostname of the target server. -hostname <value> Use this attribute to specify the protocol with which to connect to the server. -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443). -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server. -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server. -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (for example, /wps/mycontenthandler). -contenthandlerPath <value> Use this attribute to specify the UUID of the subscriber instance. -UUID <value> Use this attribute to specify the enable or disable the subscriber instance. Use true or false to enable or disable the subscriber. -enable <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration The options passed through command line overrides the default values. Example Usage: dxclient manage-subscriber -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> -UUID <UUID> -enable <enable> Create Syndication Relation The create-syndication-relation command is used to create the syndication relation between syndicator and subscriber in the DX server. Command description Use the create-syndication-relation to create syndication relation: dxclient create-syndication-relation Help command This command shows the help information for create-syndication-relation command usage: dxclient create-syndication-relation -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server (for Kubernetes Environment, dxPort is 443): -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> The path to the contenthandler servlet on the Script Application server: -contenthandlerPath <value> Syndicator URL of target server, for example, http(s)://host:port/wps/wcm: -syndicatorUrl <value> Use this attribute to specify the new syndicator name: -syndicatorName <value> Use this attribute to specify the new subscriber name: -subscriberName <value> Use this attribute to specify the Credential Vault Name of source server: -vaultSlotName <value> Whether the syndicator/subscriber pair is enabled on creation: isEnabled (default is true): -isEnabled <value> Whether the syndicator/subscriber pair is updateAfterCreation : updateAfterCreation (default is true): -updateAfterCreation <value> The libraries to syndicate eg. all-items,liveItems,liveProjectsItem,all-items,published-items and all-items-and-versions: -syndicationType <value> Use this attribute to specify the Libraries Name of target Server: -webContentLibraries <value> Use this attribute to specify the Subscriber URL, for example, http(s)://host:port/wps/wcm: -subscriberURL <value> Use this attribute to specify the Syndicator/subscriber mode: -mode <value> Use this attribute to specify the Credential Vault Name: -syndicatorVaultSlotName <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Use this attribute to specify the path to the Virtual portal Context: -virtualPortalContext <value> All the command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line overrides the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient create-syndication-relation -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -contenthandlerPath <contenthandlerPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -syndicatorUrl <syndicatorUrl> -syndicatorName <syndicatorName> -subscriberName <subscriberName> -vaultSlotName <vaultSlotName> -isEnabled <isEnabled> -updateAfterCreation <updateAfterCreation> -syndicationType <syndicationType> -webContentLibraries <webContentLibraries> -subscriberURL <subscriberURL> -mode <mode> -syndicatorVaultSlotName <syndicatorVaultSlotName> -dxContextRoot <dxContextRoot> -virtualPortalContext <virtualPortalContext> On this page* Managing syndicators * Manage-syndicator get-syndication-report * Managing subscribers * Create Syndication Relation Generated by XML WebHelp","title":"Syndicatorsandsubscribers"},{"location":"containerization/syndicatorsandsubscribers/#managing-web-content-syndicators-and-subscribers-using-dxclient-hcl-digital","text":"Experience The section provides information about using the DXClient process to automate the management of Web Content Manager Syndicators, Subscribers, and get-syndication reports. For more information on the process and settings of the Web Content Manager Syndicators and Subscribers, see How to manage syndicators and subscribers | HCL Digital Experience .","title":"Managing Web Content Syndicators and Subscribers using DXClient | HCL Digital"},{"location":"containerization/syndicatorsandsubscribers/#managing-syndicators","text":"The manage-syndicator command is used to enable or disable the syndicator using the provided input. Command description This command invokes the manage-syndicator tool inside the DXClient. It is used to enable or disable the syndicator. dxclient manage-syndicator Help command This command shows the help document on the manage-syndicator command usage: dxclient manage-syndicator -h Command options Use this attribute to specify the hostname of the target server. -hostname <value> Use this attribute to specify the protocol with which to connect to the server. -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server. -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server. -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (example: /wps/mycontenthandler). -contenthandlerPath <value> Use this attribute to specify the UUID of the syndicator instance. -UUID <value> Use true or false to enable or disable the syndicator. -enable <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The options that are passed through the command line override the default values. Example Usage: dxclient manage-syndicator -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> -UUID <UUID> -enable <enable>","title":"Managing syndicators"},{"location":"containerization/syndicatorsandsubscribers/#manage-syndicator-get-syndication-report","text":"The manage-syndicator get-syndication-report command is used to fetch the failed reports of the syndicator. Command description This command invokes the syndicator-faileditems tool inside the DXClient, which is used to fetch the failed reports. dxclient manage-syndicator get-syndication-report Help command This command shows the help document on the manage-syndicator get-syndication-report command usage: dxclient manage-syndicator get-syndication-report -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (for example, /wps/mycontenthandler) -contenthandlerPath <value> Use this attribute to specify the UUID of the syndicator instance -UUID <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. This file is read by default.Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration The options that are passed through the command line override the default values. Example usage with UUID: dxclient manage-syndicator get-syndication-report -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> -UUID <UUID> Example usage without UUID: dxclient manage-syndicator get-syndication-report -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> Note: If UUID of a syndicator is specified, then the command provides the report for only the particular syndicator that is present in the target DX Server; otherwise, it provides the failure report for all syndicators.","title":"Manage-syndicator get-syndication-report"},{"location":"containerization/syndicatorsandsubscribers/#managing-subscribers","text":"The manage-subscriber command is used to enable or disable the subscriber using the provided input. Command description This command invokes the manage-subscriber tool inside the DXClient. It is used to enable/disable the subscriber. dxclient manage-subscriber Help command This command shows the help document on the manage-syndicator command usage: dxclient manage-subscriber -h Command options Use this attribute to specify the hostname of the target server. -hostname <value> Use this attribute to specify the protocol with which to connect to the server. -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443). -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server. -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server. -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (for example, /wps/mycontenthandler). -contenthandlerPath <value> Use this attribute to specify the UUID of the subscriber instance. -UUID <value> Use this attribute to specify the enable or disable the subscriber instance. Use true or false to enable or disable the subscriber. -enable <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration The options passed through command line overrides the default values. Example Usage: dxclient manage-subscriber -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -contenthandlerPath <contenthandlerPath> -UUID <UUID> -enable <enable>","title":"Managing subscribers"},{"location":"containerization/syndicatorsandsubscribers/#create-syndication-relation","text":"The create-syndication-relation command is used to create the syndication relation between syndicator and subscriber in the DX server. Command description Use the create-syndication-relation to create syndication relation: dxclient create-syndication-relation Help command This command shows the help information for create-syndication-relation command usage: dxclient create-syndication-relation -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server (for Kubernetes Environment, dxPort is 443): -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> The path to the contenthandler servlet on the Script Application server: -contenthandlerPath <value> Syndicator URL of target server, for example, http(s)://host:port/wps/wcm: -syndicatorUrl <value> Use this attribute to specify the new syndicator name: -syndicatorName <value> Use this attribute to specify the new subscriber name: -subscriberName <value> Use this attribute to specify the Credential Vault Name of source server: -vaultSlotName <value> Whether the syndicator/subscriber pair is enabled on creation: isEnabled (default is true): -isEnabled <value> Whether the syndicator/subscriber pair is updateAfterCreation : updateAfterCreation (default is true): -updateAfterCreation <value> The libraries to syndicate eg. all-items,liveItems,liveProjectsItem,all-items,published-items and all-items-and-versions: -syndicationType <value> Use this attribute to specify the Libraries Name of target Server: -webContentLibraries <value> Use this attribute to specify the Subscriber URL, for example, http(s)://host:port/wps/wcm: -subscriberURL <value> Use this attribute to specify the Syndicator/subscriber mode: -mode <value> Use this attribute to specify the Credential Vault Name: -syndicatorVaultSlotName <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Use this attribute to specify the path to the Virtual portal Context: -virtualPortalContext <value> All the command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line overrides the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient create-syndication-relation -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -contenthandlerPath <contenthandlerPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -syndicatorUrl <syndicatorUrl> -syndicatorName <syndicatorName> -subscriberName <subscriberName> -vaultSlotName <vaultSlotName> -isEnabled <isEnabled> -updateAfterCreation <updateAfterCreation> -syndicationType <syndicationType> -webContentLibraries <webContentLibraries> -subscriberURL <subscriberURL> -mode <mode> -syndicatorVaultSlotName <syndicatorVaultSlotName> -dxContextRoot <dxContextRoot> -virtualPortalContext <virtualPortalContext> On this page* Managing syndicators * Manage-syndicator get-syndication-report * Managing subscribers * Create Syndication Relation Generated by XML WebHelp","title":"Create Syndication Relation"},{"location":"containerization/themes/","text":"Themes | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Themes | HCL Digital Experience This topic provides information about the deployment and undeployment of themes artifacts. Deploy theme The deploy-theme command is used to deploy a theme (EAR and WebDAV based) from a source client or server environment to a target HCL DX 9.5 CF192 or later server using the provided theme registration XML file, deployable EAR file, and WebDAV theme collection. Required files Theme Registration XML file: This XML file is required to register the theme into DX Server. Theme deployable EAR file: This EAR file containing theme data is used for deploying into the WebSphere Application Server. WebDAV theme collection: The theme collection folder/zip is used to create or update the collection in WebDAV file store of the DX Server.Notes: This command can execute below one or more tasks together:1. Theme Registration 2. Theme EAR deployment 3. WebDAV theme collection Command dxclient deploy-theme -xmlFile <path> -applicationFile <path> -applicationName <application name> -themeName <theme collection name> -themePath <folder/zip path of theme collection> Help command This command shows the help document on the deploy-theme command usage: dxclient deploy-theme -h Common Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Required options for Theme Registration Use this attribute to specify the local path to the theme registration XML file: -xmlFile <Absolute or relative path to theme registration xml input file> Use this attribute to specify the path to DX configuration endpoint (for example, /wps/config): -xmlConfigPath <value> Note: For theme registration, a backup of the complete DX configuration export (not including users) is taken and placed in store/outputFiles/themes/backup/foldername folder. Required options for Theme EAR deployment Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value is typically the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server: -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the theme EAR file path that is required while executing the deploy theme task: \u2013applicationFile <Absolute or relative path to deployable theme ear file> Use this attribute to specify the theme application name: -applicationName <value> Required options for creating/updating WebDAV theme collection Use this attribute to specify the theme name of the collection created under WebDAV server in DX: -themeName <value> Use this attribute to specify the theme file path that contains all static files to be pushed into DX theme, it accepts either folder or zip file path of the WebDAV theme collection: -themePath <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler): -contenthandlerPath <value> Notes: * For new WebDAV theme collection, DXClient tool adds the provided collection (folder/zip) to the WebDAV file store. * For existing WebDAV theme collection, the existing theme collection is replaced by the provided theme collection during the update. To get the latest theme collection from the DX server, see Exporting content from the filestore and make modifications on the same folder to get it updated in the DX Server WebDAV file store. * For WebDAV theme collection update, a backup of the existing theme collection is taken and placed in store/outputFiles/themes/backup/foldername folder. All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration/config.json Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient deploy-theme -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -xmlFile <xml-file-with-path> -applicationFile <application-file-with-path> -applicationName <application name> -themeName <theme-name> -themePath <theme-path> -dxProfileName <Profile name of the DX core server> Undeploy theme The undeploy-theme command can be used to undeploy a theme, including the EAR application and WebDAV files, and it also unregisters the registered theme from the target DX server.Note: If enableBackup is set to true, then undeploy-theme takes a backup of the deployed EAR theme, WebDAV theme collection, and completes DX configuration export (without users) and place it in the backup folder. When the user is downloading EAR, WeDAV, and XML to backup, we must separate it by the folder names store/outputFiles/themes/backup/foldername . The backup of EAR is placed in store/outputFiles/themes/backup/application . Users can restore the theme by using the backup files.Note: Pages might lose the applied theme references in the restored themes. Command description This command invokes the undeploy-theme tool inside the DXClient. This command uses the unregistered theme XML file, theme EAR application name and WebDAV theme collection name, and executes the undeploy theme task. dxclient undeploy-theme Help command This command shows the help document on the undeploy-theme command usage: dxclient undeploy-theme -h Required files Theme Unregistration XML file: This XML file is required to unregister the theme from target DX Server and must contain the details of the theme. The XML file must be provided when executing the undeploy theme task.This command can execute one or more of the following tasks at the same time:* Theme unregistration * Undeploy theme EAR application * Undeploy WebDAV theme collection Common commands Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443 ) -dxPort <value> Use this attribute to specify the username that is required for server authentication -dxUsername <value> Use this attribute to specify the password that is required for server authentication -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> Use this attribute to take the backup before undeploying theme -enableBackup <value> Note: User can set the enableBackup parameter as true to take backup before undeploying theme. The value is set to false by default.The options passed through command line override the default values. Required options for Theme Unregistration: Use this attribute to specify the theme registration xml file that is used while executing the undeploy theme task. For example, see the Theme-registration.xml file in the directory dxclient/samples/ -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to specify the path to DX configuration endpoint -xmlConfigPath <value> Required options for undeploying theme EAR application: Use this attribute to specify the configuration wizard home (change of route is only in case of Open Shift Kubernetes Enviornment, otherwise the route remains the same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR application name -applicationName <value> Required options for undeploying WebDAV theme collection: Use this attribute to specify the theme name of the collection created under WebDAV -themeName <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration/config.json Example usage: dxclient undeploy-theme -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -xmlFile <xml-file-with-path> -applicationName <application name> -themeName <theme-name> -enableBackup <enable-backup> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy theme * Undeploy theme Generated by XML WebHelp","title":"Themes"},{"location":"containerization/themes/#themes-hcl-digital-experience","text":"This topic provides information about the deployment and undeployment of themes artifacts.","title":"Themes | HCL Digital Experience"},{"location":"containerization/themes/#deploy-theme","text":"The deploy-theme command is used to deploy a theme (EAR and WebDAV based) from a source client or server environment to a target HCL DX 9.5 CF192 or later server using the provided theme registration XML file, deployable EAR file, and WebDAV theme collection. Required files Theme Registration XML file: This XML file is required to register the theme into DX Server. Theme deployable EAR file: This EAR file containing theme data is used for deploying into the WebSphere Application Server. WebDAV theme collection: The theme collection folder/zip is used to create or update the collection in WebDAV file store of the DX Server.Notes: This command can execute below one or more tasks together:1. Theme Registration 2. Theme EAR deployment 3. WebDAV theme collection Command dxclient deploy-theme -xmlFile <path> -applicationFile <path> -applicationName <application name> -themeName <theme collection name> -themePath <folder/zip path of theme collection> Help command This command shows the help document on the deploy-theme command usage: dxclient deploy-theme -h Common Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Required options for Theme Registration Use this attribute to specify the local path to the theme registration XML file: -xmlFile <Absolute or relative path to theme registration xml input file> Use this attribute to specify the path to DX configuration endpoint (for example, /wps/config): -xmlConfigPath <value> Note: For theme registration, a backup of the complete DX configuration export (not including users) is taken and placed in store/outputFiles/themes/backup/foldername folder. Required options for Theme EAR deployment Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value is typically the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server: -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the theme EAR file path that is required while executing the deploy theme task: \u2013applicationFile <Absolute or relative path to deployable theme ear file> Use this attribute to specify the theme application name: -applicationName <value> Required options for creating/updating WebDAV theme collection Use this attribute to specify the theme name of the collection created under WebDAV server in DX: -themeName <value> Use this attribute to specify the theme file path that contains all static files to be pushed into DX theme, it accepts either folder or zip file path of the WebDAV theme collection: -themePath <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler): -contenthandlerPath <value> Notes: * For new WebDAV theme collection, DXClient tool adds the provided collection (folder/zip) to the WebDAV file store. * For existing WebDAV theme collection, the existing theme collection is replaced by the provided theme collection during the update. To get the latest theme collection from the DX server, see Exporting content from the filestore and make modifications on the same folder to get it updated in the DX Server WebDAV file store. * For WebDAV theme collection update, a backup of the existing theme collection is taken and placed in store/outputFiles/themes/backup/foldername folder. All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration/config.json Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient deploy-theme -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -xmlFile <xml-file-with-path> -applicationFile <application-file-with-path> -applicationName <application name> -themeName <theme-name> -themePath <theme-path> -dxProfileName <Profile name of the DX core server>","title":"Deploy theme"},{"location":"containerization/themes/#undeploy-theme","text":"The undeploy-theme command can be used to undeploy a theme, including the EAR application and WebDAV files, and it also unregisters the registered theme from the target DX server.Note: If enableBackup is set to true, then undeploy-theme takes a backup of the deployed EAR theme, WebDAV theme collection, and completes DX configuration export (without users) and place it in the backup folder. When the user is downloading EAR, WeDAV, and XML to backup, we must separate it by the folder names store/outputFiles/themes/backup/foldername . The backup of EAR is placed in store/outputFiles/themes/backup/application . Users can restore the theme by using the backup files.Note: Pages might lose the applied theme references in the restored themes. Command description This command invokes the undeploy-theme tool inside the DXClient. This command uses the unregistered theme XML file, theme EAR application name and WebDAV theme collection name, and executes the undeploy theme task. dxclient undeploy-theme Help command This command shows the help document on the undeploy-theme command usage: dxclient undeploy-theme -h Required files Theme Unregistration XML file: This XML file is required to unregister the theme from target DX Server and must contain the details of the theme. The XML file must be provided when executing the undeploy theme task.This command can execute one or more of the following tasks at the same time:* Theme unregistration * Undeploy theme EAR application * Undeploy WebDAV theme collection Common commands Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment, dxPort is 443 ) -dxPort <value> Use this attribute to specify the username that is required for server authentication -dxUsername <value> Use this attribute to specify the password that is required for server authentication -dxPassword <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> Use this attribute to take the backup before undeploying theme -enableBackup <value> Note: User can set the enableBackup parameter as true to take backup before undeploying theme. The value is set to false by default.The options passed through command line override the default values. Required options for Theme Unregistration: Use this attribute to specify the theme registration xml file that is used while executing the undeploy theme task. For example, see the Theme-registration.xml file in the directory dxclient/samples/ -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to specify the path to DX configuration endpoint -xmlConfigPath <value> Required options for undeploying theme EAR application: Use this attribute to specify the configuration wizard home (change of route is only in case of Open Shift Kubernetes Enviornment, otherwise the route remains the same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR application name -applicationName <value> Required options for undeploying WebDAV theme collection: Use this attribute to specify the theme name of the collection created under WebDAV -themeName <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration/config.json Example usage: dxclient undeploy-theme -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -xmlFile <xml-file-with-path> -applicationName <application name> -themeName <theme-name> -enableBackup <enable-backup> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy theme * Undeploy theme Generated by XML WebHelp","title":"Undeploy theme"},{"location":"containerization/virtualportals/","text":"Managing virtual portals | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Managing virtual portals | HCL Digital Experience This topic describes the commands that are used in managing the virtual portal activities such as creating, listing, importing, or exporting virtual portals. Virtual Portal commands Command description The manage-virtual-portal command is used to manage virtual portal tasks such as create, list, export, and import in the DX server. dxclient manage-virtual-portal Help command This command shows the help document on the manage-virtual-portal command:* Help command for creating virtual portals: dxclient manage-virtual-portal create -h Help command for listing virtual portals: dxclient manage-virtual-portal list -h Help command for importing virtual portals: dxclient manage-virtual-portal import -h Help command for exporting virtual portals: dxclient manage-virtual-portal export -h Commands Create virtual portal task in the DX server: manage-virtual-portal create [OPTIONS] List virtual portal task in the DX server: manage-virtual-portal list [OPTIONS] Import virtual portal task in the DX server: manage-virtual-portal import [OPTIONS] Export virtual portal task in the DX server: manage-virtual-portal export [OPTIONS] Required Commands manage-virtual-portal create command: Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the configuration wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the profile name of the DX core server -dxProfileName <Profile name of the DX core server> Use this attribute to specify the username of the DX WAS server -dxWASUsername <value> Use this attribute to specify the password of the DX WAS server -dxWASPassword <value> Use this attribute to specify the virtual portal Title -vpTitle <value> Use this attribute to specify the virtual portal Realm -vpRealm <value> Use this attribute to specify the virtual portal AdminGroup -vpAdminGroup <value> Use this attribute to specify the virtual portal HostName -vpHostname <value> Use this attribute to specify the virtual portal Context -vpContext <value> Note: Create virtual portal task creates an empty virtual portal in the DX server. Example usage: dxclient manage-virtual-portal create -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX Server> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxWASUsername < Username of the DX WAS server> -dxWASPassword <Password of the DX WAS server> -vpTitle <virtual-portal-Title> -vpRealm <virtual-portal-realm> -vpAdminGroup <virtual-portal-adminGroup> -vpHostname <virtual-portal-hostname> -vpContext<virtual-portal-context> manage-virtual-portal list command Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the configuration wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the profile name of the DX core server -dxProfileName <Profile name of the DX core server> Use this attribute to specify the username of the DX WAS server -dxWASUsername <value> Use this attribute to specify the password of the DX WAS server -dxWASPassword <value> Example usage: dxclient manage-virtual-portal list -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <profile-name-of-the-DX-server> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxWASUsername <username-of-the-DX-WAS-server> -dxWASPassword <password-of-the-DX-WAS-server> manage-virtual-portal import command: Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (for example: /wps/config) -xmlConfigPath <value> Use this attribute to specify the XML file name with absolute path of the input file -xmlFile <value> Use this attribute to specify the virtual portal Context -vpContext <value> Limitation: Currently, import virtual portal feature supports only vpContext and does not support vpHostname . Support for Virtual portal with hostname might be added in the future release. Example Usage: dxclient manage-virtual-portal import -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -vpContext <virtual-portal-context> manage-virtual-portal export command: Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (for example: /wps/config) -xmlConfigPath <value> Use this attribute to specify the virtual portal Context -vpContext <value> Use this attribute to specify the virtual portal Title -vpTitle <value> Use this attribute to specify the XML file name with absolute path of the input file to export the virtual portal content. -xmlFile <value> Limitation: Currently, exporting virtual portal feature supports only vpContext and does not support vpHostname . Support for Virtual portal with hostname might be added in the future release. Example usage: dxclient manage-virtual-portal export -hostname <hostname> -dxProtocol <dxProtocol> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -vpTitle <vpTitle> -vpContext <vpContext> -xmlFile <xml-file-with-path> All the above command options can be configured in the config.json file of the tool, which would be read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Generated by XML WebHelp","title":"Virtualportals"},{"location":"containerization/virtualportals/#managing-virtual-portals-hcl-digital-experience","text":"This topic describes the commands that are used in managing the virtual portal activities such as creating, listing, importing, or exporting virtual portals.","title":"Managing virtual portals | HCL Digital Experience"},{"location":"containerization/virtualportals/#virtual-portal-commands","text":"Command description The manage-virtual-portal command is used to manage virtual portal tasks such as create, list, export, and import in the DX server. dxclient manage-virtual-portal Help command This command shows the help document on the manage-virtual-portal command:* Help command for creating virtual portals: dxclient manage-virtual-portal create -h Help command for listing virtual portals: dxclient manage-virtual-portal list -h Help command for importing virtual portals: dxclient manage-virtual-portal import -h Help command for exporting virtual portals: dxclient manage-virtual-portal export -h Commands Create virtual portal task in the DX server: manage-virtual-portal create [OPTIONS] List virtual portal task in the DX server: manage-virtual-portal list [OPTIONS] Import virtual portal task in the DX server: manage-virtual-portal import [OPTIONS] Export virtual portal task in the DX server: manage-virtual-portal export [OPTIONS] Required Commands manage-virtual-portal create command: Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the configuration wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the profile name of the DX core server -dxProfileName <Profile name of the DX core server> Use this attribute to specify the username of the DX WAS server -dxWASUsername <value> Use this attribute to specify the password of the DX WAS server -dxWASPassword <value> Use this attribute to specify the virtual portal Title -vpTitle <value> Use this attribute to specify the virtual portal Realm -vpRealm <value> Use this attribute to specify the virtual portal AdminGroup -vpAdminGroup <value> Use this attribute to specify the virtual portal HostName -vpHostname <value> Use this attribute to specify the virtual portal Context -vpContext <value> Note: Create virtual portal task creates an empty virtual portal in the DX server. Example usage: dxclient manage-virtual-portal create -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX Server> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxWASUsername < Username of the DX WAS server> -dxWASPassword <Password of the DX WAS server> -vpTitle <virtual-portal-Title> -vpRealm <virtual-portal-realm> -vpAdminGroup <virtual-portal-adminGroup> -vpHostname <virtual-portal-hostname> -vpContext<virtual-portal-context> manage-virtual-portal list command Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the configuration wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the profile name of the DX core server -dxProfileName <Profile name of the DX core server> Use this attribute to specify the username of the DX WAS server -dxWASUsername <value> Use this attribute to specify the password of the DX WAS server -dxWASPassword <value> Example usage: dxclient manage-virtual-portal list -dxConnectHostname <dxConnectHostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <profile-name-of-the-DX-server> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxWASUsername <username-of-the-DX-WAS-server> -dxWASPassword <password-of-the-DX-WAS-server> manage-virtual-portal import command: Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (for example: /wps/config) -xmlConfigPath <value> Use this attribute to specify the XML file name with absolute path of the input file -xmlFile <value> Use this attribute to specify the virtual portal Context -vpContext <value> Limitation: Currently, import virtual portal feature supports only vpContext and does not support vpHostname . Support for Virtual portal with hostname might be added in the future release. Example Usage: dxclient manage-virtual-portal import -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -vpContext <virtual-portal-context> manage-virtual-portal export command: Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (for example: /wps/config) -xmlConfigPath <value> Use this attribute to specify the virtual portal Context -vpContext <value> Use this attribute to specify the virtual portal Title -vpTitle <value> Use this attribute to specify the XML file name with absolute path of the input file to export the virtual portal content. -xmlFile <value> Limitation: Currently, exporting virtual portal feature supports only vpContext and does not support vpHostname . Support for Virtual portal with hostname might be added in the future release. Example usage: dxclient manage-virtual-portal export -hostname <hostname> -dxProtocol <dxProtocol> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -vpTitle <vpTitle> -vpContext <vpContext> -xmlFile <xml-file-with-path> All the above command options can be configured in the config.json file of the tool, which would be read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Generated by XML WebHelp","title":"Virtual Portal commands"},{"location":"containerization/xmlaccess/","text":"XML Access | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search XML Access | HCL Digital Experience This topic provides information about the xmlaccess command that is used to export or import portlet configurations. XML Access The xmlaccess command is used to export or import pages or portlet configurations from a target HCL DX 9.5 CF19 or later server using the input XMLAccess file. Required file XMLAccess file : This XML file must contain the configuration update or export operation for the web application. Command dxclient xmlaccess -xmlFile <path> Help command This command shows the help information for xmlaccess command usage: dxclient xmlaccess -h Command options Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to xmlaccess input file> All of the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation.Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line overrides values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient xmlaccess -xmlFile <xml-file-with-path> Generated by XML WebHelp","title":"Xmlaccess"},{"location":"containerization/xmlaccess/#xml-access-hcl-digital-experience","text":"This topic provides information about the xmlaccess command that is used to export or import portlet configurations.","title":"XML Access | HCL Digital Experience"},{"location":"containerization/xmlaccess/#xml-access","text":"The xmlaccess command is used to export or import pages or portlet configurations from a target HCL DX 9.5 CF19 or later server using the input XMLAccess file. Required file XMLAccess file : This XML file must contain the configuration update or export operation for the web application. Command dxclient xmlaccess -xmlFile <path> Help command This command shows the help information for xmlaccess command usage: dxclient xmlaccess -h Command options Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to xmlaccess input file> All of the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation.Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. Command options passed through the command line overrides values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Example usage: dxclient xmlaccess -xmlFile <xml-file-with-path> Generated by XML WebHelp","title":"XML Access"},{"location":"containerization/helm/personalization/","text":"Personalization rules | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Personalization rules | HCL Digital Experience This topic contains the commands that the administrators can use to export and import the personalization (PZN) rules from the source server to the target server as specified by the user. Export PZN rules Command description The pzn-export command is used to export the rules from the source server location specified by the user. dxclient pzn-export Help command This command shows the help information for pzn-export command usage: dxclient pzn-export -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443: -dxPort <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing: -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE'): -targetWorkspace <value> Note: The targetPath and targetWorkspace parameters are optional. If the user does not pass the respective parameters, then the default values are taken. Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-export -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> The outputfile for pzn export is generated in the following path: store/outputFiles/pznrules Import PZN rules Command description The pzn-import command is used to import the rules into the target server. dxclient pzn-import Required files Rules file: This file should contain the configuration XML representation of all the currently selected personalization objects. Help command This command shows the help information for pzn-import command usage: dxclient pzn-import -h Command options Use this attribute to specify the protocol with which to connect to the DX server -dxProtocol <value> Use this attribute to specify the hostname of the target DX server -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443 -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the import file path that is required while executing the pzn import task -rulesFilePath <Absolute or relative path to import nodes file> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE') -targetWorkspace <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Notes: * For Kubernetes environments, dxProtocol should be http , hostname should be localhost, dxPort should be 10039 as DXConnect doesn't support https due to SSL Handshake challenges at this time. * The dxProtocol , hostname , dxPort , targetWorkspace , and targetPath parameters are optional. If the user does not pass the respective parameters, then the default values are taken. All the above command options can be configured in the config.json file of the tool, which is read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-import -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxConnectPort <dxConnectPort> -rulesFilePath <rulesFilePath> On this page* Export PZN rules * Import PZN rules Generated by XML WebHelp","title":"Personalization"},{"location":"containerization/helm/personalization/#personalization-rules-hcl-digital-experience","text":"This topic contains the commands that the administrators can use to export and import the personalization (PZN) rules from the source server to the target server as specified by the user.","title":"Personalization rules | HCL Digital Experience"},{"location":"containerization/helm/personalization/#export-pzn-rules","text":"Command description The pzn-export command is used to export the rules from the source server location specified by the user. dxclient pzn-export Help command This command shows the help information for pzn-export command usage: dxclient pzn-export -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443: -dxPort <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing: -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE'): -targetWorkspace <value> Note: The targetPath and targetWorkspace parameters are optional. If the user does not pass the respective parameters, then the default values are taken. Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-export -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> The outputfile for pzn export is generated in the following path: store/outputFiles/pznrules","title":"Export PZN rules"},{"location":"containerization/helm/personalization/#import-pzn-rules","text":"Command description The pzn-import command is used to import the rules into the target server. dxclient pzn-import Required files Rules file: This file should contain the configuration XML representation of all the currently selected personalization objects. Help command This command shows the help information for pzn-import command usage: dxclient pzn-import -h Command options Use this attribute to specify the protocol with which to connect to the DX server -dxProtocol <value> Use this attribute to specify the hostname of the target DX server -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443 -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the import file path that is required while executing the pzn import task -rulesFilePath <Absolute or relative path to import nodes file> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE') -targetWorkspace <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Notes: * For Kubernetes environments, dxProtocol should be http , hostname should be localhost, dxPort should be 10039 as DXConnect doesn't support https due to SSL Handshake challenges at this time. * The dxProtocol , hostname , dxPort , targetWorkspace , and targetPath parameters are optional. If the user does not pass the respective parameters, then the default values are taken. All the above command options can be configured in the config.json file of the tool, which is read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-import -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxConnectPort <dxConnectPort> -rulesFilePath <rulesFilePath> On this page* Export PZN rules * Import PZN rules Generated by XML WebHelp","title":"Import PZN rules"},{"location":"containerization-o/helm/architecture/dam_subscription_staging/","text":"DAM staging | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DAM staging | HCL Digital Experience This topic contains the commands that administrators can use to configure the staging of Digital Asset Management (DAM) content. This allows you to manage subscriber registration or configure periodic sync. DAM staging framework The DAM staging framework allows you to stage your DAM content from an authoring environment (source environment/publisher) to multiple rendering environments (target environment/subscriber). Using DXClient, you can configure DAM staging to:* Trigger a manual staging or use periodic staging processes. * Set the cycle length (default: 2 minutes, maximum: 24 hours) for periodic sync. * Register a subscriber with a publisher.Note: A subscriber must be registered with a publisher. Access rights from DAM staging assets are not transferred for subscribers that do not share the same Lightweight Directory Access Protocol (LDAP). Manage DAM staging Use the manage-dam-staging trigger-staging command to trigger DAM staging. Command description You can trigger the DAM staging with the following command: dxclient manage-dam-staging trigger-staging Help command This command shows the help information for manage-dam-staging trigger-staging command usage: dxclient manage-dam-staging trigger-staging -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient manage-dam-staging trigger-staging -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -targetHostname <targetHostname> Registering or deregistering for DAM staging Use the manage-dam-staging **register**-dam-subscriber command to register or the manage-dam-staging **deregister**-dam-subscriber command to deregister the subscriber for DAM staging. Command description You can register a subscriber for DAM staging with the following command: dxclient manage-dam-staging register-dam-subscriber You can deregister a subscriber for DAM staging with the following command: dxclient manage-dam-staging deregister-dam-subscriber Help command The following command shows the help information for manage-dam-staging **register**-dam-subscriber command usage: dxclient manage-dam-staging register-dam-subscriber -h The following command shows the help information for manage-dam-staging **deregister**-dam-subscriber command usage: dxclient manage-dam-staging deregister-dam-subscriber -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the subscriber ID of the target environment: -subscriberId <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example usage: To register: dxclient manage-dam-staging register-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> To deregister: dxclient manage-dam-staging deregister-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> On this page* DAM staging framework * Manage DAM staging * Registering or deregistering for DAM staging Generated by XML WebHelp","title":"Dam subscription staging"},{"location":"containerization-o/helm/architecture/dam_subscription_staging/#dam-staging-hcl-digital-experience","text":"This topic contains the commands that administrators can use to configure the staging of Digital Asset Management (DAM) content. This allows you to manage subscriber registration or configure periodic sync.","title":"DAM staging | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/dam_subscription_staging/#dam-staging-framework","text":"The DAM staging framework allows you to stage your DAM content from an authoring environment (source environment/publisher) to multiple rendering environments (target environment/subscriber). Using DXClient, you can configure DAM staging to:* Trigger a manual staging or use periodic staging processes. * Set the cycle length (default: 2 minutes, maximum: 24 hours) for periodic sync. * Register a subscriber with a publisher.Note: A subscriber must be registered with a publisher. Access rights from DAM staging assets are not transferred for subscribers that do not share the same Lightweight Directory Access Protocol (LDAP).","title":"DAM staging framework"},{"location":"containerization-o/helm/architecture/dam_subscription_staging/#manage-dam-staging","text":"Use the manage-dam-staging trigger-staging command to trigger DAM staging. Command description You can trigger the DAM staging with the following command: dxclient manage-dam-staging trigger-staging Help command This command shows the help information for manage-dam-staging trigger-staging command usage: dxclient manage-dam-staging trigger-staging -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient manage-dam-staging trigger-staging -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -targetHostname <targetHostname>","title":"Manage DAM staging"},{"location":"containerization-o/helm/architecture/dam_subscription_staging/#registering-or-deregistering-for-dam-staging","text":"Use the manage-dam-staging **register**-dam-subscriber command to register or the manage-dam-staging **deregister**-dam-subscriber command to deregister the subscriber for DAM staging. Command description You can register a subscriber for DAM staging with the following command: dxclient manage-dam-staging register-dam-subscriber You can deregister a subscriber for DAM staging with the following command: dxclient manage-dam-staging deregister-dam-subscriber Help command The following command shows the help information for manage-dam-staging **register**-dam-subscriber command usage: dxclient manage-dam-staging register-dam-subscriber -h The following command shows the help information for manage-dam-staging **deregister**-dam-subscriber command usage: dxclient manage-dam-staging deregister-dam-subscriber -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the subscriber ID of the target environment: -subscriberId <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example usage: To register: dxclient manage-dam-staging register-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> To deregister: dxclient manage-dam-staging deregister-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> On this page* DAM staging framework * Manage DAM staging * Registering or deregistering for DAM staging Generated by XML WebHelp","title":"Registering or deregistering for DAM staging"},{"location":"containerization-o/helm/architecture/damschemas/","text":"DAM schemas | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DAM schemas | HCL Digital Experience This topic contains the commands that administrators can use to get a list of all DAM schemas or delete inactive Digital Asset Management (DAM) schemas from persistence. Listing DAM schemas The list-dam-schemas command is used to list all the DAM schemas. Command description This command invokes list-dam-schemas inside DXClient and provides a list DAM schemas. dxclient list-dam-schemas Help command This command shows the help information for list-dam-schemas command usage: dxclient list-dam-schemas -h Command options Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server(for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server(for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM(for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core(for Kubernetes Environment default port is 443) -ringAPIVersion <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient list-dam-schemas -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> Deleting DAM schemas Deleting DAM schema is a recommended step when the configuration of the DAM database schema has been changed, due to a release update such as from Container Update CF196 to Container Update CF197. When a DAM database is migrated, a new schema gets generated and the old schema is rendered inactive. To avoid the accumulation of inactive schemas, you can use the delete-dam-schema command to delete them. Use the delete-dam-schema command to delete the inactive DAM schema. Command description This command invokes delete-dam-schema inside DXClient and deletes the DAM schema. dxclient delete-dam-schema Help command This command shows the help information for delete-dam-schema command usage: dxclient delete-dam-schema -h Command options Use this attribute to specify the protocol that is used to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server (for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM (for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core (for Kubernetes Environment default port is 443) -ringAPIVersion <value> Use this attribute to specify the DAM Schema Version (for Kubernetes Environment default port is 443) -schemaVersion <value> Note: In case the user does not enter the schemaVersion , user is prompted with a list of inactive schemas to choose from. All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient delete-dam-schema -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> -schemaVersion <schemaVersion> On this page* Listing DAM schemas * Deleting DAM schemas Generated by XML WebHelp","title":"Damschemas"},{"location":"containerization-o/helm/architecture/damschemas/#dam-schemas-hcl-digital-experience","text":"This topic contains the commands that administrators can use to get a list of all DAM schemas or delete inactive Digital Asset Management (DAM) schemas from persistence.","title":"DAM schemas | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/damschemas/#listing-dam-schemas","text":"The list-dam-schemas command is used to list all the DAM schemas. Command description This command invokes list-dam-schemas inside DXClient and provides a list DAM schemas. dxclient list-dam-schemas Help command This command shows the help information for list-dam-schemas command usage: dxclient list-dam-schemas -h Command options Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server(for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server(for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM(for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core(for Kubernetes Environment default port is 443) -ringAPIVersion <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient list-dam-schemas -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion>","title":"Listing DAM schemas"},{"location":"containerization-o/helm/architecture/damschemas/#deleting-dam-schemas","text":"Deleting DAM schema is a recommended step when the configuration of the DAM database schema has been changed, due to a release update such as from Container Update CF196 to Container Update CF197. When a DAM database is migrated, a new schema gets generated and the old schema is rendered inactive. To avoid the accumulation of inactive schemas, you can use the delete-dam-schema command to delete them. Use the delete-dam-schema command to delete the inactive DAM schema. Command description This command invokes delete-dam-schema inside DXClient and deletes the DAM schema. dxclient delete-dam-schema Help command This command shows the help information for delete-dam-schema command usage: dxclient delete-dam-schema -h Command options Use this attribute to specify the protocol that is used to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server (for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM (for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core (for Kubernetes Environment default port is 443) -ringAPIVersion <value> Use this attribute to specify the DAM Schema Version (for Kubernetes Environment default port is 443) -schemaVersion <value> Note: In case the user does not enter the schemaVersion , user is prompted with a list of inactive schemas to choose from. All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient delete-dam-schema -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> -schemaVersion <schemaVersion> On this page* Listing DAM schemas * Deleting DAM schemas Generated by XML WebHelp","title":"Deleting DAM schemas"},{"location":"containerization-o/helm/architecture/deployapplication/","text":"Digital Experience applications | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Digital Experience applications | HCL Digital Experience This section provides information about the deployment of DX application artifacts by using the DXClient tool. Deploy Application The deploy-application command is used to deploy the EAR file into the WebSphere Application Server. Command description This command invokes the deploy-application tool inside DXClient. This command uses the provided files and execute the deploy application task. dxclient deploy-application Required files The following EAR file will be deployed into the WebSphere Application Server: Deployable EAR Help command This command shows the help information for deploy-application command usage: dxclient deploy-application -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Required options for application deployment: Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR file path that is required while executing the deploy application task \u2013applicationFile <Absolute or relative path to deployable ear file> Use this attribute to specify the application name -applicationName <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values passed through the command line command override the default values. Example Usage: dxclient deploy-application -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -applicationFile <application-file-with-path> -applicationName <application name> -dxProfileName <Profile name of the DX core server> Generated by XML WebHelp","title":"Deployapplication"},{"location":"containerization-o/helm/architecture/deployapplication/#digital-experience-applications-hcl-digital-experience","text":"This section provides information about the deployment of DX application artifacts by using the DXClient tool.","title":"Digital Experience applications | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/deployapplication/#deploy-application","text":"The deploy-application command is used to deploy the EAR file into the WebSphere Application Server. Command description This command invokes the deploy-application tool inside DXClient. This command uses the provided files and execute the deploy application task. dxclient deploy-application Required files The following EAR file will be deployed into the WebSphere Application Server: Deployable EAR Help command This command shows the help information for deploy-application command usage: dxclient deploy-application -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Required options for application deployment: Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR file path that is required while executing the deploy application task \u2013applicationFile <Absolute or relative path to deployable ear file> Use this attribute to specify the application name -applicationName <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values passed through the command line command override the default values. Example Usage: dxclient deploy-application -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -applicationFile <application-file-with-path> -applicationName <application name> -dxProfileName <Profile name of the DX core server> Generated by XML WebHelp","title":"Deploy Application"},{"location":"containerization-o/helm/architecture/deployment/","text":"Digital Experience on containerized platforms Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Digital Experience on containerized platforms Learn how to deploy HCL Digital Experience as a cloud-native platform and optimize business-critical digital experiences for your customers. The Kubernetes container orchestration platform allows orchestration features for the automated deployment, coordination, scaling, and management of containerized applications. Originally designed by Google, now governed by the Cloud Native Computing Foundation (CNCF), and developed by Google, Red Hat, and many others, Kubernetes is now widely used by organizations of various sizes to run containers in a cloud environment. Generated by XML WebHelp","title":"Deployment"},{"location":"containerization-o/helm/architecture/deployment/#digital-experience-on-containerized-platforms","text":"Learn how to deploy HCL Digital Experience as a cloud-native platform and optimize business-critical digital experiences for your customers. The Kubernetes container orchestration platform allows orchestration features for the automated deployment, coordination, scaling, and management of containerized applications. Originally designed by Google, now governed by the Cloud Native Computing Foundation (CNCF), and developed by Google, Red Hat, and many others, Kubernetes is now widely used by organizations of various sizes to run containers in a cloud environment. Generated by XML WebHelp","title":"Digital Experience on containerized platforms"},{"location":"containerization-o/helm/architecture/dx_non_container/","text":"Digital Experience on non-containerized platforms Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience is a rock-solid and reliable platform that can help deliver the vital services of your organization. It is designed for scaling and flexibility, supports authentication for security and personalization, and eases the integration of multiple and varied applications. Intelligence-agency-grade encryption and cross-system authentication keep your business-critical functions safe. Your teams can easily create, manage, and deliver powerful digital experiences that can be counted on, every day. Generated by XML WebHelp","title":"Dx non container"},{"location":"containerization-o/helm/architecture/dx_non_container/#digital-experience-on-non-containerized-platforms","text":"Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience is a rock-solid and reliable platform that can help deliver the vital services of your organization. It is designed for scaling and flexibility, supports authentication for security and personalization, and eases the integration of multiple and varied applications. Intelligence-agency-grade encryption and cross-system authentication keep your business-critical functions safe. Your teams can easily create, manage, and deliver powerful digital experiences that can be counted on, every day. Generated by XML WebHelp","title":"Digital Experience on non-containerized platforms"},{"location":"containerization-o/helm/architecture/dxclient/","text":"DXClient | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DXClient | HCL Digital Experience DXClient is a tool that helps developers and administrators manage tasks, such as uploading one or more portlets or Script Applications, from source development environments to target HCL DX 9.5 deployments. This tool is capable of taking artifacts developed locally and deploying them to DX 9.5 servers deployed to supported on-premises platforms in standalone, cluster, or farm-topologies and supported Kubernetes platforms. Notes: * DXClient is enabled in supported Kubernetes platforms from HCL Digital Experience 9.5 CF192 and later releases. * DXClient is available as a Docker image from HCL DX 9.5 CF196 and later releases, See the installation section for more details. DXClient is a Node.js -based CLI tool and requires Node.js to be installed as a prerequisite. See video: Getting Started with DXClient on Red Hat OpenShift using HCL Digital Experience Container Update CF194 DXConnect DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later deployments, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Architecture Notes: 1. HCL DX 9.5 CF19 or later version is installed on target servers, on supported on premises platforms (Microsoft Windows, Linux or IBM AIX). 2. Beginning with HCL DX 9.5 Container Update CF192 and later releases, the DXConnect Servlet is pre-configured and started on supported Red Hat OpenShift and Kubernetes platforms that DX 9.5 containers are deployed to. 3. For supported on premises platforms with HCL DX 9.5 CF19 and later releases, the DXConnect application needs to be installed (refer to DXConnect Installation ) and started under the Configuration Wizard ( cw_profile ) on target servers. For more information on starting the Configuration Wizard, refer to Accessing the Configuration Wizard Remember: Configuration Wizard Administrator credentials are required to access the DXConnect application. Installing using the Docker image Prerequisites: You must ensure that Docker is installed on the workstation. DXClient docker image comes with a script that you can use to run the docker image. This script creates a store directory,and copies the input files from the absolute path to the shared volume location. 1. Navigate to folder where you wish to use DXClient from. 2. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your HCL Digital Experience 9.5 CF196 or higher entitlements on the HCL Software License Portal. 3. Extract the DXClient.zip file locally. 4. Run docker load < dxclient.tar.gz. 5. Add the execution shell script to the bin directory to the PATH variable to be able to call dxclient from any directory. export PATH=<working-directory>/bin:$PATH For Microsoft Windows platforms: use dxclient.bat script in the bin directory to the PATH variable to be able to call DXClient from any directory. 6. Set appropriate permission. chmod xxx <working-directory>/bin Run 'dxclient -V' to verify that the dxclient command line is installed. A folder named store will be created in your working directory. This is the shared volume location to your docker container. Configuration, logger, output, and sample files under location - /store. Common command arguments can be pre-configured inside the config.json file available under <working-directory>/store folder. A sample configuration file that could be used on-premises platforms in standalone, cluster platforms is also available under <working-directory>/store/samples/sample-configurations/default-config.json for reference. Installing using the node package file (deprecated in CF196) Prerequisites: Node.js version 12.18.3 is the minimum supported version, and must be installed on the local workstation or automation server. Note: DXClient node package is deprecated in the HCL Digital Experience Container CF196 release. It might be removed in the future releases. You are encouraged to use the DXClient Docker package from CF Container release CF196 and later. Complete the following steps to install the DXClient tool in your local development workstation or automation server.Note: If you are upgrading from CF19, CF191, or later releases, you should first unlink the current version using the following command before installing the newer version.Syntax for Linux and Apple macOS platforms: make unlink Syntax for Microsoft Windows platforms: make_unlink.bat Ensure that Node.js version 12.18.3 or later version is installed to the local workstation. The DXClient tool is supported on Microsoft Windows, Linux, and Apple macOS workstations and automation servers. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your DX 9.5 CF19 or later entitlements on the HCL Software License Portal . Reference the Docker topic for the latest list of HCL DX 9.5 files available for download. Extract the DXClient.zip file locally. From the extracted folder, run the following command.For Linux and Apple macOS platforms: make install For Microsoft Windows platforms: make_install.bat The following commands are run: 6. Run the following command to link your application to the local npm module in your machine. Refer to the following Notes section before you proceed.For Linux and Apple MacOS platforms: make link For Microsoft Windows platforms: make_link.bat Notes: * Avoid using this command when scripting deployments from an automation server (for example, in pipelines) as there is a chance of picking up the wrong dependencies during tool version upgrades. * If the `link` command is not used (such as on automation servers), then use the following command to run the application:For Linux and Apple MacOS platforms: ``` ./bin/dxclient ``` For Microsoft Windows platforms: ``` node bin/dxclient ``` DXClient node installation configuration Common command arguments can be pre-configured inside the config.json file available under dist/src/configuration folder. A sample configuration file that could be used for any of the supported Kubernetes platforms is also available under samples/sample-configurations.json for reference. { \"enableLogger\": true, \"dxProtocol\": \"\", \"hostname\": \"\", \"dxPort\": \"\", \"xmlConfigPath\": \"/wps/config\", \"dxUsername\": \"\", \"dxPassword\": \"\", \"dxSoapPort\": \"10033\", \"dxProfilePath\": \"\", \"dxConnectHostname\": \"\", \"dxConnectUsername\": \"\", \"dxConnectPassword\": \"\", \"dxConnectPort\": \"10202\", \"xmlFile\": \"\", \"warFile\": \"\", \"applicationFile\": \"\", \"applicationName\": \"\", \"themeName\": \"\", \"themePath\": \"\", \"outputFilePath\": \"\", \"dxConnectProtocol\": \"https\", \"wcmSiteArea\": \"\", \"excludes\": [ \"^bin$\", \"^lib$\", \"^src$\", \"^node_modules$\", \"^\\\\.classpath$\", \"^\\\\.project$\", \"^\\\\..*ignore$\", \"^config.json$\", \"^sp-cmdln.log$\", \"^sp.bat$\", \"^sp.sh$\" ], \"wcmContentPath\": \"\", \"wcmContentName\": \"\", \"prebuiltZip\": \"\", \"contenthandlerPath\": \"/wps/mycontenthandler\", \"mainHtmlFile\": \"\", \"wcmContentTitle\": \"\", \"contentRoot\": \"\", \"wcmContentId\": \"\", \"virtualPortalContext\": \"\", \"projectContext\": \"\", \"versionName\": \"\", \"restoreAsPublished\": false } DXClient node uninstalling To uninstall the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make clean For Microsoft Windows platforms: make uninstall.bat To unlink the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make unlink For Microsoft Windows platforms: make_unlink.bat Verify the DXClient installation Successful installation of the DXClient tool can be checked by using the \" dxclient -V \" command, which should show the version of the DXClient tool installed. Once installed, commands can be executed using the DXClient tool to perform CI / CD actions on HCL DX 9.5 servers. Notes: Refer to the list of features that were released in the following HCL DX 9.5 Container releases:* HCL DX 9.5 CF199 release: + DAM Staging + Create credential vault slot + Create syndication relation + Export and import multiple resource environment providers + Specify the context root for exporting and importing personalization rules * HCL DX 9.5 CF198 release: + List DAM schemas + Personalization export and import rules + Resource environment provider + Manage virtual portals * HCL DX 9.5 CF197 release: + Undeploy portlets + Deploy and undeploy themes + Deploy application + manage get-syndication report + Restart Core + Delete DAM schema * HCL DX 9.5 CF196 release: + Shared library * HCL DX 9.5 CF195 release: + Undeploy theme + MLS export and import of WCM library * HCL DX 9.5 CF193 release: + Restart DX Core server + Deploy Application + Managing syndicators + Managing subscribers * HCL DX 9.5 CF192 release: + Undeploy script applications + Deploy theme (EAR and WebDAV based) * HCL DX 9.5 CF19 release: + Deploy Portlets or Undeploy portlets + Deploy script applications + XML Access + Restore Script Application DXClient commands Command syntax conventions: dxclient [command] [options] Use the following command to execute the deploy portlet action: dxclient deploy-portlet [options] Use the following command to execute the undeploy portlet action: dxclient undeploy-portlet [options] Use the following command to execute the xmlaccess action: dxclient xmlaccess [options] Use the following command to execute the pull script application action: dxclient deploy-scriptapplication pull [options] Use the following command to execute the push script application action: dxclient deploy-scriptapplication push [options] Use the following command to execute the undeploy script application action: dxclient undeploy-scriptapplication [options] Use the following command to execute the restore script application action: dxclient restore-scriptapplication [options] Use the following command to execute the deploy application action: dxclient deploy-application [options] Use the following command to execute the DX Core restart action: dxclient restart-dx-core Use the following command to execute manage-subscriber action: dxclient manage-subscriber -h Use the following command to execute manage-syndicator action: dxclient manage-syndicator -h Use the following command to execute the deploy theme action: dxclient deploy-theme [options] Use the following command to execute the undeploy theme action: dxclient undeploy-theme [options] Use the following command to execute the manage-syndicator get-syndication-report action: dxclient manage-syndicator get-syndication-report [options] Use the following command to execute the shared-library action: dxclient shared-library [options] Use the following command to execute the delete DAM schema action: dxclient delete-dam-schema [options] Use the following command to list all DAM schemas present: dxclient list-dam-schemas [options] Use the following command to export the personalization rules from the target server: dxclient pzn-export [options] Use the following command to import the personalization rules into the target server: dxclient pzn-import [options] Use the following command to manage virtual portal tasks in the DX server: dxclient manage-virtual-portal [options] Use the following command to register subscriber: dxclient manage-dam-staging register-dam-subscriber [options] Use the following command to deregister subscriber: dxclient manage-dam-staging deregister-dam-subscriber [options] Use the following command to trigger manual sync: dxclient manage-dam-staging trigger-staging [options] Use the following command to create credential vault slot in the DX server: dxclient create-credential-vault [options] Use the following command to create the syndication relation between syndicator and subscriber in DX server: dxclient create-syndication-relation [options] Use the following command to create, update, delete, export or import a custom property from an existing Resource Environment Provider: dxclient resource-env-provider [options] DXClient Help commands The following commands show the Help documents for DXClient command usage. Use the following commands to display the Help document for DXClient: dxclient dxclient -h, --help Use the following command to display the DXClient version number: dxclient -V, --version Use the following command to display the detailed help for a specific command: dxclient help [command] On this page* Architecture * Installing using the Docker image * Installing using the node package file (deprecated in CF196) * Verify the DXClient installation * DXClient commands * DXClient Help commands Generated by XML WebHelp","title":"Dxclient"},{"location":"containerization-o/helm/architecture/dxclient/#dxclient-hcl-digital-experience","text":"DXClient is a tool that helps developers and administrators manage tasks, such as uploading one or more portlets or Script Applications, from source development environments to target HCL DX 9.5 deployments. This tool is capable of taking artifacts developed locally and deploying them to DX 9.5 servers deployed to supported on-premises platforms in standalone, cluster, or farm-topologies and supported Kubernetes platforms. Notes: * DXClient is enabled in supported Kubernetes platforms from HCL Digital Experience 9.5 CF192 and later releases. * DXClient is available as a Docker image from HCL DX 9.5 CF196 and later releases, See the installation section for more details. DXClient is a Node.js -based CLI tool and requires Node.js to be installed as a prerequisite. See video: Getting Started with DXClient on Red Hat OpenShift using HCL Digital Experience Container Update CF194 DXConnect DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later deployments, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands.","title":"DXClient | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/dxclient/#architecture","text":"Notes: 1. HCL DX 9.5 CF19 or later version is installed on target servers, on supported on premises platforms (Microsoft Windows, Linux or IBM AIX). 2. Beginning with HCL DX 9.5 Container Update CF192 and later releases, the DXConnect Servlet is pre-configured and started on supported Red Hat OpenShift and Kubernetes platforms that DX 9.5 containers are deployed to. 3. For supported on premises platforms with HCL DX 9.5 CF19 and later releases, the DXConnect application needs to be installed (refer to DXConnect Installation ) and started under the Configuration Wizard ( cw_profile ) on target servers. For more information on starting the Configuration Wizard, refer to Accessing the Configuration Wizard Remember: Configuration Wizard Administrator credentials are required to access the DXConnect application.","title":"Architecture"},{"location":"containerization-o/helm/architecture/dxclient/#installing-using-the-docker-image","text":"Prerequisites: You must ensure that Docker is installed on the workstation. DXClient docker image comes with a script that you can use to run the docker image. This script creates a store directory,and copies the input files from the absolute path to the shared volume location. 1. Navigate to folder where you wish to use DXClient from. 2. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your HCL Digital Experience 9.5 CF196 or higher entitlements on the HCL Software License Portal. 3. Extract the DXClient.zip file locally. 4. Run docker load < dxclient.tar.gz. 5. Add the execution shell script to the bin directory to the PATH variable to be able to call dxclient from any directory. export PATH=<working-directory>/bin:$PATH For Microsoft Windows platforms: use dxclient.bat script in the bin directory to the PATH variable to be able to call DXClient from any directory. 6. Set appropriate permission. chmod xxx <working-directory>/bin Run 'dxclient -V' to verify that the dxclient command line is installed. A folder named store will be created in your working directory. This is the shared volume location to your docker container. Configuration, logger, output, and sample files under location - /store. Common command arguments can be pre-configured inside the config.json file available under <working-directory>/store folder. A sample configuration file that could be used on-premises platforms in standalone, cluster platforms is also available under <working-directory>/store/samples/sample-configurations/default-config.json for reference.","title":"Installing using the Docker image"},{"location":"containerization-o/helm/architecture/dxclient/#installing-using-the-node-package-file-deprecated-in-cf196","text":"Prerequisites: Node.js version 12.18.3 is the minimum supported version, and must be installed on the local workstation or automation server. Note: DXClient node package is deprecated in the HCL Digital Experience Container CF196 release. It might be removed in the future releases. You are encouraged to use the DXClient Docker package from CF Container release CF196 and later. Complete the following steps to install the DXClient tool in your local development workstation or automation server.Note: If you are upgrading from CF19, CF191, or later releases, you should first unlink the current version using the following command before installing the newer version.Syntax for Linux and Apple macOS platforms: make unlink Syntax for Microsoft Windows platforms: make_unlink.bat Ensure that Node.js version 12.18.3 or later version is installed to the local workstation. The DXClient tool is supported on Microsoft Windows, Linux, and Apple macOS workstations and automation servers. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your DX 9.5 CF19 or later entitlements on the HCL Software License Portal . Reference the Docker topic for the latest list of HCL DX 9.5 files available for download. Extract the DXClient.zip file locally. From the extracted folder, run the following command.For Linux and Apple macOS platforms: make install For Microsoft Windows platforms: make_install.bat The following commands are run: 6. Run the following command to link your application to the local npm module in your machine. Refer to the following Notes section before you proceed.For Linux and Apple MacOS platforms: make link For Microsoft Windows platforms: make_link.bat Notes: * Avoid using this command when scripting deployments from an automation server (for example, in pipelines) as there is a chance of picking up the wrong dependencies during tool version upgrades. * If the `link` command is not used (such as on automation servers), then use the following command to run the application:For Linux and Apple MacOS platforms: ``` ./bin/dxclient ``` For Microsoft Windows platforms: ``` node bin/dxclient ``` DXClient node installation configuration Common command arguments can be pre-configured inside the config.json file available under dist/src/configuration folder. A sample configuration file that could be used for any of the supported Kubernetes platforms is also available under samples/sample-configurations.json for reference. { \"enableLogger\": true, \"dxProtocol\": \"\", \"hostname\": \"\", \"dxPort\": \"\", \"xmlConfigPath\": \"/wps/config\", \"dxUsername\": \"\", \"dxPassword\": \"\", \"dxSoapPort\": \"10033\", \"dxProfilePath\": \"\", \"dxConnectHostname\": \"\", \"dxConnectUsername\": \"\", \"dxConnectPassword\": \"\", \"dxConnectPort\": \"10202\", \"xmlFile\": \"\", \"warFile\": \"\", \"applicationFile\": \"\", \"applicationName\": \"\", \"themeName\": \"\", \"themePath\": \"\", \"outputFilePath\": \"\", \"dxConnectProtocol\": \"https\", \"wcmSiteArea\": \"\", \"excludes\": [ \"^bin$\", \"^lib$\", \"^src$\", \"^node_modules$\", \"^\\\\.classpath$\", \"^\\\\.project$\", \"^\\\\..*ignore$\", \"^config.json$\", \"^sp-cmdln.log$\", \"^sp.bat$\", \"^sp.sh$\" ], \"wcmContentPath\": \"\", \"wcmContentName\": \"\", \"prebuiltZip\": \"\", \"contenthandlerPath\": \"/wps/mycontenthandler\", \"mainHtmlFile\": \"\", \"wcmContentTitle\": \"\", \"contentRoot\": \"\", \"wcmContentId\": \"\", \"virtualPortalContext\": \"\", \"projectContext\": \"\", \"versionName\": \"\", \"restoreAsPublished\": false } DXClient node uninstalling To uninstall the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make clean For Microsoft Windows platforms: make uninstall.bat To unlink the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make unlink For Microsoft Windows platforms: make_unlink.bat","title":"Installing using the node package file (deprecated in CF196)"},{"location":"containerization-o/helm/architecture/dxclient/#verify-the-dxclient-installation","text":"Successful installation of the DXClient tool can be checked by using the \" dxclient -V \" command, which should show the version of the DXClient tool installed. Once installed, commands can be executed using the DXClient tool to perform CI / CD actions on HCL DX 9.5 servers. Notes: Refer to the list of features that were released in the following HCL DX 9.5 Container releases:* HCL DX 9.5 CF199 release: + DAM Staging + Create credential vault slot + Create syndication relation + Export and import multiple resource environment providers + Specify the context root for exporting and importing personalization rules * HCL DX 9.5 CF198 release: + List DAM schemas + Personalization export and import rules + Resource environment provider + Manage virtual portals * HCL DX 9.5 CF197 release: + Undeploy portlets + Deploy and undeploy themes + Deploy application + manage get-syndication report + Restart Core + Delete DAM schema * HCL DX 9.5 CF196 release: + Shared library * HCL DX 9.5 CF195 release: + Undeploy theme + MLS export and import of WCM library * HCL DX 9.5 CF193 release: + Restart DX Core server + Deploy Application + Managing syndicators + Managing subscribers * HCL DX 9.5 CF192 release: + Undeploy script applications + Deploy theme (EAR and WebDAV based) * HCL DX 9.5 CF19 release: + Deploy Portlets or Undeploy portlets + Deploy script applications + XML Access + Restore Script Application","title":"Verify the DXClient installation"},{"location":"containerization-o/helm/architecture/dxclient/#dxclient-commands","text":"Command syntax conventions: dxclient [command] [options] Use the following command to execute the deploy portlet action: dxclient deploy-portlet [options] Use the following command to execute the undeploy portlet action: dxclient undeploy-portlet [options] Use the following command to execute the xmlaccess action: dxclient xmlaccess [options] Use the following command to execute the pull script application action: dxclient deploy-scriptapplication pull [options] Use the following command to execute the push script application action: dxclient deploy-scriptapplication push [options] Use the following command to execute the undeploy script application action: dxclient undeploy-scriptapplication [options] Use the following command to execute the restore script application action: dxclient restore-scriptapplication [options] Use the following command to execute the deploy application action: dxclient deploy-application [options] Use the following command to execute the DX Core restart action: dxclient restart-dx-core Use the following command to execute manage-subscriber action: dxclient manage-subscriber -h Use the following command to execute manage-syndicator action: dxclient manage-syndicator -h Use the following command to execute the deploy theme action: dxclient deploy-theme [options] Use the following command to execute the undeploy theme action: dxclient undeploy-theme [options] Use the following command to execute the manage-syndicator get-syndication-report action: dxclient manage-syndicator get-syndication-report [options] Use the following command to execute the shared-library action: dxclient shared-library [options] Use the following command to execute the delete DAM schema action: dxclient delete-dam-schema [options] Use the following command to list all DAM schemas present: dxclient list-dam-schemas [options] Use the following command to export the personalization rules from the target server: dxclient pzn-export [options] Use the following command to import the personalization rules into the target server: dxclient pzn-import [options] Use the following command to manage virtual portal tasks in the DX server: dxclient manage-virtual-portal [options] Use the following command to register subscriber: dxclient manage-dam-staging register-dam-subscriber [options] Use the following command to deregister subscriber: dxclient manage-dam-staging deregister-dam-subscriber [options] Use the following command to trigger manual sync: dxclient manage-dam-staging trigger-staging [options] Use the following command to create credential vault slot in the DX server: dxclient create-credential-vault [options] Use the following command to create the syndication relation between syndicator and subscriber in DX server: dxclient create-syndication-relation [options] Use the following command to create, update, delete, export or import a custom property from an existing Resource Environment Provider: dxclient resource-env-provider [options]","title":"DXClient commands"},{"location":"containerization-o/helm/architecture/dxclient/#dxclient-help-commands","text":"The following commands show the Help documents for DXClient command usage. Use the following commands to display the Help document for DXClient: dxclient dxclient -h, --help Use the following command to display the DXClient version number: dxclient -V, --version Use the following command to display the detailed help for a specific command: dxclient help [command] On this page* Architecture * Installing using the Docker image * Installing using the node package file (deprecated in CF196) * Verify the DXClient installation * DXClient commands * DXClient Help commands Generated by XML WebHelp","title":"DXClient Help commands"},{"location":"containerization-o/helm/architecture/dxconnect/","text":"DXConnect | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DXConnect | HCL Digital Experience DXConnect is a servlet-based internal application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later releases, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. This topic covers the DXConnect installation and configuration instructions. Authentication DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in an HCL DX 9.5 CF19 and later deployment, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTPS connection from a client development workstation or automation server to a target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Authentication DXConnect requires the cw_profile Administrator security role to access the application servlet APIs. DXConnect Installation To install DXConnect use the command below: ./ConfigEngine.sh install-dxconnect-application This task will not only install the DxConnect application, but it will create the \"DXC_ConfigSettings\" WAS Resource Environment Provider and will create two custom properties in that REP: DXCONNECT_MAX_MEMORY_SIZE_MB DXCONNECT_MAX_FILE_SIZE_MB To remove DXConnect use the command below: ./ConfigEngine.sh remove-dxconnect-application To re-install DXConnect use the command below: ./ConfigEngine.sh reinstall-dxconnect-application Notes: 1. In Standalone and Cluster setups, the ConfigEngine task should be run under the wp_profile to have DXConnect installed in the correct location, and a restart of the cw_profile server may be required.To verify it is installed on a given HCL DX Server 9.5 with CF19 or later, navigate to the Configuration Wizard Admin console and then under Enterprise Applications . The dxconnect application will appear on the console as shown in the example below. For more information on accessing and working with the Configuration Wizard, refer to Accessing the Configuration Wizard topics. 2. In Red Hat OpenShift, the route for DXConnect is available under the name dx-deployment-service-dxconnect. For the other supported platforms, there is only one route path as usual. Generated by XML WebHelp","title":"Dxconnect"},{"location":"containerization-o/helm/architecture/dxconnect/#dxconnect-hcl-digital-experience","text":"DXConnect is a servlet-based internal application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later releases, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. This topic covers the DXConnect installation and configuration instructions.","title":"DXConnect | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/dxconnect/#authentication","text":"DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in an HCL DX 9.5 CF19 and later deployment, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTPS connection from a client development workstation or automation server to a target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Authentication DXConnect requires the cw_profile Administrator security role to access the application servlet APIs. DXConnect Installation To install DXConnect use the command below: ./ConfigEngine.sh install-dxconnect-application This task will not only install the DxConnect application, but it will create the \"DXC_ConfigSettings\" WAS Resource Environment Provider and will create two custom properties in that REP: DXCONNECT_MAX_MEMORY_SIZE_MB DXCONNECT_MAX_FILE_SIZE_MB To remove DXConnect use the command below: ./ConfigEngine.sh remove-dxconnect-application To re-install DXConnect use the command below: ./ConfigEngine.sh reinstall-dxconnect-application Notes: 1. In Standalone and Cluster setups, the ConfigEngine task should be run under the wp_profile to have DXConnect installed in the correct location, and a restart of the cw_profile server may be required.To verify it is installed on a given HCL DX Server 9.5 with CF19 or later, navigate to the Configuration Wizard Admin console and then under Enterprise Applications . The dxconnect application will appear on the console as shown in the example below. For more information on accessing and working with the Configuration Wizard, refer to Accessing the Configuration Wizard topics. 2. In Red Hat OpenShift, the route for DXConnect is available under the name dx-deployment-service-dxconnect. For the other supported platforms, there is only one route path as usual. Generated by XML WebHelp","title":"Authentication"},{"location":"containerization-o/helm/architecture/dxcoreserver/","text":"DX Core server | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DX Core server | HCL Digital Experience This topic provides information about restarting the DX Core server by using the DXClient tool. Restart DX Core server The restart-dx-core command is used to restart the DX Core server. Command description This command invokes the restart-dx-core tool inside the DXClient and runs the DX Core restart action. dxclient restart-dx-core Help command This command shows the help information for restart-dx-core command usage: dxclient restart-dx-core -h Command options Use this attribute to specify the username that is required for authenticating with the DX Core -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example Usage: dxclient restart-dx-core -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server> Limitation In Kubernetes based deployments, if there are more than one pod for the core container, the restart command of DXClient only restarts the pod it is connected to and not all running pods. For a full restart of all pods, leverage using the Kubernetes interfaces like kubectl . Generated by XML WebHelp","title":"Dxcoreserver"},{"location":"containerization-o/helm/architecture/dxcoreserver/#dx-core-server-hcl-digital-experience","text":"This topic provides information about restarting the DX Core server by using the DXClient tool.","title":"DX Core server | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/dxcoreserver/#restart-dx-core-server","text":"The restart-dx-core command is used to restart the DX Core server. Command description This command invokes the restart-dx-core tool inside the DXClient and runs the DX Core restart action. dxclient restart-dx-core Help command This command shows the help information for restart-dx-core command usage: dxclient restart-dx-core -h Command options Use this attribute to specify the username that is required for authenticating with the DX Core -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example Usage: dxclient restart-dx-core -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server> Limitation In Kubernetes based deployments, if there are more than one pod for the core container, the restart command of DXClient only restarts the pod it is connected to and not all running pods. For a full restart of all pods, leverage using the Kubernetes interfaces like kubectl . Generated by XML WebHelp","title":"Restart DX Core server"},{"location":"containerization-o/helm/architecture/helm_arch_applications/","text":"This document will provide you with the deployment architecture of each application inside the HCL Digital Experience Kubernetes deployment using Helm Charts. Applications This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed. Core Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid. Ring API Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation. Content Composer Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities. Digital Asset Management Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data. Persistence Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller. Image Processor Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management. Design Studio (beta) Depends on: Core, Ring API Type: Stateless Runtime Controller Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence. Interdependency Matrix This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Helm arch applications"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#applications","text":"This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed.","title":"Applications"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#core","text":"Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid.","title":"Core"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#ring-api","text":"Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation.","title":"Ring API"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#content-composer","text":"Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities.","title":"Content Composer"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#digital-asset-management","text":"Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data.","title":"Digital Asset Management"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#persistence","text":"Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller.","title":"Persistence"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#image-processor","text":"Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management.","title":"Image Processor"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#design-studio-beta","text":"Depends on: Core, Ring API Type: Stateless","title":"Design Studio (beta)"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#runtime-controller","text":"Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence.","title":"Runtime Controller"},{"location":"containerization-o/helm/architecture/helm_arch_applications/#interdependency-matrix","text":"This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Interdependency Matrix"},{"location":"containerization-o/helm/architecture/personalization/","text":"Personalization rules | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Personalization rules | HCL Digital Experience This topic contains the commands that the administrators can use to export and import the personalization (PZN) rules from the source server to the target server as specified by the user. Export PZN rules Command description The pzn-export command is used to export the rules from the source server location specified by the user. dxclient pzn-export Help command This command shows the help information for pzn-export command usage: dxclient pzn-export -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443: -dxPort <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing: -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE'): -targetWorkspace <value> Note: The targetPath and targetWorkspace parameters are optional. If the user does not pass the respective parameters, then the default values are taken. Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-export -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> The outputfile for pzn export is generated in the following path: store/outputFiles/pznrules Import PZN rules Command description The pzn-import command is used to import the rules into the target server. dxclient pzn-import Required files Rules file: This file should contain the configuration XML representation of all the currently selected personalization objects. Help command This command shows the help information for pzn-import command usage: dxclient pzn-import -h Command options Use this attribute to specify the protocol with which to connect to the DX server -dxProtocol <value> Use this attribute to specify the hostname of the target DX server -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443 -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the import file path that is required while executing the pzn import task -rulesFilePath <Absolute or relative path to import nodes file> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE') -targetWorkspace <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Notes: * For Kubernetes environments, dxProtocol should be http , hostname should be localhost, dxPort should be 10039 as DXConnect doesn't support https due to SSL Handshake challenges at this time. * The dxProtocol , hostname , dxPort , targetWorkspace , and targetPath parameters are optional. If the user does not pass the respective parameters, then the default values are taken. All the above command options can be configured in the config.json file of the tool, which is read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-import -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxConnectPort <dxConnectPort> -rulesFilePath <rulesFilePath> On this page* Export PZN rules * Import PZN rules Generated by XML WebHelp","title":"Personalization"},{"location":"containerization-o/helm/architecture/personalization/#personalization-rules-hcl-digital-experience","text":"This topic contains the commands that the administrators can use to export and import the personalization (PZN) rules from the source server to the target server as specified by the user.","title":"Personalization rules | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/personalization/#export-pzn-rules","text":"Command description The pzn-export command is used to export the rules from the source server location specified by the user. dxclient pzn-export Help command This command shows the help information for pzn-export command usage: dxclient pzn-export -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443: -dxPort <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing: -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE'): -targetWorkspace <value> Note: The targetPath and targetWorkspace parameters are optional. If the user does not pass the respective parameters, then the default values are taken. Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-export -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> The outputfile for pzn export is generated in the following path: store/outputFiles/pznrules","title":"Export PZN rules"},{"location":"containerization-o/helm/architecture/personalization/#import-pzn-rules","text":"Command description The pzn-import command is used to import the rules into the target server. dxclient pzn-import Required files Rules file: This file should contain the configuration XML representation of all the currently selected personalization objects. Help command This command shows the help information for pzn-import command usage: dxclient pzn-import -h Command options Use this attribute to specify the protocol with which to connect to the DX server -dxProtocol <value> Use this attribute to specify the hostname of the target DX server -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443 -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the import file path that is required while executing the pzn import task -rulesFilePath <Absolute or relative path to import nodes file> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE') -targetWorkspace <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Notes: * For Kubernetes environments, dxProtocol should be http , hostname should be localhost, dxPort should be 10039 as DXConnect doesn't support https due to SSL Handshake challenges at this time. * The dxProtocol , hostname , dxPort , targetWorkspace , and targetPath parameters are optional. If the user does not pass the respective parameters, then the default values are taken. All the above command options can be configured in the config.json file of the tool, which is read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-import -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxConnectPort <dxConnectPort> -rulesFilePath <rulesFilePath> On this page* Export PZN rules * Import PZN rules Generated by XML WebHelp","title":"Import PZN rules"},{"location":"containerization-o/helm/architecture/portlets/","text":"Portlets | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Portlets | HCL Digital Experience This topic provides information about the deployment and undeployment of portlets. Deploy Portlets The deploy-portlet command is used to deploy one or more new or updated portlets from a source client or server environment to target HCL DX 9.5 CF19 or later server using a provided input XMLAccess file and deployable Portlet WAR file.Note: The synchronization mode of all nodes in a clustered DX environment must be consistently set for a newly deployed portlet to be automatically started; otherwise redeployment or a manual start is required. Required files XMLAccess file This xml file should contain the definition of the web application along with the details of the portlet(s) to be deployed. The web archive file path referred to in this file inside the URL element is ignored, but the URL element itself must exist as it is dynamically replaced when the command is executed. A sample XML file for deploying portlet(s) can be found in the samples directory of DXClient (samples/DeployPortlet.xml) or in DX server located in the following directory: PortalServer_root/doc/xml-samples/DeployPortlet.xml. Portlet Application web archive file This web archive .war file should contain the necessary portlet artifacts for deployment, as per the JSR 286 portlet standard. Refer to Importing WAR files | HCL Digital Experience Command dxclient deploy-portlet -xmlFile <path> -warFile <path> Help command This command shows the help document on the deploy-portlet command usage: dxclient deploy-portlet -h Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to XMLAccess input file> Use this attribute to specify the local path to the WAR file to be deployed: -warFile <Absolute or relative path to deployable war file> Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value will typically be the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the dist/src/configuration directory of the DXClient installation. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Undeploy portlets The undeploy-portlet command is used to undeploy the portlets in the target DX servers.Note: Undeploy-portlet command takes a backup of the XML file of the deployed portlet application and application (EAR) if user has given enableBackup as true. By default, enableBackup is set to true and placed in the store/outputFiles/portlets/backup/undeploy-portlet/ . In case, if the undeployed portlet is required again, then the user can restore the portlet WAR file from the downloaded portlet application EAR file along with the exported deployable portlet application XML file. Command description This command invokes the undeploy-portlet tool inside the DXClient. The undeploy-portlet dxtool uses the provided files and executes the undeploy portlet task. dxclient undeploy-portlet Help command This command shows the help information for undeploy-portlet command usage: dxclient undeploy-portlet -h Required files This file should contain the definition of the web application along with the undeploy portlet. dxclient undeploy-portlet -xmlFile <path> Command options Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/configwps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to take the backup of portlet application before undeploying it: -enableBackup <value> Commands required when enableBackup is set to true Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example usage: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> Example Usage when enableBackup is set to true: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -enableBackup true -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy Portlets * Undeploy portlets Generated by XML WebHelp","title":"Portlets"},{"location":"containerization-o/helm/architecture/portlets/#portlets-hcl-digital-experience","text":"This topic provides information about the deployment and undeployment of portlets.","title":"Portlets | HCL Digital Experience"},{"location":"containerization-o/helm/architecture/portlets/#deploy-portlets","text":"The deploy-portlet command is used to deploy one or more new or updated portlets from a source client or server environment to target HCL DX 9.5 CF19 or later server using a provided input XMLAccess file and deployable Portlet WAR file.Note: The synchronization mode of all nodes in a clustered DX environment must be consistently set for a newly deployed portlet to be automatically started; otherwise redeployment or a manual start is required. Required files XMLAccess file This xml file should contain the definition of the web application along with the details of the portlet(s) to be deployed. The web archive file path referred to in this file inside the URL element is ignored, but the URL element itself must exist as it is dynamically replaced when the command is executed. A sample XML file for deploying portlet(s) can be found in the samples directory of DXClient (samples/DeployPortlet.xml) or in DX server located in the following directory: PortalServer_root/doc/xml-samples/DeployPortlet.xml. Portlet Application web archive file This web archive .war file should contain the necessary portlet artifacts for deployment, as per the JSR 286 portlet standard. Refer to Importing WAR files | HCL Digital Experience Command dxclient deploy-portlet -xmlFile <path> -warFile <path> Help command This command shows the help document on the deploy-portlet command usage: dxclient deploy-portlet -h Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to XMLAccess input file> Use this attribute to specify the local path to the WAR file to be deployed: -warFile <Absolute or relative path to deployable war file> Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value will typically be the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the dist/src/configuration directory of the DXClient installation. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation.","title":"Deploy Portlets"},{"location":"containerization-o/helm/architecture/portlets/#undeploy-portlets","text":"The undeploy-portlet command is used to undeploy the portlets in the target DX servers.Note: Undeploy-portlet command takes a backup of the XML file of the deployed portlet application and application (EAR) if user has given enableBackup as true. By default, enableBackup is set to true and placed in the store/outputFiles/portlets/backup/undeploy-portlet/ . In case, if the undeployed portlet is required again, then the user can restore the portlet WAR file from the downloaded portlet application EAR file along with the exported deployable portlet application XML file. Command description This command invokes the undeploy-portlet tool inside the DXClient. The undeploy-portlet dxtool uses the provided files and executes the undeploy portlet task. dxclient undeploy-portlet Help command This command shows the help information for undeploy-portlet command usage: dxclient undeploy-portlet -h Required files This file should contain the definition of the web application along with the undeploy portlet. dxclient undeploy-portlet -xmlFile <path> Command options Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/configwps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to take the backup of portlet application before undeploying it: -enableBackup <value> Commands required when enableBackup is set to true Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example usage: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> Example Usage when enableBackup is set to true: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -enableBackup true -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy Portlets * Undeploy portlets Generated by XML WebHelp","title":"Undeploy portlets"},{"location":"digital_asset_mgmt/digital_asset_mgmt_overview/","text":"HCL Digital Asset Management | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search HCL Digital Asset Management | HCL Digital Experience HCL Digital Asset Management (DAM) delivers a central platform to store and include rich media assets in Digital Experience site content to present engaging, consistently branded experiences across digital channels. Users can access the HCL Digital Asset Management features in HCL Digital Experience 9.5 Container Update Release CF181 and higher releases. Follow the instructions below to install, configure, and use the HCL Digital Experience 9.5 Digital Asset Management features. Note: The following limitations exist in HCL Digital Asset Management:* Content created using Content Composer and Digital Asset Management cannot be used with the HCL Digital Experience Projects capabilities. * Content Composer and Digital Asset Management may not be used with HCL DX 9.5 container deployments that set an alternate context root. * Renditions for graphics interchange format (GIF) images are not yet supported. * The use of Content Composer features in a Virtual Portal deployment pattern is not yet supported. * When planning to use the Content Composer features in an authoring environment, with the Container Update CF181 release, it is only supported when running with one Digital Experience 9.5 core container (pod). This limitation does not apply when using the Web Content Management Authoring Portlet or when just using the new Digital Asset Management feature. It also does not apply to environments used for rendering. * When using Kaltura with Digital Asset Management, all uploaded videos are anonymously accessible for everyone who knows the URL, regardless of the access control setting on the collection containing the video. Do not use Kaltura integration if you have sensitive videos that should not be available without authentication. Generated by XML WebHelp","title":"Digital asset mgmt overview"},{"location":"digital_asset_mgmt/digital_asset_mgmt_overview/#hcl-digital-asset-management-hcl-digital-experience","text":"HCL Digital Asset Management (DAM) delivers a central platform to store and include rich media assets in Digital Experience site content to present engaging, consistently branded experiences across digital channels. Users can access the HCL Digital Asset Management features in HCL Digital Experience 9.5 Container Update Release CF181 and higher releases. Follow the instructions below to install, configure, and use the HCL Digital Experience 9.5 Digital Asset Management features. Note: The following limitations exist in HCL Digital Asset Management:* Content created using Content Composer and Digital Asset Management cannot be used with the HCL Digital Experience Projects capabilities. * Content Composer and Digital Asset Management may not be used with HCL DX 9.5 container deployments that set an alternate context root. * Renditions for graphics interchange format (GIF) images are not yet supported. * The use of Content Composer features in a Virtual Portal deployment pattern is not yet supported. * When planning to use the Content Composer features in an authoring environment, with the Container Update CF181 release, it is only supported when running with one Digital Experience 9.5 core container (pod). This limitation does not apply when using the Web Content Management Authoring Portlet or when just using the new Digital Asset Management feature. It also does not apply to environments used for rendering. * When using Kaltura with Digital Asset Management, all uploaded videos are anonymously accessible for everyone who knows the URL, regardless of the access control setting on the collection containing the video. Do not use Kaltura integration if you have sensitive videos that should not be available without authentication. Generated by XML WebHelp","title":"HCL Digital Asset Management | HCL Digital Experience"},{"location":"helm/architecture/dam_subscription_staging/","text":"DAM staging | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DAM staging | HCL Digital Experience This topic contains the commands that administrators can use to configure the staging of Digital Asset Management (DAM) content. This allows you to manage subscriber registration or configure periodic sync. DAM staging framework The DAM staging framework allows you to stage your DAM content from an authoring environment (source environment/publisher) to multiple rendering environments (target environment/subscriber). Using DXClient, you can configure DAM staging to:* Trigger a manual staging or use periodic staging processes. * Set the cycle length (default: 2 minutes, maximum: 24 hours) for periodic sync. * Register a subscriber with a publisher.Note: A subscriber must be registered with a publisher. Access rights from DAM staging assets are not transferred for subscribers that do not share the same Lightweight Directory Access Protocol (LDAP). Manage DAM staging Use the manage-dam-staging trigger-staging command to trigger DAM staging. Command description You can trigger the DAM staging with the following command: dxclient manage-dam-staging trigger-staging Help command This command shows the help information for manage-dam-staging trigger-staging command usage: dxclient manage-dam-staging trigger-staging -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient manage-dam-staging trigger-staging -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -targetHostname <targetHostname> Registering or deregistering for DAM staging Use the manage-dam-staging **register**-dam-subscriber command to register or the manage-dam-staging **deregister**-dam-subscriber command to deregister the subscriber for DAM staging. Command description You can register a subscriber for DAM staging with the following command: dxclient manage-dam-staging register-dam-subscriber You can deregister a subscriber for DAM staging with the following command: dxclient manage-dam-staging deregister-dam-subscriber Help command The following command shows the help information for manage-dam-staging **register**-dam-subscriber command usage: dxclient manage-dam-staging register-dam-subscriber -h The following command shows the help information for manage-dam-staging **deregister**-dam-subscriber command usage: dxclient manage-dam-staging deregister-dam-subscriber -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the subscriber ID of the target environment: -subscriberId <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example usage: To register: dxclient manage-dam-staging register-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> To deregister: dxclient manage-dam-staging deregister-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> On this page* DAM staging framework * Manage DAM staging * Registering or deregistering for DAM staging Generated by XML WebHelp","title":"Dam subscription staging"},{"location":"helm/architecture/dam_subscription_staging/#dam-staging-hcl-digital-experience","text":"This topic contains the commands that administrators can use to configure the staging of Digital Asset Management (DAM) content. This allows you to manage subscriber registration or configure periodic sync.","title":"DAM staging | HCL Digital Experience"},{"location":"helm/architecture/dam_subscription_staging/#dam-staging-framework","text":"The DAM staging framework allows you to stage your DAM content from an authoring environment (source environment/publisher) to multiple rendering environments (target environment/subscriber). Using DXClient, you can configure DAM staging to:* Trigger a manual staging or use periodic staging processes. * Set the cycle length (default: 2 minutes, maximum: 24 hours) for periodic sync. * Register a subscriber with a publisher.Note: A subscriber must be registered with a publisher. Access rights from DAM staging assets are not transferred for subscribers that do not share the same Lightweight Directory Access Protocol (LDAP).","title":"DAM staging framework"},{"location":"helm/architecture/dam_subscription_staging/#manage-dam-staging","text":"Use the manage-dam-staging trigger-staging command to trigger DAM staging. Command description You can trigger the DAM staging with the following command: dxclient manage-dam-staging trigger-staging Help command This command shows the help information for manage-dam-staging trigger-staging command usage: dxclient manage-dam-staging trigger-staging -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient manage-dam-staging trigger-staging -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -targetHostname <targetHostname>","title":"Manage DAM staging"},{"location":"helm/architecture/dam_subscription_staging/#registering-or-deregistering-for-dam-staging","text":"Use the manage-dam-staging **register**-dam-subscriber command to register or the manage-dam-staging **deregister**-dam-subscriber command to deregister the subscriber for DAM staging. Command description You can register a subscriber for DAM staging with the following command: dxclient manage-dam-staging register-dam-subscriber You can deregister a subscriber for DAM staging with the following command: dxclient manage-dam-staging deregister-dam-subscriber Help command The following command shows the help information for manage-dam-staging **register**-dam-subscriber command usage: dxclient manage-dam-staging register-dam-subscriber -h The following command shows the help information for manage-dam-staging **deregister**-dam-subscriber command usage: dxclient manage-dam-staging deregister-dam-subscriber -h Command options Use this attribute to specify the protocol with which to connect to the DX server (default: \"\") -dxProtocol <value> Use this attribute to specify the host name of the DX server (default: \"\") -hostname <value> Use this attribute to specify the port on which to connect to the DX server (default: \"\"; default port for any Kubernetes environment is 443): -dxPort <value> Use this attribute to specify the user name that is required for authenticating with the DX server (default: \"\") -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core (default: \"\") -dxPassword <value> Use this attribute to specify the port number of the DAM server (default: \"\"; default port for any Kubernetes environment is 443): -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIPort <value> Use this attribute to specify the API version number of DAM (default: \"\"; default port for any Kubernetes environment is 443): -damAPIVersion <value> Use this attribute to specify the API version number of DX Core (default: \"\"; default port for any Kubernetes environment is 443): -ringAPIVersion <value> Use this attribute to specify the host name of the target environment: -targetHostname <value> Use this attribute to specify the subscriber ID of the target environment: -subscriberId <value> Use this attribute to specify the interval between two sync cycles. The unit of interval is in minutes. (default: \"2 minutes\") -interval <value> All these command options are configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example usage: To register: dxclient manage-dam-staging register-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> To deregister: dxclient manage-dam-staging deregister-dam-subscriber -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -damAPIVersion <damAPIVersion> -ringAPIVersion <ringAPIVersion> -subscriberId <subscriberId> On this page* DAM staging framework * Manage DAM staging * Registering or deregistering for DAM staging Generated by XML WebHelp","title":"Registering or deregistering for DAM staging"},{"location":"helm/architecture/damschemas/","text":"DAM schemas | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DAM schemas | HCL Digital Experience This topic contains the commands that administrators can use to get a list of all DAM schemas or delete inactive Digital Asset Management (DAM) schemas from persistence. Listing DAM schemas The list-dam-schemas command is used to list all the DAM schemas. Command description This command invokes list-dam-schemas inside DXClient and provides a list DAM schemas. dxclient list-dam-schemas Help command This command shows the help information for list-dam-schemas command usage: dxclient list-dam-schemas -h Command options Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server(for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server(for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM(for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core(for Kubernetes Environment default port is 443) -ringAPIVersion <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient list-dam-schemas -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> Deleting DAM schemas Deleting DAM schema is a recommended step when the configuration of the DAM database schema has been changed, due to a release update such as from Container Update CF196 to Container Update CF197. When a DAM database is migrated, a new schema gets generated and the old schema is rendered inactive. To avoid the accumulation of inactive schemas, you can use the delete-dam-schema command to delete them. Use the delete-dam-schema command to delete the inactive DAM schema. Command description This command invokes delete-dam-schema inside DXClient and deletes the DAM schema. dxclient delete-dam-schema Help command This command shows the help information for delete-dam-schema command usage: dxclient delete-dam-schema -h Command options Use this attribute to specify the protocol that is used to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server (for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM (for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core (for Kubernetes Environment default port is 443) -ringAPIVersion <value> Use this attribute to specify the DAM Schema Version (for Kubernetes Environment default port is 443) -schemaVersion <value> Note: In case the user does not enter the schemaVersion , user is prompted with a list of inactive schemas to choose from. All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient delete-dam-schema -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> -schemaVersion <schemaVersion> On this page* Listing DAM schemas * Deleting DAM schemas Generated by XML WebHelp","title":"Damschemas"},{"location":"helm/architecture/damschemas/#dam-schemas-hcl-digital-experience","text":"This topic contains the commands that administrators can use to get a list of all DAM schemas or delete inactive Digital Asset Management (DAM) schemas from persistence.","title":"DAM schemas | HCL Digital Experience"},{"location":"helm/architecture/damschemas/#listing-dam-schemas","text":"The list-dam-schemas command is used to list all the DAM schemas. Command description This command invokes list-dam-schemas inside DXClient and provides a list DAM schemas. dxclient list-dam-schemas Help command This command shows the help information for list-dam-schemas command usage: dxclient list-dam-schemas -h Command options Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server(for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server(for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM(for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core(for Kubernetes Environment default port is 443) -ringAPIVersion <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient list-dam-schemas -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion>","title":"Listing DAM schemas"},{"location":"helm/architecture/damschemas/#deleting-dam-schemas","text":"Deleting DAM schema is a recommended step when the configuration of the DAM database schema has been changed, due to a release update such as from Container Update CF196 to Container Update CF197. When a DAM database is migrated, a new schema gets generated and the old schema is rendered inactive. To avoid the accumulation of inactive schemas, you can use the delete-dam-schema command to delete them. Use the delete-dam-schema command to delete the inactive DAM schema. Command description This command invokes delete-dam-schema inside DXClient and deletes the DAM schema. dxclient delete-dam-schema Help command This command shows the help information for delete-dam-schema command usage: dxclient delete-dam-schema -h Command options Use this attribute to specify the protocol that is used to connect to the server -dxProtocol <value> Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the port on which to connect to the server (for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Use this attribute to specify the port number of the DAM server (for Kubernetes Environment default port is 443) -damAPIPort <value> Use this attribute to specify the port number of the DX Core API server (for Kubernetes Environment default port is 443) -ringAPIPort <value> Use this attribute to specify the API Version number of DAM (for Kubernetes Environment default port is 443) -damAPIVersion <value> Use this attribute to specify the API Version number of DX Core (for Kubernetes Environment default port is 443) -ringAPIVersion <value> Use this attribute to specify the DAM Schema Version (for Kubernetes Environment default port is 443) -schemaVersion <value> Note: In case the user does not enter the schemaVersion , user is prompted with a list of inactive schemas to choose from. All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Example Usage: dxclient delete-dam-schema -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -damAPIPort <damAPIPort> -ringAPIPort <ringAPIPort> -ringAPIVersion <ringAPIVersion> -damAPIVersion <damAPIVersion> -schemaVersion <schemaVersion> On this page* Listing DAM schemas * Deleting DAM schemas Generated by XML WebHelp","title":"Deleting DAM schemas"},{"location":"helm/architecture/deployapplication/","text":"Digital Experience applications | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Digital Experience applications | HCL Digital Experience This section provides information about the deployment of DX application artifacts by using the DXClient tool. Deploy Application The deploy-application command is used to deploy the EAR file into the WebSphere Application Server. Command description This command invokes the deploy-application tool inside DXClient. This command uses the provided files and execute the deploy application task. dxclient deploy-application Required files The following EAR file will be deployed into the WebSphere Application Server: Deployable EAR Help command This command shows the help information for deploy-application command usage: dxclient deploy-application -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Required options for application deployment: Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR file path that is required while executing the deploy application task \u2013applicationFile <Absolute or relative path to deployable ear file> Use this attribute to specify the application name -applicationName <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values passed through the command line command override the default values. Example Usage: dxclient deploy-application -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -applicationFile <application-file-with-path> -applicationName <application name> -dxProfileName <Profile name of the DX core server> Generated by XML WebHelp","title":"Deployapplication"},{"location":"helm/architecture/deployapplication/#digital-experience-applications-hcl-digital-experience","text":"This section provides information about the deployment of DX application artifacts by using the DXClient tool.","title":"Digital Experience applications | HCL Digital Experience"},{"location":"helm/architecture/deployapplication/#deploy-application","text":"The deploy-application command is used to deploy the EAR file into the WebSphere Application Server. Command description This command invokes the deploy-application tool inside DXClient. This command uses the provided files and execute the deploy application task. dxclient deploy-application Required files The following EAR file will be deployed into the WebSphere Application Server: Deployable EAR Help command This command shows the help information for deploy-application command usage: dxclient deploy-application -h Command options Use this attribute to specify the hostname of the target server -hostname <value> Use this attribute to specify the protocol with which to connect to the server -dxProtocol <value> Use this attribute to specify the port on which to connect to the server(for Kubernetes Environment dxPort is 443) -dxPort <value> Use this attribute to specify the username that is required for authenticating with the server -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the server -dxPassword <value> Required options for application deployment: Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile (for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> Use this attribute to specify the EAR file path that is required while executing the deploy application task \u2013applicationFile <Absolute or relative path to deployable ear file> Use this attribute to specify the application name -applicationName <value> Use this attribute to specify the path to the contenthandler servlet on the DX server (e.g. /wps/mycontenthandler) -contenthandlerPath <value> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values passed through the command line command override the default values. Example Usage: dxclient deploy-application -dxProtocol <http/https> -hostname <host-name> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -applicationFile <application-file-with-path> -applicationName <application name> -dxProfileName <Profile name of the DX core server> Generated by XML WebHelp","title":"Deploy Application"},{"location":"helm/architecture/deployment/","text":"Digital Experience on containerized platforms Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Digital Experience on containerized platforms Learn how to deploy HCL Digital Experience as a cloud-native platform and optimize business-critical digital experiences for your customers. The Kubernetes container orchestration platform allows orchestration features for the automated deployment, coordination, scaling, and management of containerized applications. Originally designed by Google, now governed by the Cloud Native Computing Foundation (CNCF), and developed by Google, Red Hat, and many others, Kubernetes is now widely used by organizations of various sizes to run containers in a cloud environment. Generated by XML WebHelp","title":"Deployment"},{"location":"helm/architecture/deployment/#digital-experience-on-containerized-platforms","text":"Learn how to deploy HCL Digital Experience as a cloud-native platform and optimize business-critical digital experiences for your customers. The Kubernetes container orchestration platform allows orchestration features for the automated deployment, coordination, scaling, and management of containerized applications. Originally designed by Google, now governed by the Cloud Native Computing Foundation (CNCF), and developed by Google, Red Hat, and many others, Kubernetes is now widely used by organizations of various sizes to run containers in a cloud environment. Generated by XML WebHelp","title":"Digital Experience on containerized platforms"},{"location":"helm/architecture/dx_non_container/","text":"Digital Experience on non-containerized platforms Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience is a rock-solid and reliable platform that can help deliver the vital services of your organization. It is designed for scaling and flexibility, supports authentication for security and personalization, and eases the integration of multiple and varied applications. Intelligence-agency-grade encryption and cross-system authentication keep your business-critical functions safe. Your teams can easily create, manage, and deliver powerful digital experiences that can be counted on, every day. Generated by XML WebHelp","title":"Dx non container"},{"location":"helm/architecture/dx_non_container/#digital-experience-on-non-containerized-platforms","text":"Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. HCL Digital Experience is a rock-solid and reliable platform that can help deliver the vital services of your organization. It is designed for scaling and flexibility, supports authentication for security and personalization, and eases the integration of multiple and varied applications. Intelligence-agency-grade encryption and cross-system authentication keep your business-critical functions safe. Your teams can easily create, manage, and deliver powerful digital experiences that can be counted on, every day. Generated by XML WebHelp","title":"Digital Experience on non-containerized platforms"},{"location":"helm/architecture/dxclient/","text":"DXClient | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DXClient | HCL Digital Experience DXClient is a tool that helps developers and administrators manage tasks, such as uploading one or more portlets or Script Applications, from source development environments to target HCL DX 9.5 deployments. This tool is capable of taking artifacts developed locally and deploying them to DX 9.5 servers deployed to supported on-premises platforms in standalone, cluster, or farm-topologies and supported Kubernetes platforms. Notes: * DXClient is enabled in supported Kubernetes platforms from HCL Digital Experience 9.5 CF192 and later releases. * DXClient is available as a Docker image from HCL DX 9.5 CF196 and later releases, See the installation section for more details. DXClient is a Node.js -based CLI tool and requires Node.js to be installed as a prerequisite. See video: Getting Started with DXClient on Red Hat OpenShift using HCL Digital Experience Container Update CF194 DXConnect DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later deployments, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Architecture Notes: 1. HCL DX 9.5 CF19 or later version is installed on target servers, on supported on premises platforms (Microsoft Windows, Linux or IBM AIX). 2. Beginning with HCL DX 9.5 Container Update CF192 and later releases, the DXConnect Servlet is pre-configured and started on supported Red Hat OpenShift and Kubernetes platforms that DX 9.5 containers are deployed to. 3. For supported on premises platforms with HCL DX 9.5 CF19 and later releases, the DXConnect application needs to be installed (refer to DXConnect Installation ) and started under the Configuration Wizard ( cw_profile ) on target servers. For more information on starting the Configuration Wizard, refer to Accessing the Configuration Wizard Remember: Configuration Wizard Administrator credentials are required to access the DXConnect application. Installing using the Docker image Prerequisites: You must ensure that Docker is installed on the workstation. DXClient docker image comes with a script that you can use to run the docker image. This script creates a store directory,and copies the input files from the absolute path to the shared volume location. 1. Navigate to folder where you wish to use DXClient from. 2. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your HCL Digital Experience 9.5 CF196 or higher entitlements on the HCL Software License Portal. 3. Extract the DXClient.zip file locally. 4. Run docker load < dxclient.tar.gz. 5. Add the execution shell script to the bin directory to the PATH variable to be able to call dxclient from any directory. export PATH=<working-directory>/bin:$PATH For Microsoft Windows platforms: use dxclient.bat script in the bin directory to the PATH variable to be able to call DXClient from any directory. 6. Set appropriate permission. chmod xxx <working-directory>/bin Run 'dxclient -V' to verify that the dxclient command line is installed. A folder named store will be created in your working directory. This is the shared volume location to your docker container. Configuration, logger, output, and sample files under location - /store. Common command arguments can be pre-configured inside the config.json file available under <working-directory>/store folder. A sample configuration file that could be used on-premises platforms in standalone, cluster platforms is also available under <working-directory>/store/samples/sample-configurations/default-config.json for reference. Installing using the node package file (deprecated in CF196) Prerequisites: Node.js version 12.18.3 is the minimum supported version, and must be installed on the local workstation or automation server. Note: DXClient node package is deprecated in the HCL Digital Experience Container CF196 release. It might be removed in the future releases. You are encouraged to use the DXClient Docker package from CF Container release CF196 and later. Complete the following steps to install the DXClient tool in your local development workstation or automation server.Note: If you are upgrading from CF19, CF191, or later releases, you should first unlink the current version using the following command before installing the newer version.Syntax for Linux and Apple macOS platforms: make unlink Syntax for Microsoft Windows platforms: make_unlink.bat Ensure that Node.js version 12.18.3 or later version is installed to the local workstation. The DXClient tool is supported on Microsoft Windows, Linux, and Apple macOS workstations and automation servers. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your DX 9.5 CF19 or later entitlements on the HCL Software License Portal . Reference the Docker topic for the latest list of HCL DX 9.5 files available for download. Extract the DXClient.zip file locally. From the extracted folder, run the following command.For Linux and Apple macOS platforms: make install For Microsoft Windows platforms: make_install.bat The following commands are run: 6. Run the following command to link your application to the local npm module in your machine. Refer to the following Notes section before you proceed.For Linux and Apple MacOS platforms: make link For Microsoft Windows platforms: make_link.bat Notes: * Avoid using this command when scripting deployments from an automation server (for example, in pipelines) as there is a chance of picking up the wrong dependencies during tool version upgrades. * If the `link` command is not used (such as on automation servers), then use the following command to run the application:For Linux and Apple MacOS platforms: ``` ./bin/dxclient ``` For Microsoft Windows platforms: ``` node bin/dxclient ``` DXClient node installation configuration Common command arguments can be pre-configured inside the config.json file available under dist/src/configuration folder. A sample configuration file that could be used for any of the supported Kubernetes platforms is also available under samples/sample-configurations.json for reference. { \"enableLogger\": true, \"dxProtocol\": \"\", \"hostname\": \"\", \"dxPort\": \"\", \"xmlConfigPath\": \"/wps/config\", \"dxUsername\": \"\", \"dxPassword\": \"\", \"dxSoapPort\": \"10033\", \"dxProfilePath\": \"\", \"dxConnectHostname\": \"\", \"dxConnectUsername\": \"\", \"dxConnectPassword\": \"\", \"dxConnectPort\": \"10202\", \"xmlFile\": \"\", \"warFile\": \"\", \"applicationFile\": \"\", \"applicationName\": \"\", \"themeName\": \"\", \"themePath\": \"\", \"outputFilePath\": \"\", \"dxConnectProtocol\": \"https\", \"wcmSiteArea\": \"\", \"excludes\": [ \"^bin$\", \"^lib$\", \"^src$\", \"^node_modules$\", \"^\\\\.classpath$\", \"^\\\\.project$\", \"^\\\\..*ignore$\", \"^config.json$\", \"^sp-cmdln.log$\", \"^sp.bat$\", \"^sp.sh$\" ], \"wcmContentPath\": \"\", \"wcmContentName\": \"\", \"prebuiltZip\": \"\", \"contenthandlerPath\": \"/wps/mycontenthandler\", \"mainHtmlFile\": \"\", \"wcmContentTitle\": \"\", \"contentRoot\": \"\", \"wcmContentId\": \"\", \"virtualPortalContext\": \"\", \"projectContext\": \"\", \"versionName\": \"\", \"restoreAsPublished\": false } DXClient node uninstalling To uninstall the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make clean For Microsoft Windows platforms: make uninstall.bat To unlink the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make unlink For Microsoft Windows platforms: make_unlink.bat Verify the DXClient installation Successful installation of the DXClient tool can be checked by using the \" dxclient -V \" command, which should show the version of the DXClient tool installed. Once installed, commands can be executed using the DXClient tool to perform CI / CD actions on HCL DX 9.5 servers. Notes: Refer to the list of features that were released in the following HCL DX 9.5 Container releases:* HCL DX 9.5 CF199 release: + DAM Staging + Create credential vault slot + Create syndication relation + Export and import multiple resource environment providers + Specify the context root for exporting and importing personalization rules * HCL DX 9.5 CF198 release: + List DAM schemas + Personalization export and import rules + Resource environment provider + Manage virtual portals * HCL DX 9.5 CF197 release: + Undeploy portlets + Deploy and undeploy themes + Deploy application + manage get-syndication report + Restart Core + Delete DAM schema * HCL DX 9.5 CF196 release: + Shared library * HCL DX 9.5 CF195 release: + Undeploy theme + MLS export and import of WCM library * HCL DX 9.5 CF193 release: + Restart DX Core server + Deploy Application + Managing syndicators + Managing subscribers * HCL DX 9.5 CF192 release: + Undeploy script applications + Deploy theme (EAR and WebDAV based) * HCL DX 9.5 CF19 release: + Deploy Portlets or Undeploy portlets + Deploy script applications + XML Access + Restore Script Application DXClient commands Command syntax conventions: dxclient [command] [options] Use the following command to execute the deploy portlet action: dxclient deploy-portlet [options] Use the following command to execute the undeploy portlet action: dxclient undeploy-portlet [options] Use the following command to execute the xmlaccess action: dxclient xmlaccess [options] Use the following command to execute the pull script application action: dxclient deploy-scriptapplication pull [options] Use the following command to execute the push script application action: dxclient deploy-scriptapplication push [options] Use the following command to execute the undeploy script application action: dxclient undeploy-scriptapplication [options] Use the following command to execute the restore script application action: dxclient restore-scriptapplication [options] Use the following command to execute the deploy application action: dxclient deploy-application [options] Use the following command to execute the DX Core restart action: dxclient restart-dx-core Use the following command to execute manage-subscriber action: dxclient manage-subscriber -h Use the following command to execute manage-syndicator action: dxclient manage-syndicator -h Use the following command to execute the deploy theme action: dxclient deploy-theme [options] Use the following command to execute the undeploy theme action: dxclient undeploy-theme [options] Use the following command to execute the manage-syndicator get-syndication-report action: dxclient manage-syndicator get-syndication-report [options] Use the following command to execute the shared-library action: dxclient shared-library [options] Use the following command to execute the delete DAM schema action: dxclient delete-dam-schema [options] Use the following command to list all DAM schemas present: dxclient list-dam-schemas [options] Use the following command to export the personalization rules from the target server: dxclient pzn-export [options] Use the following command to import the personalization rules into the target server: dxclient pzn-import [options] Use the following command to manage virtual portal tasks in the DX server: dxclient manage-virtual-portal [options] Use the following command to register subscriber: dxclient manage-dam-staging register-dam-subscriber [options] Use the following command to deregister subscriber: dxclient manage-dam-staging deregister-dam-subscriber [options] Use the following command to trigger manual sync: dxclient manage-dam-staging trigger-staging [options] Use the following command to create credential vault slot in the DX server: dxclient create-credential-vault [options] Use the following command to create the syndication relation between syndicator and subscriber in DX server: dxclient create-syndication-relation [options] Use the following command to create, update, delete, export or import a custom property from an existing Resource Environment Provider: dxclient resource-env-provider [options] DXClient Help commands The following commands show the Help documents for DXClient command usage. Use the following commands to display the Help document for DXClient: dxclient dxclient -h, --help Use the following command to display the DXClient version number: dxclient -V, --version Use the following command to display the detailed help for a specific command: dxclient help [command] On this page* Architecture * Installing using the Docker image * Installing using the node package file (deprecated in CF196) * Verify the DXClient installation * DXClient commands * DXClient Help commands Generated by XML WebHelp","title":"Dxclient"},{"location":"helm/architecture/dxclient/#dxclient-hcl-digital-experience","text":"DXClient is a tool that helps developers and administrators manage tasks, such as uploading one or more portlets or Script Applications, from source development environments to target HCL DX 9.5 deployments. This tool is capable of taking artifacts developed locally and deploying them to DX 9.5 servers deployed to supported on-premises platforms in standalone, cluster, or farm-topologies and supported Kubernetes platforms. Notes: * DXClient is enabled in supported Kubernetes platforms from HCL Digital Experience 9.5 CF192 and later releases. * DXClient is available as a Docker image from HCL DX 9.5 CF196 and later releases, See the installation section for more details. DXClient is a Node.js -based CLI tool and requires Node.js to be installed as a prerequisite. See video: Getting Started with DXClient on Red Hat OpenShift using HCL Digital Experience Container Update CF194 DXConnect DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later deployments, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands.","title":"DXClient | HCL Digital Experience"},{"location":"helm/architecture/dxclient/#architecture","text":"Notes: 1. HCL DX 9.5 CF19 or later version is installed on target servers, on supported on premises platforms (Microsoft Windows, Linux or IBM AIX). 2. Beginning with HCL DX 9.5 Container Update CF192 and later releases, the DXConnect Servlet is pre-configured and started on supported Red Hat OpenShift and Kubernetes platforms that DX 9.5 containers are deployed to. 3. For supported on premises platforms with HCL DX 9.5 CF19 and later releases, the DXConnect application needs to be installed (refer to DXConnect Installation ) and started under the Configuration Wizard ( cw_profile ) on target servers. For more information on starting the Configuration Wizard, refer to Accessing the Configuration Wizard Remember: Configuration Wizard Administrator credentials are required to access the DXConnect application.","title":"Architecture"},{"location":"helm/architecture/dxclient/#installing-using-the-docker-image","text":"Prerequisites: You must ensure that Docker is installed on the workstation. DXClient docker image comes with a script that you can use to run the docker image. This script creates a store directory,and copies the input files from the absolute path to the shared volume location. 1. Navigate to folder where you wish to use DXClient from. 2. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your HCL Digital Experience 9.5 CF196 or higher entitlements on the HCL Software License Portal. 3. Extract the DXClient.zip file locally. 4. Run docker load < dxclient.tar.gz. 5. Add the execution shell script to the bin directory to the PATH variable to be able to call dxclient from any directory. export PATH=<working-directory>/bin:$PATH For Microsoft Windows platforms: use dxclient.bat script in the bin directory to the PATH variable to be able to call DXClient from any directory. 6. Set appropriate permission. chmod xxx <working-directory>/bin Run 'dxclient -V' to verify that the dxclient command line is installed. A folder named store will be created in your working directory. This is the shared volume location to your docker container. Configuration, logger, output, and sample files under location - /store. Common command arguments can be pre-configured inside the config.json file available under <working-directory>/store folder. A sample configuration file that could be used on-premises platforms in standalone, cluster platforms is also available under <working-directory>/store/samples/sample-configurations/default-config.json for reference.","title":"Installing using the Docker image"},{"location":"helm/architecture/dxclient/#installing-using-the-node-package-file-deprecated-in-cf196","text":"Prerequisites: Node.js version 12.18.3 is the minimum supported version, and must be installed on the local workstation or automation server. Note: DXClient node package is deprecated in the HCL Digital Experience Container CF196 release. It might be removed in the future releases. You are encouraged to use the DXClient Docker package from CF Container release CF196 and later. Complete the following steps to install the DXClient tool in your local development workstation or automation server.Note: If you are upgrading from CF19, CF191, or later releases, you should first unlink the current version using the following command before installing the newer version.Syntax for Linux and Apple macOS platforms: make unlink Syntax for Microsoft Windows platforms: make_unlink.bat Ensure that Node.js version 12.18.3 or later version is installed to the local workstation. The DXClient tool is supported on Microsoft Windows, Linux, and Apple macOS workstations and automation servers. Download the DXClient.zip file (DXClient_VX_XXXXXXXX-XXXX.zip) to a local directory on the local workstation from your DX 9.5 CF19 or later entitlements on the HCL Software License Portal . Reference the Docker topic for the latest list of HCL DX 9.5 files available for download. Extract the DXClient.zip file locally. From the extracted folder, run the following command.For Linux and Apple macOS platforms: make install For Microsoft Windows platforms: make_install.bat The following commands are run: 6. Run the following command to link your application to the local npm module in your machine. Refer to the following Notes section before you proceed.For Linux and Apple MacOS platforms: make link For Microsoft Windows platforms: make_link.bat Notes: * Avoid using this command when scripting deployments from an automation server (for example, in pipelines) as there is a chance of picking up the wrong dependencies during tool version upgrades. * If the `link` command is not used (such as on automation servers), then use the following command to run the application:For Linux and Apple MacOS platforms: ``` ./bin/dxclient ``` For Microsoft Windows platforms: ``` node bin/dxclient ``` DXClient node installation configuration Common command arguments can be pre-configured inside the config.json file available under dist/src/configuration folder. A sample configuration file that could be used for any of the supported Kubernetes platforms is also available under samples/sample-configurations.json for reference. { \"enableLogger\": true, \"dxProtocol\": \"\", \"hostname\": \"\", \"dxPort\": \"\", \"xmlConfigPath\": \"/wps/config\", \"dxUsername\": \"\", \"dxPassword\": \"\", \"dxSoapPort\": \"10033\", \"dxProfilePath\": \"\", \"dxConnectHostname\": \"\", \"dxConnectUsername\": \"\", \"dxConnectPassword\": \"\", \"dxConnectPort\": \"10202\", \"xmlFile\": \"\", \"warFile\": \"\", \"applicationFile\": \"\", \"applicationName\": \"\", \"themeName\": \"\", \"themePath\": \"\", \"outputFilePath\": \"\", \"dxConnectProtocol\": \"https\", \"wcmSiteArea\": \"\", \"excludes\": [ \"^bin$\", \"^lib$\", \"^src$\", \"^node_modules$\", \"^\\\\.classpath$\", \"^\\\\.project$\", \"^\\\\..*ignore$\", \"^config.json$\", \"^sp-cmdln.log$\", \"^sp.bat$\", \"^sp.sh$\" ], \"wcmContentPath\": \"\", \"wcmContentName\": \"\", \"prebuiltZip\": \"\", \"contenthandlerPath\": \"/wps/mycontenthandler\", \"mainHtmlFile\": \"\", \"wcmContentTitle\": \"\", \"contentRoot\": \"\", \"wcmContentId\": \"\", \"virtualPortalContext\": \"\", \"projectContext\": \"\", \"versionName\": \"\", \"restoreAsPublished\": false } DXClient node uninstalling To uninstall the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make clean For Microsoft Windows platforms: make uninstall.bat To unlink the DXClient tool, perform the following commands:For Linux and Apple MacOS platforms: make unlink For Microsoft Windows platforms: make_unlink.bat","title":"Installing using the node package file (deprecated in CF196)"},{"location":"helm/architecture/dxclient/#verify-the-dxclient-installation","text":"Successful installation of the DXClient tool can be checked by using the \" dxclient -V \" command, which should show the version of the DXClient tool installed. Once installed, commands can be executed using the DXClient tool to perform CI / CD actions on HCL DX 9.5 servers. Notes: Refer to the list of features that were released in the following HCL DX 9.5 Container releases:* HCL DX 9.5 CF199 release: + DAM Staging + Create credential vault slot + Create syndication relation + Export and import multiple resource environment providers + Specify the context root for exporting and importing personalization rules * HCL DX 9.5 CF198 release: + List DAM schemas + Personalization export and import rules + Resource environment provider + Manage virtual portals * HCL DX 9.5 CF197 release: + Undeploy portlets + Deploy and undeploy themes + Deploy application + manage get-syndication report + Restart Core + Delete DAM schema * HCL DX 9.5 CF196 release: + Shared library * HCL DX 9.5 CF195 release: + Undeploy theme + MLS export and import of WCM library * HCL DX 9.5 CF193 release: + Restart DX Core server + Deploy Application + Managing syndicators + Managing subscribers * HCL DX 9.5 CF192 release: + Undeploy script applications + Deploy theme (EAR and WebDAV based) * HCL DX 9.5 CF19 release: + Deploy Portlets or Undeploy portlets + Deploy script applications + XML Access + Restore Script Application","title":"Verify the DXClient installation"},{"location":"helm/architecture/dxclient/#dxclient-commands","text":"Command syntax conventions: dxclient [command] [options] Use the following command to execute the deploy portlet action: dxclient deploy-portlet [options] Use the following command to execute the undeploy portlet action: dxclient undeploy-portlet [options] Use the following command to execute the xmlaccess action: dxclient xmlaccess [options] Use the following command to execute the pull script application action: dxclient deploy-scriptapplication pull [options] Use the following command to execute the push script application action: dxclient deploy-scriptapplication push [options] Use the following command to execute the undeploy script application action: dxclient undeploy-scriptapplication [options] Use the following command to execute the restore script application action: dxclient restore-scriptapplication [options] Use the following command to execute the deploy application action: dxclient deploy-application [options] Use the following command to execute the DX Core restart action: dxclient restart-dx-core Use the following command to execute manage-subscriber action: dxclient manage-subscriber -h Use the following command to execute manage-syndicator action: dxclient manage-syndicator -h Use the following command to execute the deploy theme action: dxclient deploy-theme [options] Use the following command to execute the undeploy theme action: dxclient undeploy-theme [options] Use the following command to execute the manage-syndicator get-syndication-report action: dxclient manage-syndicator get-syndication-report [options] Use the following command to execute the shared-library action: dxclient shared-library [options] Use the following command to execute the delete DAM schema action: dxclient delete-dam-schema [options] Use the following command to list all DAM schemas present: dxclient list-dam-schemas [options] Use the following command to export the personalization rules from the target server: dxclient pzn-export [options] Use the following command to import the personalization rules into the target server: dxclient pzn-import [options] Use the following command to manage virtual portal tasks in the DX server: dxclient manage-virtual-portal [options] Use the following command to register subscriber: dxclient manage-dam-staging register-dam-subscriber [options] Use the following command to deregister subscriber: dxclient manage-dam-staging deregister-dam-subscriber [options] Use the following command to trigger manual sync: dxclient manage-dam-staging trigger-staging [options] Use the following command to create credential vault slot in the DX server: dxclient create-credential-vault [options] Use the following command to create the syndication relation between syndicator and subscriber in DX server: dxclient create-syndication-relation [options] Use the following command to create, update, delete, export or import a custom property from an existing Resource Environment Provider: dxclient resource-env-provider [options]","title":"DXClient commands"},{"location":"helm/architecture/dxclient/#dxclient-help-commands","text":"The following commands show the Help documents for DXClient command usage. Use the following commands to display the Help document for DXClient: dxclient dxclient -h, --help Use the following command to display the DXClient version number: dxclient -V, --version Use the following command to display the detailed help for a specific command: dxclient help [command] On this page* Architecture * Installing using the Docker image * Installing using the node package file (deprecated in CF196) * Verify the DXClient installation * DXClient commands * DXClient Help commands Generated by XML WebHelp","title":"DXClient Help commands"},{"location":"helm/architecture/dxconnect/","text":"DXConnect | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DXConnect | HCL Digital Experience DXConnect is a servlet-based internal application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later releases, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. This topic covers the DXConnect installation and configuration instructions. Authentication DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in an HCL DX 9.5 CF19 and later deployment, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTPS connection from a client development workstation or automation server to a target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Authentication DXConnect requires the cw_profile Administrator security role to access the application servlet APIs. DXConnect Installation To install DXConnect use the command below: ./ConfigEngine.sh install-dxconnect-application This task will not only install the DxConnect application, but it will create the \"DXC_ConfigSettings\" WAS Resource Environment Provider and will create two custom properties in that REP: DXCONNECT_MAX_MEMORY_SIZE_MB DXCONNECT_MAX_FILE_SIZE_MB To remove DXConnect use the command below: ./ConfigEngine.sh remove-dxconnect-application To re-install DXConnect use the command below: ./ConfigEngine.sh reinstall-dxconnect-application Notes: 1. In Standalone and Cluster setups, the ConfigEngine task should be run under the wp_profile to have DXConnect installed in the correct location, and a restart of the cw_profile server may be required.To verify it is installed on a given HCL DX Server 9.5 with CF19 or later, navigate to the Configuration Wizard Admin console and then under Enterprise Applications . The dxconnect application will appear on the console as shown in the example below. For more information on accessing and working with the Configuration Wizard, refer to Accessing the Configuration Wizard topics. 2. In Red Hat OpenShift, the route for DXConnect is available under the name dx-deployment-service-dxconnect. For the other supported platforms, there is only one route path as usual. Generated by XML WebHelp","title":"Dxconnect"},{"location":"helm/architecture/dxconnect/#dxconnect-hcl-digital-experience","text":"DXConnect is a servlet-based internal application deployed on top of IBM WebSphere Application Server in the HCL DX 9.5 CF19 and later releases, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTP or HTTPS connection from a client development machine or remote server to a source or target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. This topic covers the DXConnect installation and configuration instructions.","title":"DXConnect | HCL Digital Experience"},{"location":"helm/architecture/dxconnect/#authentication","text":"DXConnect is a servlet-based application deployed on top of IBM WebSphere Application Server in an HCL DX 9.5 CF19 and later deployment, under the Configuration Wizard profile - cw_profile . DXConnect enables the DXClient tool to connect over an HTTPS connection from a client development workstation or automation server to a target HCL DX 9.5 server to execute certain tasks requested via DXClient commands. Authentication DXConnect requires the cw_profile Administrator security role to access the application servlet APIs. DXConnect Installation To install DXConnect use the command below: ./ConfigEngine.sh install-dxconnect-application This task will not only install the DxConnect application, but it will create the \"DXC_ConfigSettings\" WAS Resource Environment Provider and will create two custom properties in that REP: DXCONNECT_MAX_MEMORY_SIZE_MB DXCONNECT_MAX_FILE_SIZE_MB To remove DXConnect use the command below: ./ConfigEngine.sh remove-dxconnect-application To re-install DXConnect use the command below: ./ConfigEngine.sh reinstall-dxconnect-application Notes: 1. In Standalone and Cluster setups, the ConfigEngine task should be run under the wp_profile to have DXConnect installed in the correct location, and a restart of the cw_profile server may be required.To verify it is installed on a given HCL DX Server 9.5 with CF19 or later, navigate to the Configuration Wizard Admin console and then under Enterprise Applications . The dxconnect application will appear on the console as shown in the example below. For more information on accessing and working with the Configuration Wizard, refer to Accessing the Configuration Wizard topics. 2. In Red Hat OpenShift, the route for DXConnect is available under the name dx-deployment-service-dxconnect. For the other supported platforms, there is only one route path as usual. Generated by XML WebHelp","title":"Authentication"},{"location":"helm/architecture/dxcoreserver/","text":"DX Core server | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search DX Core server | HCL Digital Experience This topic provides information about restarting the DX Core server by using the DXClient tool. Restart DX Core server The restart-dx-core command is used to restart the DX Core server. Command description This command invokes the restart-dx-core tool inside the DXClient and runs the DX Core restart action. dxclient restart-dx-core Help command This command shows the help information for restart-dx-core command usage: dxclient restart-dx-core -h Command options Use this attribute to specify the username that is required for authenticating with the DX Core -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example Usage: dxclient restart-dx-core -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server> Limitation In Kubernetes based deployments, if there are more than one pod for the core container, the restart command of DXClient only restarts the pod it is connected to and not all running pods. For a full restart of all pods, leverage using the Kubernetes interfaces like kubectl . Generated by XML WebHelp","title":"Dxcoreserver"},{"location":"helm/architecture/dxcoreserver/#dx-core-server-hcl-digital-experience","text":"This topic provides information about restarting the DX Core server by using the DXClient tool.","title":"DX Core server | HCL Digital Experience"},{"location":"helm/architecture/dxcoreserver/#restart-dx-core-server","text":"The restart-dx-core command is used to restart the DX Core server. Command description This command invokes the restart-dx-core tool inside the DXClient and runs the DX Core restart action. dxclient restart-dx-core Help command This command shows the help information for restart-dx-core command usage: dxclient restart-dx-core -h Command options Use this attribute to specify the username that is required for authenticating with the DX Core -dxUsername <value> Use this attribute to specify the password that is required for authenticating with the DX Core -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Enviornment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example Usage: dxclient restart-dx-core -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server> Limitation In Kubernetes based deployments, if there are more than one pod for the core container, the restart command of DXClient only restarts the pod it is connected to and not all running pods. For a full restart of all pods, leverage using the Kubernetes interfaces like kubectl . Generated by XML WebHelp","title":"Restart DX Core server"},{"location":"helm/architecture/helm_arch_applications/","text":"This document will provide you with the deployment architecture of each application inside the HCL Digital Experience Kubernetes deployment using Helm Charts. Applications This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed. Core Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid. Ring API Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation. Content Composer Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities. Digital Asset Management Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data. Persistence Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller. Image Processor Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management. Design Studio (beta) Depends on: Core, Ring API Type: Stateless Runtime Controller Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence. Interdependency Matrix This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Helm arch applications"},{"location":"helm/architecture/helm_arch_applications/#applications","text":"This is a list of all applications that can be deployed inside Kubernetes. Please note, that each application will only list its next direct dependencies here. Sub-dependencies are not explicitly listed.","title":"Applications"},{"location":"helm/architecture/helm_arch_applications/#core","text":"Depends on: No dependencies Type: Stateful Core contains the main functionality that HCL Digital Experience consists of. The standard deployment will deploy at least one Pod of Core. If you already have an existing on-premise installation of DX Core, you can also use that one for your deployment. This deployment model is called hybrid.","title":"Core"},{"location":"helm/architecture/helm_arch_applications/#ring-api","text":"Depends on: Core (either Kubernetes or regular on-premise) Type: Stateless The Ring API is a REST API wrapping Core functionality. It provides easy to use API endpoints and needs a DX Core instance running. That instance can either be running inside the Kubernetes deployment or be an existing external on-premise DX-Core installation.","title":"Ring API"},{"location":"helm/architecture/helm_arch_applications/#content-composer","text":"Depends on: Ring API Type: Stateless Content Composer requires the Ring API to provide its Content authoring capabilities.","title":"Content Composer"},{"location":"helm/architecture/helm_arch_applications/#digital-asset-management","text":"Depends on: Ring API, Image Processor, Persistence Type: Stateful Digital Asset Management requires Ring API to talk to DX Core, the Image Processor to perform image manipulation and Persistence to store its application data.","title":"Digital Asset Management"},{"location":"helm/architecture/helm_arch_applications/#persistence","text":"Depends on: No dependencies Type: Stateful Persistence is used by the Digital Asset Management to store application data. It consists of a read/write primary node and at least one standby read-only node. The switch between the read/write primary and the read-only nodes is automatically performed by the Runtime Controller.","title":"Persistence"},{"location":"helm/architecture/helm_arch_applications/#image-processor","text":"Depends on: No dependencies Type: Stateless The Image Processor provides image manipulation capabilities that are leveraged by Digital Asset Management.","title":"Image Processor"},{"location":"helm/architecture/helm_arch_applications/#design-studio-beta","text":"Depends on: Core, Ring API Type: Stateless","title":"Design Studio (beta)"},{"location":"helm/architecture/helm_arch_applications/#runtime-controller","text":"Depends on: No dependencies Type: Stateless The Runtime Controller incorporates runtime management functionality for the hcl-dx-deployment. It enabled automated rollout of configuration changes during runtime and acts as a watchdog for the automated read/write to read-only fallback of Persistence.","title":"Runtime Controller"},{"location":"helm/architecture/helm_arch_applications/#interdependency-matrix","text":"This matrix shows which application has which other application as a dependency. This also includes sub-dependencies, e.g. if an application uses Ring API, it is also depending on DX Core. Application names translate the following way: Shortname Full Name Core Core Ring API Ring API CC Content Composer DAM Digital Asset Management DS Design Studio PER Persistence IMG Image Processor","title":"Interdependency Matrix"},{"location":"helm/architecture/personalization/","text":"Personalization rules | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Personalization rules | HCL Digital Experience This topic contains the commands that the administrators can use to export and import the personalization (PZN) rules from the source server to the target server as specified by the user. Export PZN rules Command description The pzn-export command is used to export the rules from the source server location specified by the user. dxclient pzn-export Help command This command shows the help information for pzn-export command usage: dxclient pzn-export -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443: -dxPort <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing: -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE'): -targetWorkspace <value> Note: The targetPath and targetWorkspace parameters are optional. If the user does not pass the respective parameters, then the default values are taken. Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-export -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> The outputfile for pzn export is generated in the following path: store/outputFiles/pznrules Import PZN rules Command description The pzn-import command is used to import the rules into the target server. dxclient pzn-import Required files Rules file: This file should contain the configuration XML representation of all the currently selected personalization objects. Help command This command shows the help information for pzn-import command usage: dxclient pzn-import -h Command options Use this attribute to specify the protocol with which to connect to the DX server -dxProtocol <value> Use this attribute to specify the hostname of the target DX server -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443 -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the import file path that is required while executing the pzn import task -rulesFilePath <Absolute or relative path to import nodes file> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE') -targetWorkspace <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Notes: * For Kubernetes environments, dxProtocol should be http , hostname should be localhost, dxPort should be 10039 as DXConnect doesn't support https due to SSL Handshake challenges at this time. * The dxProtocol , hostname , dxPort , targetWorkspace , and targetPath parameters are optional. If the user does not pass the respective parameters, then the default values are taken. All the above command options can be configured in the config.json file of the tool, which is read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-import -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxConnectPort <dxConnectPort> -rulesFilePath <rulesFilePath> On this page* Export PZN rules * Import PZN rules Generated by XML WebHelp","title":"Personalization"},{"location":"helm/architecture/personalization/#personalization-rules-hcl-digital-experience","text":"This topic contains the commands that the administrators can use to export and import the personalization (PZN) rules from the source server to the target server as specified by the user.","title":"Personalization rules | HCL Digital Experience"},{"location":"helm/architecture/personalization/#export-pzn-rules","text":"Command description The pzn-export command is used to export the rules from the source server location specified by the user. dxclient pzn-export Help command This command shows the help information for pzn-export command usage: dxclient pzn-export -h Command options Use this attribute to specify the protocol with which to connect to the DX server: -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443: -dxPort <value> Use this attribute to specify the username to authenticate with the DX server: -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing: -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE'): -targetWorkspace <value> Note: The targetPath and targetWorkspace parameters are optional. If the user does not pass the respective parameters, then the default values are taken. Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> All the above command options can be configured in the config.json file of the tool, which is read by default. The configuration file is located at <working-directory>/store/config.json . The options that are passed through the command line override the default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-export -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> The outputfile for pzn export is generated in the following path: store/outputFiles/pznrules","title":"Export PZN rules"},{"location":"helm/architecture/personalization/#import-pzn-rules","text":"Command description The pzn-import command is used to import the rules into the target server. dxclient pzn-import Required files Rules file: This file should contain the configuration XML representation of all the currently selected personalization objects. Help command This command shows the help information for pzn-import command usage: dxclient pzn-import -h Command options Use this attribute to specify the protocol with which to connect to the DX server -dxProtocol <value> Use this attribute to specify the hostname of the target DX server -hostname <value> Use this attribute to specify the port on which to connect to the DX server,for Kubernetes Environment dxPort is 443 -dxPort <value> Use this attribute to specify the username to authenticate with the DX server -dxUsername <value> Use this attribute to specify the password for the user in the \"dxUsername\" attribute -dxPassword <value> Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the import file path that is required while executing the pzn import task -rulesFilePath <Absolute or relative path to import nodes file> Use this attribute to specify the location in the target workspace, which is the parent for the published nodes. The target path must exist before publishing -targetPath <value> Use this attribute to specify the name of the workspace containing the rules in DX server (default targetWorkspace is 'ROOTWORKSPACE') -targetWorkspace <value> Use this attribute to specify the path to the context root on the DX server (for example, /wps): -dxContextRoot <value> Notes: * For Kubernetes environments, dxProtocol should be http , hostname should be localhost, dxPort should be 10039 as DXConnect doesn't support https due to SSL Handshake challenges at this time. * The dxProtocol , hostname , dxPort , targetWorkspace , and targetPath parameters are optional. If the user does not pass the respective parameters, then the default values are taken. All the above command options can be configured in the config.json file of the tool, which is read by default. Location of the configuration file - <working-directory>/store/config.json . The options passed through command line will override these default values. Log files from command execution can be found in the logs directory of the DXClient installation. Example Usage: dxclient pzn-import -dxProtocol <dxProtocol> -hostname <hostname> -dxPort <dxPort> -dxUsername <dxUsername> -dxPassword <dxPassword> -dxConnectHostname <dxConnectHostname> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxConnectPort <dxConnectPort> -rulesFilePath <rulesFilePath> On this page* Export PZN rules * Import PZN rules Generated by XML WebHelp","title":"Import PZN rules"},{"location":"helm/architecture/portlets/","text":"Portlets | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Portlets | HCL Digital Experience This topic provides information about the deployment and undeployment of portlets. Deploy Portlets The deploy-portlet command is used to deploy one or more new or updated portlets from a source client or server environment to target HCL DX 9.5 CF19 or later server using a provided input XMLAccess file and deployable Portlet WAR file.Note: The synchronization mode of all nodes in a clustered DX environment must be consistently set for a newly deployed portlet to be automatically started; otherwise redeployment or a manual start is required. Required files XMLAccess file This xml file should contain the definition of the web application along with the details of the portlet(s) to be deployed. The web archive file path referred to in this file inside the URL element is ignored, but the URL element itself must exist as it is dynamically replaced when the command is executed. A sample XML file for deploying portlet(s) can be found in the samples directory of DXClient (samples/DeployPortlet.xml) or in DX server located in the following directory: PortalServer_root/doc/xml-samples/DeployPortlet.xml. Portlet Application web archive file This web archive .war file should contain the necessary portlet artifacts for deployment, as per the JSR 286 portlet standard. Refer to Importing WAR files | HCL Digital Experience Command dxclient deploy-portlet -xmlFile <path> -warFile <path> Help command This command shows the help document on the deploy-portlet command usage: dxclient deploy-portlet -h Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to XMLAccess input file> Use this attribute to specify the local path to the WAR file to be deployed: -warFile <Absolute or relative path to deployable war file> Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value will typically be the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the dist/src/configuration directory of the DXClient installation. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation. Undeploy portlets The undeploy-portlet command is used to undeploy the portlets in the target DX servers.Note: Undeploy-portlet command takes a backup of the XML file of the deployed portlet application and application (EAR) if user has given enableBackup as true. By default, enableBackup is set to true and placed in the store/outputFiles/portlets/backup/undeploy-portlet/ . In case, if the undeployed portlet is required again, then the user can restore the portlet WAR file from the downloaded portlet application EAR file along with the exported deployable portlet application XML file. Command description This command invokes the undeploy-portlet tool inside the DXClient. The undeploy-portlet dxtool uses the provided files and executes the undeploy portlet task. dxclient undeploy-portlet Help command This command shows the help information for undeploy-portlet command usage: dxclient undeploy-portlet -h Required files This file should contain the definition of the web application along with the undeploy portlet. dxclient undeploy-portlet -xmlFile <path> Command options Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/configwps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to take the backup of portlet application before undeploying it: -enableBackup <value> Commands required when enableBackup is set to true Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example usage: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> Example Usage when enableBackup is set to true: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -enableBackup true -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy Portlets * Undeploy portlets Generated by XML WebHelp","title":"Portlets"},{"location":"helm/architecture/portlets/#portlets-hcl-digital-experience","text":"This topic provides information about the deployment and undeployment of portlets.","title":"Portlets | HCL Digital Experience"},{"location":"helm/architecture/portlets/#deploy-portlets","text":"The deploy-portlet command is used to deploy one or more new or updated portlets from a source client or server environment to target HCL DX 9.5 CF19 or later server using a provided input XMLAccess file and deployable Portlet WAR file.Note: The synchronization mode of all nodes in a clustered DX environment must be consistently set for a newly deployed portlet to be automatically started; otherwise redeployment or a manual start is required. Required files XMLAccess file This xml file should contain the definition of the web application along with the details of the portlet(s) to be deployed. The web archive file path referred to in this file inside the URL element is ignored, but the URL element itself must exist as it is dynamically replaced when the command is executed. A sample XML file for deploying portlet(s) can be found in the samples directory of DXClient (samples/DeployPortlet.xml) or in DX server located in the following directory: PortalServer_root/doc/xml-samples/DeployPortlet.xml. Portlet Application web archive file This web archive .war file should contain the necessary portlet artifacts for deployment, as per the JSR 286 portlet standard. Refer to Importing WAR files | HCL Digital Experience Command dxclient deploy-portlet -xmlFile <path> -warFile <path> Help command This command shows the help document on the deploy-portlet command usage: dxclient deploy-portlet -h Command options Use this attribute to specify the protocol with which to connect to the DX server ( wp_profile ): -dxProtocol <value> Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <Absolute or relative path to XMLAccess input file> Use this attribute to specify the local path to the WAR file to be deployed: -warFile <Absolute or relative path to deployable war file> Use this attribute to specify the Configuration Wizard Console port number: -dxConnectPort <value> Use this attribute to specify the config wizard home (change to the appropriate route in the case of an OpenShift Kubernetes Environment, otherwise the value will typically be the same as the hostname) that is required for authenticating with the DXConnect application: -dxConnectHostname <value> Use this attribute to specify the Configuration Wizard Administrator username that is required for authenticating with the DXConnect application: -dxConnectUsername <value> Use this attribute to specify the Configuration Wizard Administrator password that is required for authenticating with the DXConnect application: -dxConnectPassword <value> All of the above command options can also be configured inside the config.json configuration file of the DXClient tool, available in the dist/src/configuration directory of the DXClient installation. Command options passed through the command line will override values set in the config.json file. Log files from command execution can be found in the logs directory of the DXClient installation.","title":"Deploy Portlets"},{"location":"helm/architecture/portlets/#undeploy-portlets","text":"The undeploy-portlet command is used to undeploy the portlets in the target DX servers.Note: Undeploy-portlet command takes a backup of the XML file of the deployed portlet application and application (EAR) if user has given enableBackup as true. By default, enableBackup is set to true and placed in the store/outputFiles/portlets/backup/undeploy-portlet/ . In case, if the undeployed portlet is required again, then the user can restore the portlet WAR file from the downloaded portlet application EAR file along with the exported deployable portlet application XML file. Command description This command invokes the undeploy-portlet tool inside the DXClient. The undeploy-portlet dxtool uses the provided files and executes the undeploy portlet task. dxclient undeploy-portlet Help command This command shows the help information for undeploy-portlet command usage: dxclient undeploy-portlet -h Required files This file should contain the definition of the web application along with the undeploy portlet. dxclient undeploy-portlet -xmlFile <path> Command options Use this attribute to specify the hostname of the target DX server: -hostname <value> Use this attribute to specify the protocol with which to connect to the DX server (wp_profile): -dxProtocol <value> Use this attribute to specify the port on which to connect to the DX server ( wp_profile ): -dxPort <value> Use this attribute to specify the path to DX configuration endpoint (e.g. /wps/configwps/config): -xmlConfigPath <value> Use this attribute to specify the username to authenticate with the DX server ( wp_profile ): -dxUsername <value> Use this attribute to specify the password for the user in the dxUsername attribute: -dxPassword <value> Use this attribute to specify the local path to the XMLAccess file: -xmlFile <xml file name with absolute path of the xmlaccess input file> Use this attribute to take the backup of portlet application before undeploying it: -enableBackup <value> Commands required when enableBackup is set to true Use this attribute to specify the config wizard home (route change only in case of Open Shift Kubernetes Environment, otherwise same as hostname) that is required for authenticating to the cw_profile -dxConnectHostname <value> Use this attribute to specify the port number of the cw_profile(for Kubernetes Environment dxConnectPort is 443) -dxConnectPort <value> Use this attribute to specify the username that is required for authenticating to the cw_profile -dxConnectUsername <value> Use this attribute to specify the password that is required for authenticating to the cw_profile -dxConnectPassword <value> Use this attribute to specify Soap port of the DX server -dxSoapPort <Soap port of the DX server> Specify either the dxProfileName or dxProfilePath of the DX core server: * Use this attribute to specify the profile name of the DX core server (for example: wp_profile ) -dxProfileName <Profile name of the DX core server> OR * Use this attribute to specify the profile path of the DX server (for example: /opt/HCL/wp_profile ) -dxProfilePath <Path of the DX core server profile> All the above command options can also be configured in the config.json configuration file of the DXClient tool, available in the /store directory of the DXClient installation. Note: If you have installed DXClient using the node package file, then you can find the config.json file in the following path: dist/src/configuration. The values that are passed through the command line override the default values. Example usage: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> Example Usage when enableBackup is set to true: dxclient undeploy-portlet -dxProtocol <dxProtocol> -hostname <host-name> -dxPort <dxPort> -xmlConfigPath <xmlConfigPath> -dxUsername <dxUsername> -dxPassword <dxPassword> -xmlFile <xml-file-with-path> -enableBackup true -dxSoapPort <dxSoapPort> -dxConnectHostname <hostname> -dxConnectPort <dxConnectPort> -dxConnectUsername <dxConnectUsername> -dxConnectPassword <dxConnectPassword> -dxProfileName <Profile name of the DX core server profile> On this page* Deploy Portlets * Undeploy portlets Generated by XML WebHelp","title":"Undeploy portlets"},{"location":"overview/ccf_95_cluster/","text":"Cumulative fix instructions: Cluster | HCL Digital Experience 9.5 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Cumulative fix instructions: Cluster | HCL Digital Experience 9.5 Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cluster upgrade planning There are two options for performing upgrade in a clustered environment. One option is to upgrade the cluster while the entire cluster has been taken offline from receiving user traffic. The upgrade is performed on every node in the cluster using the single-cluster procedure documented below before the cluster is brought back online to receive user traffic. This is the recommended approach for an environment with multiple Portal clusters since 24x7 availability can be maintained. It is also the simplest approach to use in a single cluster environment if maintenance windows allow for the Portal cluster to be taken offline. For single cluster environments, which cannot tolerate the outage required to take a cluster offline and perform the upgrade, you can utilize the single-cluster 24x7 availability process. Review the following requirements and limitations for performing product upgrades while maintaining 24x7 availability in a single cluster.Note: Ensure that you understand this information before upgrading your cluster. Assumptions for maintaining 24x7 operation during the upgrade process * If you want to preserve current user sessions during the upgrade process, make sure that WebSphere Application Server distributed session support is enabled to recover user session information when a cluster node is stopped for maintenance. Alternatively, use monitoring to determine when all (or most) user sessions on a cluster node have completed before stopping the cluster node for upgrade to minimize the disruption to existing user sessions. * Load balancing must be enabled in the clustered environment. * The cluster has at least two horizontal cluster members. Limitations on 24x7 maintenance The 24x7 Single cluster upgrade is only supported on a Rendering environment, with no deployments or authoring being performed during the upgrade process. Typical authoring or deployment tasks that must NOT be performed during the upgrade window (meaning until the whole cluster is upgraded): * Deploy portlets Execute XMLAccess Author, modify, delete content Run ConfigEngine Deploy PAAs Import or Export libraries Use the WAS AdminConsole or wsadmin tooling to deploy or modify configuration or code Use the Portal Admin portlets to make changes like delete a page Use any WCM system task like the workflowchecker or member fixer Change WebDAV resources like the theme Modify personalization rules Create or Delete Virtual Portals Perform JCR Search crawling with the Portal JCR search crawler (typically we recommend to disable textsearch for JCR for rendering systems) New features introduced with the Cumulative fix should not be enabled or leveraged until all cluster members have been upgraded to the CF If you have not implemented horizontal scaling and have implemented only vertical scaling in your environment such that all cluster members reside on the same node, the cumulative fix installation process will result in a temporary outage for your end users due to a required restart. In this case, you will be unable to upgrade while maintaining 24x7 availability. If you have a single local Web server in your environment, maintaining 24x7 availability during the cluster upgrade may not be possible since you might be required to stop the Web server while applying corrective service to the local WebSphere Application Server installation. When installing the cumulative fix in a clustered environment, the portlets are only deployed when installing the cumulative fix on the primary node. The cumulative fix installation on additional (also known as secondary) nodes simply synchronizes the node with the deployment manager to receive updated portlets. During the portlet deployment on the primary node, the database will be updated with the portlet configuration. This updated database, which is shared between all nodes, would be available to additional nodes before the additional nodes receive the updated portlet binary files. It is possible that the new portlet configuration will not be compatible with the previous portlet binary files, and in a 24x7 production environment problems may arise with anyone attempting to use a portlet that is not compatible with the new portlet configuration. Therefore it is recommended that you test your portlets before upgrading the production system in a 24x7 environment to determine if any portlets will become temporarily unavailable on additional nodes during the time between the completion of the cumulative fix installation on the primary node and the installation of the cumulative fix on the additional node. In order to maintain 24x7 operations in a clustered environment, it is required that you stop HCL Portal on one node at a time and upgrade it. It is also required that during the upgrade of the primary node, you manually stop node agents on all other cluster nodes that continue to service user requests. Failure to do so may result in portlets being shown as unavailable on nodes having the node agent running. When rolling back of the cumulative fix in a clustered environment, the portlets are only redeployed when roll back of the cumulative fix is on the primary node. The cumulative fix roll back on additional nodes simply synchronizes the node with the deployment manager to receive updated portlets. During the portlet redeployment on the primary node, the database will be updated with the portlet configuration, which would be available to additional nodes before the additional nodes receive the updated binary files, since all nodes share the same database. It is recommended that you test your portlets before rolling back on the production system in a 24x7 environment because the possibility of such incompatibility might arise if the previous portlet configuration is not compatible with the new portlet binary files. Before you begin Note: Unless you are migrating from a previous release or plan to add this node to an existing cluster, you must create your Portal profile before applying the cumulative fix. If you did not do this during the initial installation, you can use the Configuration Wizard to do so now. Portal Version 8.5 CF12 or later introduces support for JDK8. However, if you plan to use JDK 8 with your profile, you must first create the profile using JDK 7 and then upgrade to JDK 8 after applying the cumulative fix. Note: In Portal Version 8.5 CF12 or later, the blacklist settings have become more restrictive. For inquiries, go to HCL Software Support page. Space RequirementsEnsure that enough disk space is available in the following directories: * For all platforms: 2.0 GB in the download directory to download the cumulative fix, 1.5 GB in Portal_Install_Root , 1 GB temporary disk space in (wp_profile_root) , and 1.66 GB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update. * For Solaris: It is recommended that you allocate swap space equal to at least twice your physical RAM to avoid memory errors during the configuration of this cumulative fix. Best Practices Go to the HCL Software Support page for Portal Upgrade Best Practices. Syndicator/Subscriber Information It is recommended that servers utilizing syndication have associated syndicators and subscribers disabled prior to installing the cumulative fixpack. Otherwise syndication updates that run during install may clash with install modifications and can cause the CF update to fail. Syndicators and subscribers can be disabled by editing them in the syndication administration portlet. Go to the Syndicators and Subscribers topic pages in the HCL Digital Experience Version 8.5 product documentation for more information. Syndication should then be re-enabled after the update is complete. Alternatively, the following ConfigEngine tasks have also been integrated into CF09 or later to globally disable and enable syndication (These tasks can be used in place of the manual updates linked above: <wp_profile root>/ConfigEngine/ConfigEngine.sh|.bat disable-syndication-auto-scheduler <wp_profile root>/ConfigEngine/ConfigEngine.sh|.bat enable-syndication-auto-scheduler Search Crawler Information It is recommended that any search crawlers are disabled before applying the CF. If a CF is applied at the same time the crawler is running, this may corrupt the search collection. The search crawler should be restarted after the CF update is complete. Backing up the Installation Manager data Backup the contents of the IBM Installation Manager data directory on the server you are upgrading in the event you lose connection during the upgrade, as this could corrupt the data directory. The default locations of these directories are: * Windows: C:\\ProgramData\\IBM\\InstallationManager * Linux/UNIX root users: /var/ibm/InstallationManager * Linux/UNIX non-root users: /home/(user id)/var/ibm/InstallationManager * IBM i: Installation location: /QIBM/ProdData/InstallationManager * IBM i: Agent data location: /QIBM/UserData/InstallationManager Known Issues Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 9.5 CF releases. Review supported hardware/software requirements For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the Supported hardware and software requirements article for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server. Note: Ensure that the optional WebSphere Application Server feature \"EJBDeploy tool for pre-EJB 3.0 modules\" is installed. Check fixes installed on your system All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information. Special instructions pertaining to HCL Digital Experience Patterns Please note: These instructions are highlighted in this section but should be taken in the context of the rest of this readme. For each step, assure that you have read thru this readme and are taking all other documentation into account. If the Portal server default profile (wp_profile) directory is owned by a different OS user than the default binary directory (PortalServer), extra manual steps are needed before running Installation Manager to update to the cumulative fix. 1. Run the chown command to change ownership of the (wp_profile) directory to the same owner as PortalServer: chown -R OSUser:admingroup /opt/IBM/WebSphere/wp_profile. Run the Installation Manager update for the Portal Version 8.5 CF as the user that owns PortalServer. Run the chown command to change ownership of the (wp_profile) tree back to the original owner: chown -R Original-OSUser:admingroup /opt/IBM/WebSphere/(wp_profile) Run applyCF.sh as portaladmin the same owner as (wp_profile) Note: /opt/HCL/WebSphere will vary depending on what the installation directory actually is. Note: OSUser will vary depending on which user owns the PortalServer directory Ensure wkplc properties files are correct The HCL Portal upgrade will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. Edit the <wp_profile root>/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your WAS instance> WasSoapPort=<the soap port of your WAS instance> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Note: If your server is configured with database runtime users, for example, feedback.DbRuntimeUser=<your feedback database runtime user> , ensure to set their password values correctly as well, for example, in feedback.DbRuntimePassword=<your feedback database runtime user password> . Unix, Linux, Windows, and IBM i: The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false Multiple profile considerations Verify that all of your profiles are at the same level before starting the upgrade or rollback. All profiles that share the same Portal installation directory (multiple profile option) must be manually upgraded after the IBM Installation Manager update completes. See the \"Additional configuration steps\" for details. Non-root considerations In Unix/Linux environments, you must install the cumulative fix as the same user which you used to install HCL Portal originally. This could be either root or a non-root user. If you need to use a non-root user, ensure the following conditions are met: * If you are installing as a non-root user on Unix or Linux, the umask setting for your login session must be set to 0022 or better. (umask is a setting that controls what file permissions are set for newly created files and directories. A value of 0022 correspond to permission settings of (rwxr-xr-x).) If the umask is not set appropriately by default, you must set it when you start Installation Manager or when you open a command-line utility to run Installation Manager commands. * The non-root user has a \"ulimit - n\" setting of at least 18192. This must be a number and not \"unlimited\". * The non-root user owns the AppServer, PortalServer, ConfigEngine, and Portal profile directories and has read/write access to all files in these directories. Permission settings of 755 (rwxr-xr-x) are sufficient. * Do not use \"sudo\" or \"su\" to install the fix pack. Either use root explicitly or use a non-root user that meets the above conditions. To open a command-line utility to run Installation Manager commands: 1. Open a command line window. 2. Run this command to check your current umask setting: umask If necessary, run this command to set the umask: umask 0022 Anti-virus and file indexing software considerations (Windows only) As part of the CF upgrade process, new files will be created in the WebSphere installation directory, as well as the user's temp directory. Anti-viruses and file indexing software (like Google Desktop) have been known to lock newly created files as they are being scanned, which can interfere with the upgrade process. If you find such software is interfering with the Portal CF upgrade process contact the software vendor for further assistance. Note: If it is possible, we recommend to exclude the WebSphere installation directory and the user's temp directory from being scanned by this software during the upgrade. Or you can stop /disable these tools for the duration of the upgrade, and re-enable them after the upgrade completes. However HCL does not recommend such modifications and instead recommends to contact the software vendor for further assistance. Special note for customers using WAS 8.5.5.14 Support for WebSphere Application Server v8.5.5.14 will be added in Portal Cumulative Fix 16. If you need to apply Portal Cumulative Fix 15 or earlier to a WAS v8.5.5.14 installation, you will need to perform an additional manual step during the upgrade. After running Installation Manager to install the new Portal code but before running the applyCF.sh or applyCF.bat command to update the Portal profile, perform these steps: 1. Open a command Window and switch to the ConfigEngine home directory. By default this is: \ufeffUnix/Linux: /opt/IBM/WebSphere/ConfigEngine Windows: C:\\IBM\\WebSphere\\ConfigEngine IBM i: /QIBM/ProdData/WebSphere/ConfigEngine Make a backup copy of the ConfigEngine script. This file is named ConfigEngine.bat for Windows and ConfigEngine.sh for all other platforms. Make sure your user has write permissions for the script file and open it in a text editor. Look for the text EJBDEPLOY_JAVA_HOME in the script. If you do not find it, no further action is necessary and you can continue with the installation. If you do find it, delete every line that contains the text EJBDEPLOY_JAVA_HOME anywhere in the line. (There should be 3 such lines in the .sh script and 2 lines in the .bat script.) Save the file. You may now continue with the installation of the Portal CF. Download the cumulative fix If you are installing the cumulative fix using a live repository, then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Go and log in to HCL Software Support and download the latest zip file that corresponds to the installation on your system. 2. Create a directory and extract the zip file(s) into this directory. Inside the zip file is a readme file, sample response files (Server and Express only), and the actual cumulative fix file itself. 3. Create a sub-directory and extract the appropriate WP8500CFnn_ zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update. Disabling automatic synchronization and stopping the node agents Ensure that automatic synchronization is disabled and that all node agents are stopped for all Portal clusters in the cell. When the automatic synchronization is enabled, the node agent on each node automatically contacts the deployment manager at startup and at every synchronization interval to attempt to synchronize the node's configuration repository with the master repository managed by the deployment manager. 1. In the administrative console for the deployment manager, select System administration then Node agents in the navigation tree. 2. Click nodeagent for the required node. 3. Click File Synchronization Service. 4. Uncheck the Automatic Synchronization check box and uncheck the Enable service at server startup check box on the File Synchronization Service page to disable the automatic synchronization feature and synchronization service at server startup and then click OK. 5. Repeat these steps for all other nodes to be upgraded. 6. Click Save to save the configuration changes to the master repository. 7. Select System administration then Nodes in the navigation tree. 8. Select all nodes that are not synchronized, and click on Synchronize. 9. Select System administration then Node agents in the navigation tree. 10. For the primary node and all additional nodes in all Portal clusters in the cell, select the node agents and click Stop. If you do not stop the node agents the cumulative fix configuration might fail. Upgrading the primary node There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use console mode installation Start with the step \"Stopping IP traffic\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the \"Additional configuration steps.\" Note: Do not attempt to combine the steps for primary and secondary nodes. The update must be performed first on the primary node and then on the additional nodes, according to the following instructions. When instructed to stop or start the HCL Portal server, stop or start all Portal server instances including vertical cluster members on the node. Stopping IP traffic (Required only if following the 24x7 single cluster upgrade.) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps below to stop traffic to the node. To stop traffic to the nods: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are upgrading and change the value in the Configured weight column to zero. NOTE: Record the previous value to restore the setting when the upgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. If automatic propagation of the plug-in configuration file is enabled on the web server(s) disable it from the Deployment Manager administrative console by going to Servers > Server Types > Web Servers > web_server_name Plug-in Properties and unchecking Automatically propagate plug-in configuration file. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web server. Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the <wp_profile>/bin directory and again from the <cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the <dmgr>/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps.\" Use a command line (available on Windows, Linux, and Unix operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the <wp_profile>/bin directory and again from the <cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are installing the cumulative fix on HCL Portal Express, skip to Step 5. Otherwise, run the following command to launch the installation program of Installation Manager. For Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager. In Linux: ./imcl install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense In Windows: imcl.exe install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense NOTE: The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. 6. After installation completes, proceed with the \"Additional configuration steps.\" Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the <wp_profile)/bin directory and again from the <cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the <dmgr>/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Do note that the feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is features='ce.install,portal.binary,portal.profile' . If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or installing an additional node for a cluster, or creating multiple profiles, or you originally installed HCL Portal Version 8.5 as a binary install), then you should remove the 'portal.profile' feature from the features='ce.install,portal.binary' list. Run the following command to install in silent mode: imcl -acceptLicense -input <Full_path_to_your_response_file> -log (Full_Path_to_a_log_file) -showProgress After installation completes, proceed with the \"Additional configuration steps.\" Use Console Mode installation (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c For Windows: imcl.exe -c For IBM i: ./imcl -c Add the repositories. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps\". To add the repositories: * Enter P to go to the Preferences menu. * Enter 1 to go to the Repositories menu. * Enter D to add repositories. * Type the path for your HCL Portal Version 8.5 CF repository file. * Enter A to apply your repositories and return to the Preferences menu. * Enter R to return to the Main menu. Additional configuration steps If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal), no additional configuration steps are necessary and you can continue with the \"Restoring IP traffic\" steps described below. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Linux, Unix, Windows or IBM i Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Notes * If a remote search server is used within this environment, it should be started before running the following commands. * Also, if a WAS update has occurred prior to running the CF update, it is recommended to run the following task: <profile_root>/bin/osgiCfgInit.sh|bat Optional Note To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Ensure the nodeagent and HCL Portal servers are stopped on the profile you intend to upgrade. The Deployment Manager must be started. On the Farm Master Server execute the following command from within the path of the profile to configure: Do not that if you are installing the CF on an empty portal, see the Special Considerations below before running applyCF. Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. 3. On the Farm Support Server execute the following command from within the path of the profile to configure. Note: If the Farm Support Server only has read-only access to the Portal Binaries use the -DSharedBinaries=true flag with the applyCF command. Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. 1. If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux : <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to reimport that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml Restoring IP traffic (Required only if following the 24x7 single cluster upgrade) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the upgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the upgraded node. To restore traffic to the upgraded node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you upgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you previously disabled automatic propagation of the Web server(s), re-enable it now using the Deployment Manager administration console by going to Servers > Server Types > Web Servers > web_server_name > Plug-in Properties and checking Automatically propagate plug-in configuration file. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Upgrading additional nodes There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use console mode installation Start with the step \"Stopping IP traffic for additional nodes\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Additional configuration steps. Note: Do not attempt to upgrade additional nodes until after completing the upgrade of the primary node. The update for the primary must be performed and completed before the upgrade of any additional nodes. Additional node upgrades can be performed sequentially or in parallel. Update the additional nodes according to the following instructions. When instructed to stop or start the HCL Portal server, stop or start all Portal server instances including vertical cluster members on the node. Stopping IP traffic for additional nodes (Required only if following the 24x7 single cluster upgrade) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node. To stop traffic to the node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are upgrading and change the value in the Configured weight column to zero. NOTE: Record the previous value to restore the setting when the upgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Use a Graphical User Interface on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. >Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5 Using Installation Manager, click File > Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use a live repository via the Graphical User Interface on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. >Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5 Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click apply. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use a command line on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. >Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are installing the cumulative fix on HCL Portal Express, skip to step 5. Otherwise, run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix or Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager). Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use silent mode installation on additional nodes (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Do note that the feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is: features='ce.install,portal.binary,portal.profile' If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or installing an additional node for a cluster, or creating multiple profiles, or you originally installed HCL Portal Version 8.5 as a binary install), then you should remove the 'portal.profile' feature from the features='ce.install,portal.binary' list. 5. Run the following command to install in silent mode: imcl -acceptLicense -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use Console Mode installation on additional nodes (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: >>>>>>> 329a76e1666fc09ae889a59db9ed2c7e115bb8ce Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix or Linux: /imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Complete the following steps to add the repositories. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps\". To add the repositories: 1. Enter P to go to the Preferences menu. 2. Enter 1 to go to the Repositories menu. 3. Enter D to add repositories. 4. Type the path for your HCL Portal Version 8.5 CF repository file. 5. Enter A to apply your repositories and return to the Preferences menu. 6. Enter R to return to the Main menu. Additional configuration steps on additional nodes If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal), no additional configuration steps are necessary and you can continue with the \"Restoring IP traffic\" steps described below. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Linux, Unix, Windows or IBM i Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Notes: * If a remote search server is used within this environment, it should be started before running the following commands. * Also, if a WAS update has occurred prior to running the CF update, it is recommended to run the following task: <profile_root>/bin/osgiCfgInit.sh|bat Optional Note To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Ensure the nodeagent and HCL Portal servers are stopped on the profile you intend to upgrade. The Deployment Manager must be started. Execute the following command from within the path of the profile to configure. Do note that if you are installing the CF on an empty portal, see the Special Considerations below before running applyCF. Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. 3. Verify that your system is operational by entering the server's URL in a browser and logging in to browse the content. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. If you have created any custom content on top of the empty portal, you must first use xmlaccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. 3. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux : <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM\u00ae i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to reimport that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user>> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml Restoring IP traffic (Required only if following the 24x7 single cluster upgrade.) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the upgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the upgraded node. If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the upgraded node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you upgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Finalizing the upgrade Re-enable automatic synchronization on all nodes in the cluster if you disabled it earlier. In the administrative console for the deployment manager, select System administration > Node agents in the navigation tree. Click nodeagent for the required node. Click File Synchronization Service. Check the Automatic Synchronization check box to enable the automatic synchronization feature and check the Enable service at server startup check box to enable the synchronization service at server startup on the File Synchronization Service page and then click OK. Repeat these steps for all remaining nodes. Click Save to save the configuration changes to the master repository. Select System administration > Nodes in the navigation tree. Select all nodes that are not synchronized, and click on Synchronize. Select System administration > Node agents in the navigation tree. Select all node agents where automatic synchronization has been re-enabled and click Restart. If there is a custom theme that contains a static content WAR and the com.hcl.portal.resource.blacklist and com.hcl.portal.resource.whitelist context parameters have not yet been added to the web.xml file, Go and log in to HCL Software Support to find detailed information associated with Security Bulletin: Fix Available for Security Vulnerability in HCL Digital Experience (CVE-2014-8912). The changes associated with this security bulletin (APAR PI47714) can cause custom themes to produce a lot of warning messages in the logs resulting in a significant performance penalty. The custom theme must be redeployed before the changes will take effect. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to installing the cumulative fix. If you have set up a remote search server or document conversion server for use with HCL Portal Version 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. Refer to the HCL Portal Version 8.5 combined cumulative fix instructions: remote search for the details of applying a cumulative fix to the remote server. Go and log in to HCL Software Support to find documentation to see if Configuration Changes and Options introduced in HCL Digital Experience Version 8.5 Combined Cumulative Fixes applies to your environment. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. This task needs to be run for primary and additional nodes. Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * For MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * or SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled If you brought down the entire cluster to perform the upgrade (not maintaining 24 x 7 on a single cluster), and the automatic plug-in generation and propagation are disabled on your web server Plug-in properties, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Clear the browser cache. Please go to Recommended Updates for HCL Digital Experience to review and apply any recommended fixes. Prior to CF07, it was recommended to set the DB2 database configuration parameter \"dft_queryopt\" to a value of 2 as this was tested to provide the best balance of query optimization time and query execution time for the SQL produced by the JCR. For CF07 or later, this recommendation has been changed to use a value of 5 in conjunction with the testing and changes made to the JCR and JCR schema. This setting is NOT updated automatically within your JCR Database Domain configuration as part of the CF07 (or later) upgrade. This can be done manually by customers by executing the following SQL against the JCR Domain Database: db2 update db cfg for JCRDBNAME using DFT_QUERYOPT 5 Or it can also be done by running the following Config Engine Task: configure-jcr-db2-dft-queryopt Before you begin roll back NOTE: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. NOTE: Versions of Portal prior to CF12 do not support JDK 8. Therefore, if JDK 8 has been enabled in CF12 or later, the managesdk command must be used to switch back to JDK 7 or 7.1 before performing a rollback to CF11 or earlier. Limitations * Changing the server context root after upgrading is an unsupported rollback path. To roll back after changing the context root, you must first change the server context root to the values of the previous version. * When rolling back a CF install, if you have configured an empty context root you cannot roll back to a CF level that does not support the empty context root capability. For instance, if you have applied CF08 and have configured an empty context root you cannot rollback to CF07. If you have applied CF09 and have configured an empty context root you can roll back to CF08 but you would not be able to roll back if your previous CF level was CF07 or prior. * Configuring HCL Portal from a stand-alone environment to a clustered environment after upgrading is an unsupported rollback path. Ensure wkplc properties files are correct for roll back The HCL Portal roll back will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate on each node in the cluster, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. These steps need to be performed on all nodes. 1. Edit the <wp_profile root>/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your Dmgr> WasSoapPort=<the soap port of your Dmgr> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Unix, Linux, Windows, and IBM i: The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false Disabling automatic synchronization and stopping the node agents for roll back Ensure that automatic synchronization is disabled and that all node agents are stopped for all Portal clusters in the cell. When the automatic synchronization is enabled, the node agent on each node automatically contacts the deployment manager at startup and at every synchronization interval to attempt to synchronize the node's configuration repository with the master repository managed by the deployment manager. 1. In the administrative console for the deployment manager, select System administration > Node agents in the navigation tree. 2. Click nodeagent for the required node. 3. Click File Synchronization Service. 4. Uncheck the Automatic Synchronization check box and uncheck the Enable service at server startup check box on the File Synchronization Service page to disable the automatic synchronization feature and synchronization service at server startup and then click OK. 5. Repeat these steps for all other nodes to be downgraded. 6. Click Save to save the configuration changes to the master repository. 7. Select System administration > Nodes in the navigation tree. 8. Select all nodes that are not synchronized, and click on Synchronize. 9. Select System administration > Node agents in the navigation tree. 10. For the primary node and all additional nodes in all Portal clusters in the cell, select the node agents and click Stop. If you do not stop the node agents the cumulative fix configuration might fail. Steps to roll back the Primary node There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line roll back * Use silent mode roll back * Use console mode roll back Start with the step \"Stopping IP traffic for roll back\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Note: Do not attempt to combine the steps for primary and secondary nodes. The roll back must be performed first on the primary node and then on the additional nodes, according to the following instructions. Stopping IP traffic for roll back (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node. If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are downgrading and change the value in the Configured weight column to zero. Do record the previous value to restore the setting when the downgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. If automatic propagation of the plug-in configuration file is enabled on the web server(s) disable it from the Deployment Manager administrative console by going to Servers > Server Types > Web Servers > web_server_name > Plug-in Properties and unchecking Automatically propagate plug-in configuration file. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Use a Graphical User Interface to roll back (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Select \"Roll Back\" on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. After rollback completes, proceed with the\"Post Rollback Steps.\" Use a command line to roll back (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are rolling back the cumulative fix on HCL Portal Express, skip to Step 5. Otherwise, run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl rollback com.hcl.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> After roll back completes, proceed with the \"Post Rollback Steps.\" Use silent mode to roll back (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After roll back completes, proceed with the \"Post Rollback Steps.\" Use Console Mode to roll back (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /IBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Select Roll back and follow the prompts to roll back HCL Portal. After installation completes, proceed with the \"Post Rollback Steps.\" Post Rollback Steps Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Note: If a remote search server is used within this environment, it should be started before running the following commands. Ensure the nodeagent and HCL Portal and HCL Web Content Manager servers are stopped on the profile you intend to rollback. The Deployment Manager must be started. Run the following command from within the path of the profile to configure. Do note that if you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true Unix/Linux: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Portal and HCL Web Content Manager before re-running. 3. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. Verify that your system is operational by entering the server's URL in a browser and logging in to browse the content. Restoring IP traffic after roll back (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the downgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node. If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you downgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you previously disabled automatic propagation of the Web server(s), re-enable it now using the Deployment Manager administration console by going to Servers > Server Types > Web Servers > web_server_name > Plug-in Properties and checking Automatically propagate plug-in configuration file. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Steps to roll back additional nodes There are several different methods to roll back the cumulative fix on additional nodes, and they are: * Use a Graphical User Interface (GUI) to roll back on additional nodes * Use a command line roll back on additional nodes * Use silent mode roll back on additional nodes * Use console mode roll back on additional nodes Start with the step \"Stopping IP traffic for roll back for additional nodes\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps on additional nodes. Note: Do not attempt to roll back additional nodes until after completing the roll back of the primary node. The roll back for the primary must be performed and completed before the roll back of any additional nodes. Additional node roll backs can be performed sequentially or in parallel. Roll back the additional nodes in accordance with the following instructions. Stopping IP traffic for roll back for additional nodes (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node: If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are downgrading and change the value in the Configured weight column to zero. Record the previous value to restore the setting when the downgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Use a Graphical User Interface to roll back on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Select \"Roll Back\" on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. After roll back completes, proceed with the \"Post Rollback Steps on additional nodes.\" Use a command line to roll back on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are rolling back the cumulative fix on HCL Portal Express, skip to Step 5. Otherwise, run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.hcl.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl rollback com.hcl.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> After roll back completes, proceed with the \"Post Rollback Steps on additional nodes.\" Use silent mode to roll back on additional nodes (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After roll back completes, proceed with the \"Post Rollback Steps on additional nodes.\" Use Console Mode to roll back on additional nodes (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Select Roll back and follow the prompts to roll back HCL Portal. After installation completes, proceed with the \"Post Rollback Steps.\" Post Rollback Steps on additional nodes Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Note: If a remote search server is used within this environment, it should be started before running the following commands. Ensure the nodeagent and HCL Portal and HCL Web Content Manager servers are stopped on the profile you intend to rollback. The Deployment Manager must be started. Run the following command from within the path of the profile to configure. Do note that if you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true Unix/Linux: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Portal and HCL Web Content Manager before re-running. 3. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. 4. Verify that your system is operational by entering the server's URL in a browser and logging in to browse the content. Restoring IP traffic after roll back for additional nodes (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the downgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node. If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node: 1. In the Deployment Manager administrative console, click Servers Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you downgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Finalizing the roll back Re-enable automatic synchronization on all nodes in the cluster if you disabled it earlier. In the administrative console for the deployment manager, select System administration > Node agents in the navigation tree. Click nodeagent for the required node. Click File Synchronization Service. Check the Automatic Synchronization check box to enable the automatic synchronization feature and check the Enable service at server startup check box to enable the synchronization service at server startup on the File Synchronization Service page and then click OK. Repeat these steps for all remaining nodes. Click Save to save the configuration changes to the master repository. Select System administration > Nodes in the navigation tree. Select all nodes that are not synchronized, and click on Synchronize. Select System administration > Node agents in the navigation tree. Select all node agents where automatic synchronization has been re-enabled and click Restart. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using HCL Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to rolling back the cumulative fix. If you have set up a remote search server or document conversion server for use with HCL Portal Version 8.5, then whenever you roll back a cumulative fix to the portal server, you should also roll back the corresponding cumulative fix to the remote server. Refer to the HCL Portal Version 8.5 combined cumulative fix instructions: remote search for the details of rolling back a cumulative fix to the remote server. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. This task needs to be run for primary and additional nodes. Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * for MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * for SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled For rollback to CF03 or earlier level only: If the Brightcove integration was enabled perform the following steps: Uninstall the old Brightcove plugins. Install the new Brightcove plugins by following the install steps in the Configuring topic section to use Brightcove. For rollback to CF03 or earlier level only: If using Rich Media Edition, perform the following steps: Uninstall the Rich Media Edition plugins Restart Portal Server. Reinstall the Rich Media Edition plugins. If you brought down the entire cluster to perform the rollback (not maintaining 24 x 7 on a single cluster), and the automatic plug-in generation and propagation are disabled on your web server Plug-in properties, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Clear the browser cache. On this page* Cluster upgrade planning * Before you begin * Best Practices * Syndicator/Subscriber Information * Search Crawler Information * Backing up the Installation Manager data * Known Issues * Review supported hardware/software requirements * Check fixes installed on your system * Special instructions pertaining to HCL Digital Experience Patterns * Ensure wkplc properties files are correct * Unix, Linux, Windows, and IBM i: * Multiple profile considerations * Non-root considerations * Anti-virus and file indexing software considerations (Windows only) * Special note for customers using WAS 8.5.5.14 * Download the cumulative fix * Disabling automatic synchronization and stopping the node agents * Upgrading the primary node * Additional configuration steps * Upgrading additional nodes * Additional configuration steps on additional nodes * Finalizing the upgrade * Before you begin roll back * Disabling automatic synchronization and stopping the node agents for roll back * Steps to roll back the Primary node * Post Rollback Steps * Steps to roll back additional nodes * Post Rollback Steps on additional nodes * Finalizing the roll back Generated by XML WebHelp","title":"Ccf 95 cluster"},{"location":"overview/ccf_95_cluster/#cumulative-fix-instructions-cluster-hcl-digital-experience-95","text":"Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix.","title":"Cumulative fix instructions: Cluster | HCL Digital Experience 9.5"},{"location":"overview/ccf_95_cluster/#cluster-upgrade-planning","text":"There are two options for performing upgrade in a clustered environment. One option is to upgrade the cluster while the entire cluster has been taken offline from receiving user traffic. The upgrade is performed on every node in the cluster using the single-cluster procedure documented below before the cluster is brought back online to receive user traffic. This is the recommended approach for an environment with multiple Portal clusters since 24x7 availability can be maintained. It is also the simplest approach to use in a single cluster environment if maintenance windows allow for the Portal cluster to be taken offline. For single cluster environments, which cannot tolerate the outage required to take a cluster offline and perform the upgrade, you can utilize the single-cluster 24x7 availability process. Review the following requirements and limitations for performing product upgrades while maintaining 24x7 availability in a single cluster.Note: Ensure that you understand this information before upgrading your cluster. Assumptions for maintaining 24x7 operation during the upgrade process * If you want to preserve current user sessions during the upgrade process, make sure that WebSphere Application Server distributed session support is enabled to recover user session information when a cluster node is stopped for maintenance. Alternatively, use monitoring to determine when all (or most) user sessions on a cluster node have completed before stopping the cluster node for upgrade to minimize the disruption to existing user sessions. * Load balancing must be enabled in the clustered environment. * The cluster has at least two horizontal cluster members. Limitations on 24x7 maintenance The 24x7 Single cluster upgrade is only supported on a Rendering environment, with no deployments or authoring being performed during the upgrade process. Typical authoring or deployment tasks that must NOT be performed during the upgrade window (meaning until the whole cluster is upgraded): * Deploy portlets Execute XMLAccess Author, modify, delete content Run ConfigEngine Deploy PAAs Import or Export libraries Use the WAS AdminConsole or wsadmin tooling to deploy or modify configuration or code Use the Portal Admin portlets to make changes like delete a page Use any WCM system task like the workflowchecker or member fixer Change WebDAV resources like the theme Modify personalization rules Create or Delete Virtual Portals Perform JCR Search crawling with the Portal JCR search crawler (typically we recommend to disable textsearch for JCR for rendering systems) New features introduced with the Cumulative fix should not be enabled or leveraged until all cluster members have been upgraded to the CF If you have not implemented horizontal scaling and have implemented only vertical scaling in your environment such that all cluster members reside on the same node, the cumulative fix installation process will result in a temporary outage for your end users due to a required restart. In this case, you will be unable to upgrade while maintaining 24x7 availability. If you have a single local Web server in your environment, maintaining 24x7 availability during the cluster upgrade may not be possible since you might be required to stop the Web server while applying corrective service to the local WebSphere Application Server installation. When installing the cumulative fix in a clustered environment, the portlets are only deployed when installing the cumulative fix on the primary node. The cumulative fix installation on additional (also known as secondary) nodes simply synchronizes the node with the deployment manager to receive updated portlets. During the portlet deployment on the primary node, the database will be updated with the portlet configuration. This updated database, which is shared between all nodes, would be available to additional nodes before the additional nodes receive the updated portlet binary files. It is possible that the new portlet configuration will not be compatible with the previous portlet binary files, and in a 24x7 production environment problems may arise with anyone attempting to use a portlet that is not compatible with the new portlet configuration. Therefore it is recommended that you test your portlets before upgrading the production system in a 24x7 environment to determine if any portlets will become temporarily unavailable on additional nodes during the time between the completion of the cumulative fix installation on the primary node and the installation of the cumulative fix on the additional node. In order to maintain 24x7 operations in a clustered environment, it is required that you stop HCL Portal on one node at a time and upgrade it. It is also required that during the upgrade of the primary node, you manually stop node agents on all other cluster nodes that continue to service user requests. Failure to do so may result in portlets being shown as unavailable on nodes having the node agent running. When rolling back of the cumulative fix in a clustered environment, the portlets are only redeployed when roll back of the cumulative fix is on the primary node. The cumulative fix roll back on additional nodes simply synchronizes the node with the deployment manager to receive updated portlets. During the portlet redeployment on the primary node, the database will be updated with the portlet configuration, which would be available to additional nodes before the additional nodes receive the updated binary files, since all nodes share the same database. It is recommended that you test your portlets before rolling back on the production system in a 24x7 environment because the possibility of such incompatibility might arise if the previous portlet configuration is not compatible with the new portlet binary files.","title":"Cluster upgrade planning"},{"location":"overview/ccf_95_cluster/#before-you-begin","text":"Note: Unless you are migrating from a previous release or plan to add this node to an existing cluster, you must create your Portal profile before applying the cumulative fix. If you did not do this during the initial installation, you can use the Configuration Wizard to do so now. Portal Version 8.5 CF12 or later introduces support for JDK8. However, if you plan to use JDK 8 with your profile, you must first create the profile using JDK 7 and then upgrade to JDK 8 after applying the cumulative fix. Note: In Portal Version 8.5 CF12 or later, the blacklist settings have become more restrictive. For inquiries, go to HCL Software Support page. Space RequirementsEnsure that enough disk space is available in the following directories: * For all platforms: 2.0 GB in the download directory to download the cumulative fix, 1.5 GB in Portal_Install_Root , 1 GB temporary disk space in (wp_profile_root) , and 1.66 GB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update. * For Solaris: It is recommended that you allocate swap space equal to at least twice your physical RAM to avoid memory errors during the configuration of this cumulative fix.","title":"Before you begin"},{"location":"overview/ccf_95_cluster/#best-practices","text":"Go to the HCL Software Support page for Portal Upgrade Best Practices.","title":"Best Practices"},{"location":"overview/ccf_95_cluster/#syndicatorsubscriber-information","text":"It is recommended that servers utilizing syndication have associated syndicators and subscribers disabled prior to installing the cumulative fixpack. Otherwise syndication updates that run during install may clash with install modifications and can cause the CF update to fail. Syndicators and subscribers can be disabled by editing them in the syndication administration portlet. Go to the Syndicators and Subscribers topic pages in the HCL Digital Experience Version 8.5 product documentation for more information. Syndication should then be re-enabled after the update is complete. Alternatively, the following ConfigEngine tasks have also been integrated into CF09 or later to globally disable and enable syndication (These tasks can be used in place of the manual updates linked above: <wp_profile root>/ConfigEngine/ConfigEngine.sh|.bat disable-syndication-auto-scheduler <wp_profile root>/ConfigEngine/ConfigEngine.sh|.bat enable-syndication-auto-scheduler","title":"Syndicator/Subscriber Information"},{"location":"overview/ccf_95_cluster/#search-crawler-information","text":"It is recommended that any search crawlers are disabled before applying the CF. If a CF is applied at the same time the crawler is running, this may corrupt the search collection. The search crawler should be restarted after the CF update is complete.","title":"Search Crawler Information"},{"location":"overview/ccf_95_cluster/#backing-up-the-installation-manager-data","text":"Backup the contents of the IBM Installation Manager data directory on the server you are upgrading in the event you lose connection during the upgrade, as this could corrupt the data directory. The default locations of these directories are: * Windows: C:\\ProgramData\\IBM\\InstallationManager * Linux/UNIX root users: /var/ibm/InstallationManager * Linux/UNIX non-root users: /home/(user id)/var/ibm/InstallationManager * IBM i: Installation location: /QIBM/ProdData/InstallationManager * IBM i: Agent data location: /QIBM/UserData/InstallationManager","title":"Backing up the Installation Manager data"},{"location":"overview/ccf_95_cluster/#known-issues","text":"Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 9.5 CF releases.","title":"Known Issues"},{"location":"overview/ccf_95_cluster/#review-supported-hardwaresoftware-requirements","text":"For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the Supported hardware and software requirements article for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server. Note: Ensure that the optional WebSphere Application Server feature \"EJBDeploy tool for pre-EJB 3.0 modules\" is installed.","title":"Review supported hardware/software requirements"},{"location":"overview/ccf_95_cluster/#check-fixes-installed-on-your-system","text":"All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information.","title":"Check fixes installed on your system"},{"location":"overview/ccf_95_cluster/#special-instructions-pertaining-to-hcl-digital-experience-patterns","text":"Please note: These instructions are highlighted in this section but should be taken in the context of the rest of this readme. For each step, assure that you have read thru this readme and are taking all other documentation into account. If the Portal server default profile (wp_profile) directory is owned by a different OS user than the default binary directory (PortalServer), extra manual steps are needed before running Installation Manager to update to the cumulative fix. 1. Run the chown command to change ownership of the (wp_profile) directory to the same owner as PortalServer: chown -R OSUser:admingroup /opt/IBM/WebSphere/wp_profile. Run the Installation Manager update for the Portal Version 8.5 CF as the user that owns PortalServer. Run the chown command to change ownership of the (wp_profile) tree back to the original owner: chown -R Original-OSUser:admingroup /opt/IBM/WebSphere/(wp_profile) Run applyCF.sh as portaladmin the same owner as (wp_profile) Note: /opt/HCL/WebSphere will vary depending on what the installation directory actually is. Note: OSUser will vary depending on which user owns the PortalServer directory","title":"Special instructions pertaining to HCL Digital Experience Patterns"},{"location":"overview/ccf_95_cluster/#ensure-wkplc-properties-files-are-correct","text":"The HCL Portal upgrade will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. Edit the <wp_profile root>/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your WAS instance> WasSoapPort=<the soap port of your WAS instance> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Note: If your server is configured with database runtime users, for example, feedback.DbRuntimeUser=<your feedback database runtime user> , ensure to set their password values correctly as well, for example, in feedback.DbRuntimePassword=<your feedback database runtime user password> .","title":"Ensure wkplc properties files are correct"},{"location":"overview/ccf_95_cluster/#unix-linux-windows-and-ibm-i","text":"The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false","title":"Unix, Linux, Windows, and IBM i:"},{"location":"overview/ccf_95_cluster/#multiple-profile-considerations","text":"Verify that all of your profiles are at the same level before starting the upgrade or rollback. All profiles that share the same Portal installation directory (multiple profile option) must be manually upgraded after the IBM Installation Manager update completes. See the \"Additional configuration steps\" for details.","title":"Multiple profile considerations"},{"location":"overview/ccf_95_cluster/#non-root-considerations","text":"In Unix/Linux environments, you must install the cumulative fix as the same user which you used to install HCL Portal originally. This could be either root or a non-root user. If you need to use a non-root user, ensure the following conditions are met: * If you are installing as a non-root user on Unix or Linux, the umask setting for your login session must be set to 0022 or better. (umask is a setting that controls what file permissions are set for newly created files and directories. A value of 0022 correspond to permission settings of (rwxr-xr-x).) If the umask is not set appropriately by default, you must set it when you start Installation Manager or when you open a command-line utility to run Installation Manager commands. * The non-root user has a \"ulimit - n\" setting of at least 18192. This must be a number and not \"unlimited\". * The non-root user owns the AppServer, PortalServer, ConfigEngine, and Portal profile directories and has read/write access to all files in these directories. Permission settings of 755 (rwxr-xr-x) are sufficient. * Do not use \"sudo\" or \"su\" to install the fix pack. Either use root explicitly or use a non-root user that meets the above conditions. To open a command-line utility to run Installation Manager commands: 1. Open a command line window. 2. Run this command to check your current umask setting: umask If necessary, run this command to set the umask: umask 0022","title":"Non-root considerations"},{"location":"overview/ccf_95_cluster/#anti-virus-and-file-indexing-software-considerations-windows-only","text":"As part of the CF upgrade process, new files will be created in the WebSphere installation directory, as well as the user's temp directory. Anti-viruses and file indexing software (like Google Desktop) have been known to lock newly created files as they are being scanned, which can interfere with the upgrade process. If you find such software is interfering with the Portal CF upgrade process contact the software vendor for further assistance. Note: If it is possible, we recommend to exclude the WebSphere installation directory and the user's temp directory from being scanned by this software during the upgrade. Or you can stop /disable these tools for the duration of the upgrade, and re-enable them after the upgrade completes. However HCL does not recommend such modifications and instead recommends to contact the software vendor for further assistance.","title":"Anti-virus and file indexing software considerations (Windows only)"},{"location":"overview/ccf_95_cluster/#special-note-for-customers-using-was-85514","text":"Support for WebSphere Application Server v8.5.5.14 will be added in Portal Cumulative Fix 16. If you need to apply Portal Cumulative Fix 15 or earlier to a WAS v8.5.5.14 installation, you will need to perform an additional manual step during the upgrade. After running Installation Manager to install the new Portal code but before running the applyCF.sh or applyCF.bat command to update the Portal profile, perform these steps: 1. Open a command Window and switch to the ConfigEngine home directory. By default this is: \ufeffUnix/Linux: /opt/IBM/WebSphere/ConfigEngine Windows: C:\\IBM\\WebSphere\\ConfigEngine IBM i: /QIBM/ProdData/WebSphere/ConfigEngine Make a backup copy of the ConfigEngine script. This file is named ConfigEngine.bat for Windows and ConfigEngine.sh for all other platforms. Make sure your user has write permissions for the script file and open it in a text editor. Look for the text EJBDEPLOY_JAVA_HOME in the script. If you do not find it, no further action is necessary and you can continue with the installation. If you do find it, delete every line that contains the text EJBDEPLOY_JAVA_HOME anywhere in the line. (There should be 3 such lines in the .sh script and 2 lines in the .bat script.) Save the file. You may now continue with the installation of the Portal CF.","title":"Special note for customers using WAS 8.5.5.14"},{"location":"overview/ccf_95_cluster/#download-the-cumulative-fix","text":"If you are installing the cumulative fix using a live repository, then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Go and log in to HCL Software Support and download the latest zip file that corresponds to the installation on your system. 2. Create a directory and extract the zip file(s) into this directory. Inside the zip file is a readme file, sample response files (Server and Express only), and the actual cumulative fix file itself. 3. Create a sub-directory and extract the appropriate WP8500CFnn_ zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update.","title":"Download the cumulative fix"},{"location":"overview/ccf_95_cluster/#disabling-automatic-synchronization-and-stopping-the-node-agents","text":"Ensure that automatic synchronization is disabled and that all node agents are stopped for all Portal clusters in the cell. When the automatic synchronization is enabled, the node agent on each node automatically contacts the deployment manager at startup and at every synchronization interval to attempt to synchronize the node's configuration repository with the master repository managed by the deployment manager. 1. In the administrative console for the deployment manager, select System administration then Node agents in the navigation tree. 2. Click nodeagent for the required node. 3. Click File Synchronization Service. 4. Uncheck the Automatic Synchronization check box and uncheck the Enable service at server startup check box on the File Synchronization Service page to disable the automatic synchronization feature and synchronization service at server startup and then click OK. 5. Repeat these steps for all other nodes to be upgraded. 6. Click Save to save the configuration changes to the master repository. 7. Select System administration then Nodes in the navigation tree. 8. Select all nodes that are not synchronized, and click on Synchronize. 9. Select System administration then Node agents in the navigation tree. 10. For the primary node and all additional nodes in all Portal clusters in the cell, select the node agents and click Stop. If you do not stop the node agents the cumulative fix configuration might fail.","title":"Disabling automatic synchronization and stopping the node agents"},{"location":"overview/ccf_95_cluster/#upgrading-the-primary-node","text":"There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use console mode installation Start with the step \"Stopping IP traffic\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the \"Additional configuration steps.\" Note: Do not attempt to combine the steps for primary and secondary nodes. The update must be performed first on the primary node and then on the additional nodes, according to the following instructions. When instructed to stop or start the HCL Portal server, stop or start all Portal server instances including vertical cluster members on the node. Stopping IP traffic (Required only if following the 24x7 single cluster upgrade.) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps below to stop traffic to the node. To stop traffic to the nods: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are upgrading and change the value in the Configured weight column to zero. NOTE: Record the previous value to restore the setting when the upgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. If automatic propagation of the plug-in configuration file is enabled on the web server(s) disable it from the Deployment Manager administrative console by going to Servers > Server Types > Web Servers > web_server_name Plug-in Properties and unchecking Automatically propagate plug-in configuration file. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web server. Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the <wp_profile>/bin directory and again from the <cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the <dmgr>/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps.\" Use a command line (available on Windows, Linux, and Unix operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the <wp_profile>/bin directory and again from the <cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are installing the cumulative fix on HCL Portal Express, skip to Step 5. Otherwise, run the following command to launch the installation program of Installation Manager. For Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager. In Linux: ./imcl install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense In Windows: imcl.exe install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense NOTE: The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. 6. After installation completes, proceed with the \"Additional configuration steps.\" Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the <wp_profile)/bin directory and again from the <cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the <dmgr>/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Do note that the feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is features='ce.install,portal.binary,portal.profile' . If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or installing an additional node for a cluster, or creating multiple profiles, or you originally installed HCL Portal Version 8.5 as a binary install), then you should remove the 'portal.profile' feature from the features='ce.install,portal.binary' list. Run the following command to install in silent mode: imcl -acceptLicense -input <Full_path_to_your_response_file> -log (Full_Path_to_a_log_file) -showProgress After installation completes, proceed with the \"Additional configuration steps.\" Use Console Mode installation (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c For Windows: imcl.exe -c For IBM i: ./imcl -c Add the repositories. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps\". To add the repositories: * Enter P to go to the Preferences menu. * Enter 1 to go to the Repositories menu. * Enter D to add repositories. * Type the path for your HCL Portal Version 8.5 CF repository file. * Enter A to apply your repositories and return to the Preferences menu. * Enter R to return to the Main menu.","title":"Upgrading the primary node"},{"location":"overview/ccf_95_cluster/#additional-configuration-steps","text":"If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal), no additional configuration steps are necessary and you can continue with the \"Restoring IP traffic\" steps described below. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Linux, Unix, Windows or IBM i Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Notes * If a remote search server is used within this environment, it should be started before running the following commands. * Also, if a WAS update has occurred prior to running the CF update, it is recommended to run the following task: <profile_root>/bin/osgiCfgInit.sh|bat Optional Note To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Ensure the nodeagent and HCL Portal servers are stopped on the profile you intend to upgrade. The Deployment Manager must be started. On the Farm Master Server execute the following command from within the path of the profile to configure: Do not that if you are installing the CF on an empty portal, see the Special Considerations below before running applyCF. Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. 3. On the Farm Support Server execute the following command from within the path of the profile to configure. Note: If the Farm Support Server only has read-only access to the Portal Binaries use the -DSharedBinaries=true flag with the applyCF command. Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. 1. If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux : <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to reimport that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml Restoring IP traffic (Required only if following the 24x7 single cluster upgrade) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the upgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the upgraded node. To restore traffic to the upgraded node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you upgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you previously disabled automatic propagation of the Web server(s), re-enable it now using the Deployment Manager administration console by going to Servers > Server Types > Web Servers > web_server_name > Plug-in Properties and checking Automatically propagate plug-in configuration file. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers.","title":"Additional configuration steps"},{"location":"overview/ccf_95_cluster/#upgrading-additional-nodes","text":"There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use console mode installation Start with the step \"Stopping IP traffic for additional nodes\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Additional configuration steps. Note: Do not attempt to upgrade additional nodes until after completing the upgrade of the primary node. The update for the primary must be performed and completed before the upgrade of any additional nodes. Additional node upgrades can be performed sequentially or in parallel. Update the additional nodes according to the following instructions. When instructed to stop or start the HCL Portal server, stop or start all Portal server instances including vertical cluster members on the node. Stopping IP traffic for additional nodes (Required only if following the 24x7 single cluster upgrade) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node. To stop traffic to the node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are upgrading and change the value in the Configured weight column to zero. NOTE: Record the previous value to restore the setting when the upgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Use a Graphical User Interface on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. >Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5 Using Installation Manager, click File > Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use a live repository via the Graphical User Interface on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. >Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5 Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click apply. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use a command line on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the cw_profile>/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. >Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are installing the cumulative fix on HCL Portal Express, skip to step 5. Otherwise, run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix or Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.SERVER.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager). Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_server_root> -acceptLicense After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use silent mode installation on additional nodes (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Do note that the feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is: features='ce.install,portal.binary,portal.profile' If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or installing an additional node for a cluster, or creating multiple profiles, or you originally installed HCL Portal Version 8.5 as a binary install), then you should remove the 'portal.profile' feature from the features='ce.install,portal.binary' list. 5. Run the following command to install in silent mode: imcl -acceptLicense -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After installation completes, proceed with the \"Additional configuration steps on additional nodes.\" Use Console Mode installation on additional nodes (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the (dmgr)/bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: >>>>>>> 329a76e1666fc09ae889a59db9ed2c7e115bb8ce Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix or Linux: /imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Complete the following steps to add the repositories. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the \"Additional configuration steps\". To add the repositories: 1. Enter P to go to the Preferences menu. 2. Enter 1 to go to the Repositories menu. 3. Enter D to add repositories. 4. Type the path for your HCL Portal Version 8.5 CF repository file. 5. Enter A to apply your repositories and return to the Preferences menu. 6. Enter R to return to the Main menu.","title":"Upgrading additional nodes"},{"location":"overview/ccf_95_cluster/#additional-configuration-steps-on-additional-nodes","text":"If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal), no additional configuration steps are necessary and you can continue with the \"Restoring IP traffic\" steps described below. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Linux, Unix, Windows or IBM i Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Notes: * If a remote search server is used within this environment, it should be started before running the following commands. * Also, if a WAS update has occurred prior to running the CF update, it is recommended to run the following task: <profile_root>/bin/osgiCfgInit.sh|bat Optional Note To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Ensure the nodeagent and HCL Portal servers are stopped on the profile you intend to upgrade. The Deployment Manager must be started. Execute the following command from within the path of the profile to configure. Do note that if you are installing the CF on an empty portal, see the Special Considerations below before running applyCF. Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. 3. Verify that your system is operational by entering the server's URL in a browser and logging in to browse the content. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. If you have created any custom content on top of the empty portal, you must first use xmlaccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. 3. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux : <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM\u00ae i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to reimport that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user>> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml Restoring IP traffic (Required only if following the 24x7 single cluster upgrade.) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the upgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the upgraded node. If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the upgraded node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you upgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers.","title":"Additional configuration steps on additional nodes"},{"location":"overview/ccf_95_cluster/#finalizing-the-upgrade","text":"Re-enable automatic synchronization on all nodes in the cluster if you disabled it earlier. In the administrative console for the deployment manager, select System administration > Node agents in the navigation tree. Click nodeagent for the required node. Click File Synchronization Service. Check the Automatic Synchronization check box to enable the automatic synchronization feature and check the Enable service at server startup check box to enable the synchronization service at server startup on the File Synchronization Service page and then click OK. Repeat these steps for all remaining nodes. Click Save to save the configuration changes to the master repository. Select System administration > Nodes in the navigation tree. Select all nodes that are not synchronized, and click on Synchronize. Select System administration > Node agents in the navigation tree. Select all node agents where automatic synchronization has been re-enabled and click Restart. If there is a custom theme that contains a static content WAR and the com.hcl.portal.resource.blacklist and com.hcl.portal.resource.whitelist context parameters have not yet been added to the web.xml file, Go and log in to HCL Software Support to find detailed information associated with Security Bulletin: Fix Available for Security Vulnerability in HCL Digital Experience (CVE-2014-8912). The changes associated with this security bulletin (APAR PI47714) can cause custom themes to produce a lot of warning messages in the logs resulting in a significant performance penalty. The custom theme must be redeployed before the changes will take effect. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to installing the cumulative fix. If you have set up a remote search server or document conversion server for use with HCL Portal Version 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. Refer to the HCL Portal Version 8.5 combined cumulative fix instructions: remote search for the details of applying a cumulative fix to the remote server. Go and log in to HCL Software Support to find documentation to see if Configuration Changes and Options introduced in HCL Digital Experience Version 8.5 Combined Cumulative Fixes applies to your environment. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. This task needs to be run for primary and additional nodes. Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * For MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * or SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled If you brought down the entire cluster to perform the upgrade (not maintaining 24 x 7 on a single cluster), and the automatic plug-in generation and propagation are disabled on your web server Plug-in properties, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Clear the browser cache. Please go to Recommended Updates for HCL Digital Experience to review and apply any recommended fixes. Prior to CF07, it was recommended to set the DB2 database configuration parameter \"dft_queryopt\" to a value of 2 as this was tested to provide the best balance of query optimization time and query execution time for the SQL produced by the JCR. For CF07 or later, this recommendation has been changed to use a value of 5 in conjunction with the testing and changes made to the JCR and JCR schema. This setting is NOT updated automatically within your JCR Database Domain configuration as part of the CF07 (or later) upgrade. This can be done manually by customers by executing the following SQL against the JCR Domain Database: db2 update db cfg for JCRDBNAME using DFT_QUERYOPT 5 Or it can also be done by running the following Config Engine Task: configure-jcr-db2-dft-queryopt","title":"Finalizing the upgrade"},{"location":"overview/ccf_95_cluster/#before-you-begin-roll-back","text":"NOTE: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. NOTE: Versions of Portal prior to CF12 do not support JDK 8. Therefore, if JDK 8 has been enabled in CF12 or later, the managesdk command must be used to switch back to JDK 7 or 7.1 before performing a rollback to CF11 or earlier. Limitations * Changing the server context root after upgrading is an unsupported rollback path. To roll back after changing the context root, you must first change the server context root to the values of the previous version. * When rolling back a CF install, if you have configured an empty context root you cannot roll back to a CF level that does not support the empty context root capability. For instance, if you have applied CF08 and have configured an empty context root you cannot rollback to CF07. If you have applied CF09 and have configured an empty context root you can roll back to CF08 but you would not be able to roll back if your previous CF level was CF07 or prior. * Configuring HCL Portal from a stand-alone environment to a clustered environment after upgrading is an unsupported rollback path. Ensure wkplc properties files are correct for roll back The HCL Portal roll back will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate on each node in the cluster, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. These steps need to be performed on all nodes. 1. Edit the <wp_profile root>/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your Dmgr> WasSoapPort=<the soap port of your Dmgr> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the <wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Unix, Linux, Windows, and IBM i: The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false","title":"Before you begin roll back"},{"location":"overview/ccf_95_cluster/#disabling-automatic-synchronization-and-stopping-the-node-agents-for-roll-back","text":"Ensure that automatic synchronization is disabled and that all node agents are stopped for all Portal clusters in the cell. When the automatic synchronization is enabled, the node agent on each node automatically contacts the deployment manager at startup and at every synchronization interval to attempt to synchronize the node's configuration repository with the master repository managed by the deployment manager. 1. In the administrative console for the deployment manager, select System administration > Node agents in the navigation tree. 2. Click nodeagent for the required node. 3. Click File Synchronization Service. 4. Uncheck the Automatic Synchronization check box and uncheck the Enable service at server startup check box on the File Synchronization Service page to disable the automatic synchronization feature and synchronization service at server startup and then click OK. 5. Repeat these steps for all other nodes to be downgraded. 6. Click Save to save the configuration changes to the master repository. 7. Select System administration > Nodes in the navigation tree. 8. Select all nodes that are not synchronized, and click on Synchronize. 9. Select System administration > Node agents in the navigation tree. 10. For the primary node and all additional nodes in all Portal clusters in the cell, select the node agents and click Stop. If you do not stop the node agents the cumulative fix configuration might fail.","title":"Disabling automatic synchronization and stopping the node agents for roll back"},{"location":"overview/ccf_95_cluster/#steps-to-roll-back-the-primary-node","text":"There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line roll back * Use silent mode roll back * Use console mode roll back Start with the step \"Stopping IP traffic for roll back\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Note: Do not attempt to combine the steps for primary and secondary nodes. The roll back must be performed first on the primary node and then on the additional nodes, according to the following instructions. Stopping IP traffic for roll back (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node. If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are downgrading and change the value in the Configured weight column to zero. Do record the previous value to restore the setting when the downgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. If automatic propagation of the plug-in configuration file is enabled on the web server(s) disable it from the Deployment Manager administrative console by going to Servers > Server Types > Web Servers > web_server_name > Plug-in Properties and unchecking Automatically propagate plug-in configuration file. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Use a Graphical User Interface to roll back (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Select \"Roll Back\" on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. After rollback completes, proceed with the\"Post Rollback Steps.\" Use a command line to roll back (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are rolling back the cumulative fix on HCL Portal Express, skip to Step 5. Otherwise, run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl rollback com.hcl.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> After roll back completes, proceed with the \"Post Rollback Steps.\" Use silent mode to roll back (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After roll back completes, proceed with the \"Post Rollback Steps.\" Use Console Mode to roll back (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /IBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Select Roll back and follow the prompts to roll back HCL Portal. After installation completes, proceed with the \"Post Rollback Steps.\"","title":"Steps to roll back the Primary node"},{"location":"overview/ccf_95_cluster/#post-rollback-steps","text":"Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Note: If a remote search server is used within this environment, it should be started before running the following commands. Ensure the nodeagent and HCL Portal and HCL Web Content Manager servers are stopped on the profile you intend to rollback. The Deployment Manager must be started. Run the following command from within the path of the profile to configure. Do note that if you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true Unix/Linux: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Portal and HCL Web Content Manager before re-running. 3. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. Verify that your system is operational by entering the server's URL in a browser and logging in to browse the content. Restoring IP traffic after roll back (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the downgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node. If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you downgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you previously disabled automatic propagation of the Web server(s), re-enable it now using the Deployment Manager administration console by going to Servers > Server Types > Web Servers > web_server_name > Plug-in Properties and checking Automatically propagate plug-in configuration file. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers.","title":"Post Rollback Steps"},{"location":"overview/ccf_95_cluster/#steps-to-roll-back-additional-nodes","text":"There are several different methods to roll back the cumulative fix on additional nodes, and they are: * Use a Graphical User Interface (GUI) to roll back on additional nodes * Use a command line roll back on additional nodes * Use silent mode roll back on additional nodes * Use console mode roll back on additional nodes Start with the step \"Stopping IP traffic for roll back for additional nodes\" then choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps on additional nodes. Note: Do not attempt to roll back additional nodes until after completing the roll back of the primary node. The roll back for the primary must be performed and completed before the roll back of any additional nodes. Additional node roll backs can be performed sequentially or in parallel. Roll back the additional nodes in accordance with the following instructions. Stopping IP traffic for roll back for additional nodes (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing to the cluster members, reconfigure the IP sprayers to stop routing new requests to the Portal cluster member(s) on this node. * If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node: If you are using the Web server plug-in for load balancing, perform the following steps to stop traffic to the node: 1. In the Deployment Manager administrative console, click Servers > Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you are downgrading and change the value in the Configured weight column to zero. Record the previous value to restore the setting when the downgrade is complete. 3. Click Update to apply the change. Note that the web server plug-in will check periodically for configuration updates based on the value of Refresh Configuration Interval property for the Web server plug-in (default value is 60 seconds). You can check this value on the Deployment Manager administrative console by selecting Servers > Server Types > Web Servers > web_server_name > Plug-in Properties. Once automatic plug-in generation and propagation is disabled, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Use a Graphical User Interface to roll back on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Select \"Roll Back\" on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. After roll back completes, proceed with the \"Post Rollback Steps on additional nodes.\" Use a command line to roll back on additional nodes (available on Windows, Linux, and Unix operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are rolling back the cumulative fix on HCL Portal Express, skip to Step 5. Otherwise, run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.hcl.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl rollback com.hcl.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory <portal_server_root> After roll back completes, proceed with the \"Post Rollback Steps on additional nodes.\" Use silent mode to roll back on additional nodes (available on Windows, Linux, Unix, and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After roll back completes, proceed with the \"Post Rollback Steps on additional nodes.\" Use Console Mode to roll back on additional nodes (available on Windows, Linux, Unix and IBM i operating systems) 1. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Select Roll back and follow the prompts to roll back HCL Portal. After installation completes, proceed with the \"Post Rollback Steps.\"","title":"Steps to roll back additional nodes"},{"location":"overview/ccf_95_cluster/#post-rollback-steps-on-additional-nodes","text":"Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation. Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Note: If a remote search server is used within this environment, it should be started before running the following commands. Ensure the nodeagent and HCL Portal and HCL Web Content Manager servers are stopped on the profile you intend to rollback. The Deployment Manager must be started. Run the following command from within the path of the profile to configure. Do note that if you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true Unix/Linux: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important: If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Portal and HCL Web Content Manager before re-running. 3. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. 4. Verify that your system is operational by entering the server's URL in a browser and logging in to browse the content. Restoring IP traffic after roll back for additional nodes (Required only if following the 24x7 single cluster roll back.) * If you are using IP sprayers for load balancing, reconfigure the IP sprayers to restore traffic to the downgraded node. * If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node. If you are using the Web server plug-in for load balancing, perform the following steps to restore traffic to the downgraded node: 1. In the Deployment Manager administrative console, click Servers Clusters > WebSphere application server clusters > cluster_name > Cluster members to obtain a view of the collection of cluster members. 2. Locate the cluster member you downgraded and change the value in the Configured weight column back to the original value. 3. Click Update to apply the change. If you are not using automatic generation and propagation for the Web server plug-in, manually generate and/or propagate the plugin-cfg.xml file to the Web servers.","title":"Post Rollback Steps on additional nodes"},{"location":"overview/ccf_95_cluster/#finalizing-the-roll-back","text":"Re-enable automatic synchronization on all nodes in the cluster if you disabled it earlier. In the administrative console for the deployment manager, select System administration > Node agents in the navigation tree. Click nodeagent for the required node. Click File Synchronization Service. Check the Automatic Synchronization check box to enable the automatic synchronization feature and check the Enable service at server startup check box to enable the synchronization service at server startup on the File Synchronization Service page and then click OK. Repeat these steps for all remaining nodes. Click Save to save the configuration changes to the master repository. Select System administration > Nodes in the navigation tree. Select all nodes that are not synchronized, and click on Synchronize. Select System administration > Node agents in the navigation tree. Select all node agents where automatic synchronization has been re-enabled and click Restart. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using HCL Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to rolling back the cumulative fix. If you have set up a remote search server or document conversion server for use with HCL Portal Version 8.5, then whenever you roll back a cumulative fix to the portal server, you should also roll back the corresponding cumulative fix to the remote server. Refer to the HCL Portal Version 8.5 combined cumulative fix instructions: remote search for the details of rolling back a cumulative fix to the remote server. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. This task needs to be run for primary and additional nodes. Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * for MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * for SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled For rollback to CF03 or earlier level only: If the Brightcove integration was enabled perform the following steps: Uninstall the old Brightcove plugins. Install the new Brightcove plugins by following the install steps in the Configuring topic section to use Brightcove. For rollback to CF03 or earlier level only: If using Rich Media Edition, perform the following steps: Uninstall the Rich Media Edition plugins Restart Portal Server. Reinstall the Rich Media Edition plugins. If you brought down the entire cluster to perform the rollback (not maintaining 24 x 7 on a single cluster), and the automatic plug-in generation and propagation are disabled on your web server Plug-in properties, you will need to manually generate and/or propagate the plugin-cfg.xml file to the Web servers. Clear the browser cache. On this page* Cluster upgrade planning * Before you begin * Best Practices * Syndicator/Subscriber Information * Search Crawler Information * Backing up the Installation Manager data * Known Issues * Review supported hardware/software requirements * Check fixes installed on your system * Special instructions pertaining to HCL Digital Experience Patterns * Ensure wkplc properties files are correct * Unix, Linux, Windows, and IBM i: * Multiple profile considerations * Non-root considerations * Anti-virus and file indexing software considerations (Windows only) * Special note for customers using WAS 8.5.5.14 * Download the cumulative fix * Disabling automatic synchronization and stopping the node agents * Upgrading the primary node * Additional configuration steps * Upgrading additional nodes * Additional configuration steps on additional nodes * Finalizing the upgrade * Before you begin roll back * Disabling automatic synchronization and stopping the node agents for roll back * Steps to roll back the Primary node * Post Rollback Steps * Steps to roll back additional nodes * Post Rollback Steps on additional nodes * Finalizing the roll back Generated by XML WebHelp","title":"Finalizing the roll back"},{"location":"overview/ccf_95_farm/","text":"Cumulative fix instructions: Farm | HCL Digital Experience 9.5 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Cumulative fix instructions: Farm | HCL Digital Experience 9.5 Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. About HCL Portal 8.5 and 9.0 Combined Cumulative Fixes This cumulative fix can only be applied to an existing functional version of HCL Portal 8.5 and 9.0 with a previous cumulative fix applied. As of CF14, this cumulative fix can also be applied to either an 8.5 environment above, or on top of a 9.0 level as well. Overview Applying the cumulative fix is a multi-step process. You must first update the product files using IBM Installation Manager, and then you must use the Portal ConfigEngine tool to apply the changes to each profile in your system. The update is not complete until you have performed both steps! Likewise, to roll back a fix, you must first use IBM Installation Manager to restore the older product files and then use ConfigEngine to apply the rollback to each profile. The procedures below describe these steps in detail. 9.0 Note: After CF13 or later is fully installed and Portal runtime is operational, HCL Portal 9.0 can be installed. Visit HCL Digital Experience 9.0 Product Documentation for product base documentation on concepts, instructions, procedures, tips to configure, maintain, troubleshoot and use HCL Digital Experience. 9.5 Note: After CF17 or later is fully installed and Portal runtime is operational, HCL Portal 9.5 can be installed. Visit HCL Digital Experience 9.5 Product Documentation for instructions, procedures, tips to configure, maintain, troubleshoot and use the latest version of HCL Digital Experience. Before you begin Note: Unless you are migrating from a previous release or plan to add this node to an existing cluster, you must create your Portal profile before applying the cumulative fix. If you did not do this during the initial installation, you can use the Configuration Wizard to do so now. Portal 8.5 CF12 or later introduces support for JDK8. However, if you plan to use JDK 8 with your profile, you must first create the profile using JDK 7 and then upgrade to JDK 8 after applying the cumulative fix. Note: In Portal 8.5 CF12 or later, the blacklist settings have become more restrictive. For inquiries, go to HCL Software Support page. Space Requirements Ensure that enough disk space is available in the following directories: * For all platforms: 2.0 GB in the download directory to download the cumulative fix, 1.5 GB in Portal_Install_Root , 1 GB temporary disk space in (wp_profile_root) , and 1.66 GB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update. * For Solaris: It is recommended that you allocate swap space equal to at least twice your physical RAM to avoid memory errors during the configuration of this cumulative fix. Best Practices Go to the HCL Software Support page for Portal Upgrade Best Practices. Syndicator/Subscriber Information It is recommended that servers utilizing syndication have associated syndicators and subscribers disabled prior to installing the cumulative fixpack. Otherwise syndication updates that run during install may clash with install modifications and can cause the CF update to fail. Syndicators and subscribers can be disabled by editing them in the syndication administration portlet. Go to the Syndicators and Subscribers topic pages in the HCL Digital Experience Version 8.5 product documentation for more information. Syndication should then be re-enabled after the update is complete. Alternatively, the following ConfigEngine tasks have also been integrated into CF09 or later to globally disable and enable syndication (These tasks can be used in place of the manual updates linked above: * /ConfigEngine/ConfigEngine.sh|.bat disable-syndication-auto-scheduler * /ConfigEngine/ConfigEngine.sh|.bat enable-syndication-auto-scheduler Search Crawler Information It is recommended that any search crawlers are disabled before applying the CF. If a CF is applied at the same time the crawler is running, this may corrupt the search collection. The search crawler should be restarted after the CF update is complete. Backing up the Installation Manager data Backup the contents of the IBM Installation Manager data directory on the server you are upgrading in the event you lose connection during the upgrade, as this could corrupt the data directory. The default locations of these directories are: * Windows: C:\\ProgramData\\IBM\\InstallationManager * Linux/UNIX root users: /var/ibm/InstallationManager * Linux/UNIX non-root users: /home/(user id)/var/ibm/InstallationManager * IBM i: Installation location: /QIBM/ProdData/InstallationManager * IBM i: Agent data location: /QIBM/UserData/InstallationManager Known Issues Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 9.5 CF releases. Review supported hardware/software requirements For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the Supported hardware and software requirements article for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server.Note: Ensure that the optional WebSphere Application Server feature \"EJBDeploy tool for pre-EJB 3.0 modules\" is installed. Check fixes installed on your system All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information. Ensure wkplc properties files are correct The HCL Portal upgrade will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. Edit the wp_profile root>/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your WAS instance> WasSoapPort=<the soap port of your WAS instance> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Edit the wp_profile root>/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Edit the wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Note: In a Farm Portal environment, the WasRemoteHostName should be the local hostname and the WasSoapPort should be the soap port of the HCL Portal server. Note: If your server is configured with database runtime users, for example, feedback.DbRuntimeUser=<your feedback database runtime user> , ensure to set their password values correctly as well, for example, in feedback.DbRuntimePassword=<your feedback database runtime user password> . Unix, Linux, Windows, and IBM i: The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false Multiple profile considerations Verify that all of your profiles are at the same level before starting the upgrade or rollback. All profiles that share the same Portal installation directory (multiple profile option) must be manually upgraded after the IBM Installation Manager update completes. See the Additional configuration steps for details. Non-root considerations In Unix/Linux environments, you must install the cumulative fix as the same user which you used to install HCL Portal originally. This could be either root or a non-root user. If you need to use a non-root user, ensure the following conditions are met: * If you are installing as a non-root user on Unix or Linux, the umask setting for your login session must be set to 0022 or better. ( umask is a setting that controls what file permissions are set for newly created files and directories. A value of 0022 correspond to permission settings of (rwxr-xr-x) .) If the umask is not set appropriately by default, you must set it when you start Installation Manager or when you open a command-line utility to run Installation Manager commands. * The non-root user has a \"ulimit - n\" setting of at least 18192. This must be a number and not \"unlimited\" . * The non-root user owns the AppServer, PortalServer, ConfigEngine, and Portal profile directories and has read/write access to all files in these directories. Permission settings of 755 (rwxr-xr-x) are sufficient. * Do not use \"sudo\" or \"su\" to install the fix pack. Either use root explicitly or use a non-root user that meets the above conditions. To open a command-line utility to run Installation Manager commands: 1. Open a command line window. 2. Run this command to check your current umask setting: umask If necessary, run this command to set the umask : umask 0022 Anti-virus and file indexing software considerations (Windows only) As part of the CF upgrade process, new files will be created in the WebSphere installation directory, as well as the user's temp directory. Anti-viruses and file indexing software (like Google Desktop) have been known to lock newly created files as they are being scanned, which can interfere with the upgrade process. We recommend to exclude the WebSphere installation directory and the user's temp directory from being scanned by this software during the upgrade. Or you can stop / disable these tools for the duration of the upgrade, and re-enable them after the upgrade completes. Special note for customers using WAS 8.5.5.14 Support for WebSphere Application Server v8.5.5.14 will be added in Portal Cumulative Fix 16. If you need to apply Portal Cumulative Fix 15 or earlier to a WAS v8.5.5.14 installation, you will need to perform an additional manual step during the upgrade. After running Installation Manager to install the new Portal code but before running the applyCF.sh or applyCF.bat command to update the Portal profile, perform these steps: 1. Open a command Window and switch to the ConfigEngine home directory. By default this is: * Unix/Linux: /opt/IBM/WebSphere/ConfigEngine * Windows: C:\\IBM\\WebSphere\\ConfigEngine * IBM i: /QIBM/ProdData/WebSphere/ConfigEngine 2. Make a backup copy of the ConfigEngine script. This file is named ConfigEngine.bat for Windows and ConfigEngine.sh for all other platforms. 3. Make sure your user has write permissions for the script file and open it in a text editor. 4. Look for the text EJBDEPLOY_JAVA_HOME in the script. If you do not find it, no further action is necessary and you can continue with the installation. If you do find it, delete every line that contains the text EJBDEPLOY_JAVA_HOME anywhere in the line. (There should be 3 such lines in the .sh script and 2 lines in the .bat script.) 5. Save the file. You may now continue with the installation of the Portal CF. Download the cumulative fix If you are installing the cumulative fix using a live repository, then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Download the latest zip file that corresponds to the installation on your system, as shown in this table. You can also find more information about the latest fixes on the HCL Software page . | Installed Offering | HCL Portal server | | Cumulative fix to download | * 8.5-WP-WCM-Combined-CFPInnnnn-Server-CFnn.zip * 8.5-9.0-WP-WCM-Combined-CFPInnnnn-Server-CFnn.zip CF14 or later | 2. Create a directory and extract the zip file(s) into this directory. Inside the zip file is a readme file, sample response files (Server only), and the actual cumulative fix file itself. The cumulative fix files are named as follows, where in represents the CF number associated with this cumulative fix: * WP8500CFnn_Server.zip (HCL Portal Server) 3. Create a sub-directory and extract the appropriate WP8500CFnn_ zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update. Steps for installing the cumulative fix There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use console mode installation Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the additional configuration steps. Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal V8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Add Repository. Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps. Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems for CFs prior to CF17) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal V8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click Apply. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps. Use a command line (available on Windows, Linux, and Unix operating systems) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools Run the following command to launch the installation program of IBM Installation Manager: NOTE: The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense Windows: imcl.exe install com.ibm.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense After installation completes, proceed with the Additional configuration steps. Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Go to HCL Software Support page for detailed instructions for recording an IBM Installation Manager response file. Note: The feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is: features='ce.install,portal.binary,portal.profile' If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or creating multiple profiles, or you originally installed Portal 8.5 as a binary install), then you should remove the 'portal.profile' feature from this list: features='ce.install,portal.binary' Run the following command to install in silent mode: imcl -acceptLicense -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress After installation completes, proceed with the Additional configuration steps. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode: Unix/Linux: ./imcl -c * Windows: imcl.exe -c * IBM i: ./imcl -c 6. Complete the following steps to add the repositories: 1. Enter P to go to the Preferences menu. 2. Enter 1 to go to the Repositories menu. 3. Enter D to add repositories. 4. Type the path for your HCL Portal Version 8.5. CF repository file. 5. Enter A to apply your repositories and return to the Preferences menu. 6. Enter R to return to the Main menu. 7. Select Update and follow the prompts to update HCL Portal. 8. After installation completes, proceed with the Additional configuration steps. Additional configuration steps If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal), no additional configuration steps are necessary and you can continue with the Post installation steps. If you are in the process of a migration, you will need to follow these additional configuration steps after running upgrade-profile for your migrated environment.Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program.* Linux, Unix, Windows or IBM i - Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All profiles that share the same Portal installation directory (multiple profile option) must be at the same level for future upgrades to be applied. Note: If a remote search server is used within this environment, it should be started before running the following commands. Also, if a WAS update has occurred prior to running the CF update, it is recommended to run the following task: (profile_root)/bin/osgiCfgInit.sh|bat Note: To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Ensure the HCL Portal server is stopped on the profile you intend to upgrade. On the Farm Master Server Execute the following command from within the path of the profile to configure: Note: If you are installing the CF on an empty portal, see Special Considerations below before running applyCF:* Unix/Linux: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Windows: (profile_root)\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=(password -DWasPassword=(password) IBM i: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. * If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux: <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to re-import that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml Farm Support Server setup On the Farm Support Server execute the following command from within the path of the profile to configure. Note: If the Farm Support Server only has read-only access to the Portal Binaries use the -DSharedBinaries=true flag with the applyCF command.Note: If you are installing the CF on an empty portal, see the Special Considerations below before running applyCF. * Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. * If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux: <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM\u00ae i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to re-import that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml Post installation steps If you are running an external web server such as IBM HTTP Server and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, then perform the following steps: * Regenerate the web server plug-in. Copy the plugin-cfg.xml file to the plugin directory. Restart the web server. If there is a custom theme that contains a static content WAR and the com.ibm.portal.resource.blacklist and com.ibm.portal.resource.whitelist context parameters have not yet been added to the web.xml file, go to HCL Software Support page to fix security vulnerability. The changes associated with this can cause custom themes to produce a lot of warning messages in the logs resulting in a significant performance penalty. The custom theme must be redeployed before the changes will take effect. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to installing the cumulative fix. Go to HCL Software Support page to see if the Configuration Changes and Options introduced in the HCL Web Content Manager 8.5 Combined Cumulative Fixes apply to your environment. If you modified the permissions on the PortalServer home directory tree to install the cumulative fix as non-root, restore the original permissions. If using Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. * Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * for MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * for SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled If you have set up a remote search server or document conversion server for use with HCL Portal 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. Refer to the HCL Portal 8.5 Combined cumulative fix instructions: remote search for the details of applying a cumulative fix to the remote server. Clear the browser cache. Go to HCL Software Support page for Recommended Updates for HCL Portal and HCL Web Content Manager Version 8.5 to review and apply any recommended Fixes. Prior to CF07, it was recommended to set the DB2 database configuration parameter \"dft_queryopt\" to a value of 2 as this was tested to provide the best balance of query optimization time and query execution time for the SQL produced by the JCR. For CF07 or later, this recommendation has been changed to use a value of 5 in conjunction with the testing and changes made to the JCR and JCR schema. This setting is NOT updated automatically within your JCR Database Domain configuration as part of the CF07 (or later) upgrade. This can be done manually by customers by executing the following SQL against the JCR Domain Database: db2 update db cfg for JCRDBNAME using DFT_QUERYOPT 5 OR It can also be done by running the following Config Engine Task: configure-jcr-db2-dft-queryopt Steps for rolling back the cumulative fix Note: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. Note: Versions of Portal prior to CF12 do not support JDK 8. Therefore, if JDK 8 has been enabled in CF12 or later, the managesdk command must be used to switch back to JDK 7 or 7.1 before performing a rollback to CF11 or earlier. Limitations 1. Changing the server context root after upgrading is an unsupported rollback path. To roll back after changing the context root, you must first change the server context root to the values of the previous version. 2. When rolling back a CF install, if you have configured an empty context root you cannot roll back to a CF level that does not support the empty context root capability. For instance, if you have applied CF08 and have configured an empty context root you cannot rollback to CF07. If you have applied CF09 and have configured an empty context root you can roll back to CF08 but you would not be able to roll back if your previous CF level was CF07 or prior. 3. Configuring HCL Portal from a stand-alone environment to a clustered environment after upgrading is an unsupported rollback path. Before you begin rollback 1. The HCL Portal rollback scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. 2. Edit the /ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your WAS instance> WasSoapPort=<the soap port of your WAS instance> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Note: In a Farm Portal environment, the WasRemoteHostName should be the local hostname and the WasSoapPort should be the soap port of the HCL Portal server. 3. Edit the /ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the /ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Unix, Linux, Windows, and IBM i The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line roll back * Use silent mode roll back * Use console mode roll back Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Use a Graphical User Interface to roll back (available on Windows, Linux, and Unix operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all 3. Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. 4. Select \"Roll Back\" on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. 5. After rollback completes, proceed with the Post Rollback Steps. Use a command line to roll back (available on Windows, Linux, and Unix operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all 3. Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: * Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools 4. Run the following command to launch the installation program of IBM Installation Manager. The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. * For Unix/Linux: ``` ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> ``` * Windows: ``` imcl.exe rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> ``` After roll back completes, proceed with the Post Rollback Steps. Use silent mode to roll back (available on Windows, Linux, Unix, and IBM i operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all * IBM i: serverStatus -all 3. For IBM i only : Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After roll back completes, proceed with the Post Rollback Steps. Use Console Mode to roll back (available on Windows, Linux, Unix and IBM i operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all * IBM i: serverStatus -all 3. For IBM i only : Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c * IBM i: ./imcl -c 6. Select Roll back and follow the prompts to roll back HCL Portal. 7. After installation completes, proceed with the Post Rollback Steps. Post Rollback Steps Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation.Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program.Note: If a remote search server is used within this environment, it should be started before running the following commands. 1. On the Farm Master Server execute the following command from within the path of the profile to configure. Note: If you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true * Unix/Linux: ``` (profile_root/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * Windows: ``` (profile_root)\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * IBM i: ``` (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ```**Important**: If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Digital Experience before re-running. 2. On the Farm Support Server execute the following command from within the path of the profile to configure. Note: If you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true Note: If the Farm Support Server only has read-only access to the Portal Binaries use the -DSharedBinaries=true flag with the rollbackCF command. * Unix/Linux: (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) * Windows: (profile_root)\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) * IBM i: (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Important : If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Digital Experience before re-running. 3. 3. If you are running an external web server, and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, then perform the following steps: 1. Regenerate the web server plugin. 2. Copy the plugin-cfg.xml file to the plugin directory. 3. Restart the web server. 4. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. 5. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using HCL Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to rolling back the cumulative fix. 6. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. * Unix/Linux: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * Windows: (profile_root)\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * IBM i: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * for MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * for SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled 7. For rollback to CF03 or earlier level only: If the Brightcove integration was enabled, remove the old Brightcove plugins, then configure HCL Portal to add the new Brightcove plugins. 8. For rollback to CF03 or earlier level only: If using Rich Media Edition, remove the Rich Media Edition plugin, restart the Portal Server, then configure HCL Portal to add the Rich Media Edition plugins. 9. If you have set up a remote search server or document conversion server for use with HCL Portal 8.5, then whenever you roll back a cumulative fix to the portal server, you should also roll back the corresponding cumulative fix to the remote server. 10. Clear the browser cache. On this page* About HCL Portal 8.5 and 9.0 Combined Cumulative Fixes * Overview * Before you begin * Space Requirements * Best Practices * Syndicator/Subscriber Information * Search Crawler Information * Backing up the Installation Manager data * Known Issues * Check fixes installed on your system * Ensure wkplc properties files are correct * Unix, Linux, Windows, and IBM i: * Multiple profile considerations * Non-root considerations * Anti-virus and file indexing software considerations (Windows only) * Special note for customers using WAS 8.5.5.14 * Download the cumulative fix * Steps for installing the cumulative fix * Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) * Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems for CFs prior to CF17) * Use a command line (available on Windows, Linux, and Unix operating systems) * Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) * Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) * Additional configuration steps * On the Farm Master Server * Special Consideration for empty portals * Farm Support Server setup * Special Consideration for empty portals * Post installation steps * Steps for rolling back the cumulative fix * Post Rollback Steps Generated by XML WebHelp","title":"Ccf 95 farm"},{"location":"overview/ccf_95_farm/#cumulative-fix-instructions-farm-hcl-digital-experience-95","text":"Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix.","title":"Cumulative fix instructions: Farm | HCL Digital Experience 9.5"},{"location":"overview/ccf_95_farm/#about-hcl-portal-85-and-90-combined-cumulative-fixes","text":"This cumulative fix can only be applied to an existing functional version of HCL Portal 8.5 and 9.0 with a previous cumulative fix applied. As of CF14, this cumulative fix can also be applied to either an 8.5 environment above, or on top of a 9.0 level as well.","title":"About HCL Portal 8.5 and 9.0 Combined Cumulative Fixes"},{"location":"overview/ccf_95_farm/#overview","text":"Applying the cumulative fix is a multi-step process. You must first update the product files using IBM Installation Manager, and then you must use the Portal ConfigEngine tool to apply the changes to each profile in your system. The update is not complete until you have performed both steps! Likewise, to roll back a fix, you must first use IBM Installation Manager to restore the older product files and then use ConfigEngine to apply the rollback to each profile. The procedures below describe these steps in detail. 9.0 Note: After CF13 or later is fully installed and Portal runtime is operational, HCL Portal 9.0 can be installed. Visit HCL Digital Experience 9.0 Product Documentation for product base documentation on concepts, instructions, procedures, tips to configure, maintain, troubleshoot and use HCL Digital Experience. 9.5 Note: After CF17 or later is fully installed and Portal runtime is operational, HCL Portal 9.5 can be installed. Visit HCL Digital Experience 9.5 Product Documentation for instructions, procedures, tips to configure, maintain, troubleshoot and use the latest version of HCL Digital Experience.","title":"Overview"},{"location":"overview/ccf_95_farm/#before-you-begin","text":"Note: Unless you are migrating from a previous release or plan to add this node to an existing cluster, you must create your Portal profile before applying the cumulative fix. If you did not do this during the initial installation, you can use the Configuration Wizard to do so now. Portal 8.5 CF12 or later introduces support for JDK8. However, if you plan to use JDK 8 with your profile, you must first create the profile using JDK 7 and then upgrade to JDK 8 after applying the cumulative fix. Note: In Portal 8.5 CF12 or later, the blacklist settings have become more restrictive. For inquiries, go to HCL Software Support page.","title":"Before you begin"},{"location":"overview/ccf_95_farm/#space-requirements","text":"Ensure that enough disk space is available in the following directories: * For all platforms: 2.0 GB in the download directory to download the cumulative fix, 1.5 GB in Portal_Install_Root , 1 GB temporary disk space in (wp_profile_root) , and 1.66 GB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update. * For Solaris: It is recommended that you allocate swap space equal to at least twice your physical RAM to avoid memory errors during the configuration of this cumulative fix.","title":"Space Requirements"},{"location":"overview/ccf_95_farm/#best-practices","text":"Go to the HCL Software Support page for Portal Upgrade Best Practices.","title":"Best Practices"},{"location":"overview/ccf_95_farm/#syndicatorsubscriber-information","text":"It is recommended that servers utilizing syndication have associated syndicators and subscribers disabled prior to installing the cumulative fixpack. Otherwise syndication updates that run during install may clash with install modifications and can cause the CF update to fail. Syndicators and subscribers can be disabled by editing them in the syndication administration portlet. Go to the Syndicators and Subscribers topic pages in the HCL Digital Experience Version 8.5 product documentation for more information. Syndication should then be re-enabled after the update is complete. Alternatively, the following ConfigEngine tasks have also been integrated into CF09 or later to globally disable and enable syndication (These tasks can be used in place of the manual updates linked above: * /ConfigEngine/ConfigEngine.sh|.bat disable-syndication-auto-scheduler * /ConfigEngine/ConfigEngine.sh|.bat enable-syndication-auto-scheduler","title":"Syndicator/Subscriber Information"},{"location":"overview/ccf_95_farm/#search-crawler-information","text":"It is recommended that any search crawlers are disabled before applying the CF. If a CF is applied at the same time the crawler is running, this may corrupt the search collection. The search crawler should be restarted after the CF update is complete.","title":"Search Crawler Information"},{"location":"overview/ccf_95_farm/#backing-up-the-installation-manager-data","text":"Backup the contents of the IBM Installation Manager data directory on the server you are upgrading in the event you lose connection during the upgrade, as this could corrupt the data directory. The default locations of these directories are: * Windows: C:\\ProgramData\\IBM\\InstallationManager * Linux/UNIX root users: /var/ibm/InstallationManager * Linux/UNIX non-root users: /home/(user id)/var/ibm/InstallationManager * IBM i: Installation location: /QIBM/ProdData/InstallationManager * IBM i: Agent data location: /QIBM/UserData/InstallationManager","title":"Backing up the Installation Manager data"},{"location":"overview/ccf_95_farm/#known-issues","text":"Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 9.5 CF releases.","title":"Known Issues"},{"location":"overview/ccf_95_farm/#review-supported-hardwaresoftware-requirements","text":"For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the Supported hardware and software requirements article for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server.Note: Ensure that the optional WebSphere Application Server feature \"EJBDeploy tool for pre-EJB 3.0 modules\" is installed.","title":"Review supported hardware/software requirements"},{"location":"overview/ccf_95_farm/#check-fixes-installed-on-your-system","text":"All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information.","title":"Check fixes installed on your system"},{"location":"overview/ccf_95_farm/#ensure-wkplc-properties-files-are-correct","text":"The HCL Portal upgrade will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. Edit the wp_profile root>/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your WAS instance> WasSoapPort=<the soap port of your WAS instance> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Edit the wp_profile root>/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Edit the wp_profile root>/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Note: In a Farm Portal environment, the WasRemoteHostName should be the local hostname and the WasSoapPort should be the soap port of the HCL Portal server. Note: If your server is configured with database runtime users, for example, feedback.DbRuntimeUser=<your feedback database runtime user> , ensure to set their password values correctly as well, for example, in feedback.DbRuntimePassword=<your feedback database runtime user password> .","title":"Ensure wkplc properties files are correct"},{"location":"overview/ccf_95_farm/#unix-linux-windows-and-ibm-i","text":"The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false","title":"Unix, Linux, Windows, and IBM i:"},{"location":"overview/ccf_95_farm/#multiple-profile-considerations","text":"Verify that all of your profiles are at the same level before starting the upgrade or rollback. All profiles that share the same Portal installation directory (multiple profile option) must be manually upgraded after the IBM Installation Manager update completes. See the Additional configuration steps for details.","title":"Multiple profile considerations"},{"location":"overview/ccf_95_farm/#non-root-considerations","text":"In Unix/Linux environments, you must install the cumulative fix as the same user which you used to install HCL Portal originally. This could be either root or a non-root user. If you need to use a non-root user, ensure the following conditions are met: * If you are installing as a non-root user on Unix or Linux, the umask setting for your login session must be set to 0022 or better. ( umask is a setting that controls what file permissions are set for newly created files and directories. A value of 0022 correspond to permission settings of (rwxr-xr-x) .) If the umask is not set appropriately by default, you must set it when you start Installation Manager or when you open a command-line utility to run Installation Manager commands. * The non-root user has a \"ulimit - n\" setting of at least 18192. This must be a number and not \"unlimited\" . * The non-root user owns the AppServer, PortalServer, ConfigEngine, and Portal profile directories and has read/write access to all files in these directories. Permission settings of 755 (rwxr-xr-x) are sufficient. * Do not use \"sudo\" or \"su\" to install the fix pack. Either use root explicitly or use a non-root user that meets the above conditions. To open a command-line utility to run Installation Manager commands: 1. Open a command line window. 2. Run this command to check your current umask setting: umask If necessary, run this command to set the umask : umask 0022","title":"Non-root considerations"},{"location":"overview/ccf_95_farm/#anti-virus-and-file-indexing-software-considerations-windows-only","text":"As part of the CF upgrade process, new files will be created in the WebSphere installation directory, as well as the user's temp directory. Anti-viruses and file indexing software (like Google Desktop) have been known to lock newly created files as they are being scanned, which can interfere with the upgrade process. We recommend to exclude the WebSphere installation directory and the user's temp directory from being scanned by this software during the upgrade. Or you can stop / disable these tools for the duration of the upgrade, and re-enable them after the upgrade completes.","title":"Anti-virus and file indexing software considerations (Windows only)"},{"location":"overview/ccf_95_farm/#special-note-for-customers-using-was-85514","text":"Support for WebSphere Application Server v8.5.5.14 will be added in Portal Cumulative Fix 16. If you need to apply Portal Cumulative Fix 15 or earlier to a WAS v8.5.5.14 installation, you will need to perform an additional manual step during the upgrade. After running Installation Manager to install the new Portal code but before running the applyCF.sh or applyCF.bat command to update the Portal profile, perform these steps: 1. Open a command Window and switch to the ConfigEngine home directory. By default this is: * Unix/Linux: /opt/IBM/WebSphere/ConfigEngine * Windows: C:\\IBM\\WebSphere\\ConfigEngine * IBM i: /QIBM/ProdData/WebSphere/ConfigEngine 2. Make a backup copy of the ConfigEngine script. This file is named ConfigEngine.bat for Windows and ConfigEngine.sh for all other platforms. 3. Make sure your user has write permissions for the script file and open it in a text editor. 4. Look for the text EJBDEPLOY_JAVA_HOME in the script. If you do not find it, no further action is necessary and you can continue with the installation. If you do find it, delete every line that contains the text EJBDEPLOY_JAVA_HOME anywhere in the line. (There should be 3 such lines in the .sh script and 2 lines in the .bat script.) 5. Save the file. You may now continue with the installation of the Portal CF.","title":"Special note for customers using WAS 8.5.5.14"},{"location":"overview/ccf_95_farm/#download-the-cumulative-fix","text":"If you are installing the cumulative fix using a live repository, then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Download the latest zip file that corresponds to the installation on your system, as shown in this table. You can also find more information about the latest fixes on the HCL Software page . | Installed Offering | HCL Portal server | | Cumulative fix to download | * 8.5-WP-WCM-Combined-CFPInnnnn-Server-CFnn.zip * 8.5-9.0-WP-WCM-Combined-CFPInnnnn-Server-CFnn.zip CF14 or later | 2. Create a directory and extract the zip file(s) into this directory. Inside the zip file is a readme file, sample response files (Server only), and the actual cumulative fix file itself. The cumulative fix files are named as follows, where in represents the CF number associated with this cumulative fix: * WP8500CFnn_Server.zip (HCL Portal Server) 3. Create a sub-directory and extract the appropriate WP8500CFnn_ zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update.","title":"Download the cumulative fix"},{"location":"overview/ccf_95_farm/#steps-for-installing-the-cumulative-fix","text":"There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use console mode installation Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the additional configuration steps.","title":"Steps for installing the cumulative fix"},{"location":"overview/ccf_95_farm/#use-a-graphical-user-interface-available-on-windows-linux-and-unix-operating-systems","text":"If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal V8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Add Repository. Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps.","title":"Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems)"},{"location":"overview/ccf_95_farm/#use-a-live-repository-via-the-graphical-user-interface","text":"(available on Windows, Linux, and Unix operating systems for CFs prior to CF17) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal V8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click Apply. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps.","title":"Use a live repository via the Graphical User Interface"},{"location":"overview/ccf_95_farm/#use-a-command-line-available-on-windows-linux-and-unix-operating-systems","text":"If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools Run the following command to launch the installation program of IBM Installation Manager: NOTE: The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense Windows: imcl.exe install com.ibm.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense After installation completes, proceed with the Additional configuration steps.","title":"Use a command line (available on Windows, Linux, and Unix operating systems)"},{"location":"overview/ccf_95_farm/#use-silent","text":"mode installation (available on Windows, Linux, Unix, and IBM i operating systems) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Go to HCL Software Support page for detailed instructions for recording an IBM Installation Manager response file. Note: The feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is: features='ce.install,portal.binary,portal.profile' If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or creating multiple profiles, or you originally installed Portal 8.5 as a binary install), then you should remove the 'portal.profile' feature from this list: features='ce.install,portal.binary' Run the following command to install in silent mode: imcl -acceptLicense -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress After installation completes, proceed with the Additional configuration steps.","title":"Use silent"},{"location":"overview/ccf_95_farm/#use-console","text":"Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) If you are running an external web server such as IBM HTTP server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode: Unix/Linux: ./imcl -c * Windows: imcl.exe -c * IBM i: ./imcl -c 6. Complete the following steps to add the repositories: 1. Enter P to go to the Preferences menu. 2. Enter 1 to go to the Repositories menu. 3. Enter D to add repositories. 4. Type the path for your HCL Portal Version 8.5. CF repository file. 5. Enter A to apply your repositories and return to the Preferences menu. 6. Enter R to return to the Main menu. 7. Select Update and follow the prompts to update HCL Portal. 8. After installation completes, proceed with the Additional configuration steps.","title":"Use Console"},{"location":"overview/ccf_95_farm/#additional-configuration-steps","text":"If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal), no additional configuration steps are necessary and you can continue with the Post installation steps. If you are in the process of a migration, you will need to follow these additional configuration steps after running upgrade-profile for your migrated environment.Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program.* Linux, Unix, Windows or IBM i - Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All profiles that share the same Portal installation directory (multiple profile option) must be at the same level for future upgrades to be applied. Note: If a remote search server is used within this environment, it should be started before running the following commands. Also, if a WAS update has occurred prior to running the CF update, it is recommended to run the following task: (profile_root)/bin/osgiCfgInit.sh|bat Note: To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Ensure the HCL Portal server is stopped on the profile you intend to upgrade.","title":"Additional configuration steps"},{"location":"overview/ccf_95_farm/#on-the-farm-master-server","text":"Execute the following command from within the path of the profile to configure: Note: If you are installing the CF on an empty portal, see Special Considerations below before running applyCF:* Unix/Linux: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Windows: (profile_root)\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=(password -DWasPassword=(password) IBM i: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running.","title":"On the Farm Master Server"},{"location":"overview/ccf_95_farm/#special-consideration-for-empty-portals","text":"If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. * If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux: <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to re-import that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml","title":"Special Consideration for empty portals"},{"location":"overview/ccf_95_farm/#farm-support-server-setup","text":"On the Farm Support Server execute the following command from within the path of the profile to configure. Note: If the Farm Support Server only has read-only access to the Portal Binaries use the -DSharedBinaries=true flag with the applyCF command.Note: If you are installing the CF on an empty portal, see the Special Considerations below before running applyCF. * Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DPortalAdminPwd=<password> -DWasPassword=<password> Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running.","title":"Farm Support Server setup"},{"location":"overview/ccf_95_farm/#special-consideration-for-empty-portals_1","text":"If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. * If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://<myhost>:<port>/wps/config -in <Portal home>/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the \"isEmptyPortal\" property when performing this step: Unix/Linux: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=<password> -DWasPassword=<password> Important : If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing. Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux: <profile_root>/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> IBM\u00ae i: <profile_root>/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=<password> -DPortalAdminPwd=<password> If you exported custom content in step #1 above, you can now use XMLAccess to re-import that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user <Portal_admin_user> -password <Portal_admin_password> -url http://<myhost>:<port>/wps/config -in result.xml -out importResults.xml","title":"Special Consideration for empty portals"},{"location":"overview/ccf_95_farm/#post-installation-steps","text":"If you are running an external web server such as IBM HTTP Server and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, then perform the following steps: * Regenerate the web server plug-in. Copy the plugin-cfg.xml file to the plugin directory. Restart the web server. If there is a custom theme that contains a static content WAR and the com.ibm.portal.resource.blacklist and com.ibm.portal.resource.whitelist context parameters have not yet been added to the web.xml file, go to HCL Software Support page to fix security vulnerability. The changes associated with this can cause custom themes to produce a lot of warning messages in the logs resulting in a significant performance penalty. The custom theme must be redeployed before the changes will take effect. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to installing the cumulative fix. Go to HCL Software Support page to see if the Configuration Changes and Options introduced in the HCL Web Content Manager 8.5 Combined Cumulative Fixes apply to your environment. If you modified the permissions on the PortalServer home directory tree to install the cumulative fix as non-root, restore the original permissions. If using Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. * Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=<password> -DPortalAdminPwd=<password> The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * for MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * for SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled If you have set up a remote search server or document conversion server for use with HCL Portal 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. Refer to the HCL Portal 8.5 Combined cumulative fix instructions: remote search for the details of applying a cumulative fix to the remote server. Clear the browser cache. Go to HCL Software Support page for Recommended Updates for HCL Portal and HCL Web Content Manager Version 8.5 to review and apply any recommended Fixes. Prior to CF07, it was recommended to set the DB2 database configuration parameter \"dft_queryopt\" to a value of 2 as this was tested to provide the best balance of query optimization time and query execution time for the SQL produced by the JCR. For CF07 or later, this recommendation has been changed to use a value of 5 in conjunction with the testing and changes made to the JCR and JCR schema. This setting is NOT updated automatically within your JCR Database Domain configuration as part of the CF07 (or later) upgrade. This can be done manually by customers by executing the following SQL against the JCR Domain Database: db2 update db cfg for JCRDBNAME using DFT_QUERYOPT 5 OR It can also be done by running the following Config Engine Task: configure-jcr-db2-dft-queryopt","title":"Post installation steps"},{"location":"overview/ccf_95_farm/#steps-for-rolling-back-the-cumulative-fix","text":"Note: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. Note: Versions of Portal prior to CF12 do not support JDK 8. Therefore, if JDK 8 has been enabled in CF12 or later, the managesdk command must be used to switch back to JDK 7 or 7.1 before performing a rollback to CF11 or earlier. Limitations 1. Changing the server context root after upgrading is an unsupported rollback path. To roll back after changing the context root, you must first change the server context root to the values of the previous version. 2. When rolling back a CF install, if you have configured an empty context root you cannot roll back to a CF level that does not support the empty context root capability. For instance, if you have applied CF08 and have configured an empty context root you cannot rollback to CF07. If you have applied CF09 and have configured an empty context root you can roll back to CF08 but you would not be able to roll back if your previous CF level was CF07 or prior. 3. Configuring HCL Portal from a stand-alone environment to a clustered environment after upgrading is an unsupported rollback path. Before you begin rollback 1. The HCL Portal rollback scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. 2. Edit the /ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=<the hostname of your WAS instance> WasSoapPort=<the soap port of your WAS instance> WasUserid=<your WAS admin user> WasPassword=<your WAS admin pwd> PortalAdminId=<your Portal Admin ID> PortalAdminPwd=<your Portal Admin password> WpsHostName=<Your Portal hostname> WpsHostPort=<The port you use to access Portal> WpsContextRoot=<your Portal context root> Note: In a Farm Portal environment, the WasRemoteHostName should be the local hostname and the WasSoapPort should be the soap port of the HCL Portal server. 3. Edit the /ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=<your database user password> community.DbPassword=<your database user password> customization.DbPassword=<your database user password> jcr.DbPassword=<your database user password> likeminds.DbPassword=<your database user password> feedback.DbPassword=<your database user password> Edit the /ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=<your Portal hostname> XmlAccessPort=<the port you use to access Portal> Unix, Linux, Windows, and IBM i The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line roll back * Use silent mode roll back * Use console mode roll back Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Use a Graphical User Interface to roll back (available on Windows, Linux, and Unix operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all 3. Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. 4. Select \"Roll Back\" on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. 5. After rollback completes, proceed with the Post Rollback Steps. Use a command line to roll back (available on Windows, Linux, and Unix operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all 3. Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: * Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools 4. Run the following command to launch the installation program of IBM Installation Manager. The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. * For Unix/Linux: ``` ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> ``` * Windows: ``` imcl.exe rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory <portal_server_root> ``` After roll back completes, proceed with the Post Rollback Steps. Use silent mode to roll back (available on Windows, Linux, Unix, and IBM i operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all * IBM i: serverStatus -all 3. For IBM i only : Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress After roll back completes, proceed with the Post Rollback Steps. Use Console Mode to roll back (available on Windows, Linux, Unix and IBM i operating systems) 1. If you are running an external web server, stop the web server. 2. Stop any active application servers and node agents by using the stopServer and stopNode commands. To see which application servers are active, use the serverStatus command from the /bin directory and again from the /bin directory. If the Deployment Manager is installed on the same server as one of the cluster nodes, you must also stop the Deployment Manager using the stopManager command from the /bin directory. * Unix/Linux: ./serverStatus.sh -all * Windows: serverStatus.bat -all * IBM i: serverStatus -all 3. For IBM i only : Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c * IBM i: ./imcl -c 6. Select Roll back and follow the prompts to roll back HCL Portal. 7. After installation completes, proceed with the Post Rollback Steps.","title":"Steps for rolling back the cumulative fix"},{"location":"overview/ccf_95_farm/#post-rollback-steps","text":"Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All cluster members and all profiles that share the same Portal installation directory (multiple profile option) must be updated to the same level to complete the CF installation.Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program.Note: If a remote search server is used within this environment, it should be started before running the following commands. 1. On the Farm Master Server execute the following command from within the path of the profile to configure. Note: If you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true * Unix/Linux: ``` (profile_root/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * Windows: ``` (profile_root)\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * IBM i: ``` (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ```**Important**: If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Digital Experience before re-running. 2. On the Farm Support Server execute the following command from within the path of the profile to configure. Note: If you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the \"isEmptyPortal\" property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true Note: If the Farm Support Server only has read-only access to the Portal Binaries use the -DSharedBinaries=true flag with the rollbackCF command. * Unix/Linux: (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) * Windows: (profile_root)\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) * IBM i: (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Important : If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Digital Experience before re-running. 3. 3. If you are running an external web server, and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, then perform the following steps: 1. Regenerate the web server plugin. 2. Copy the plugin-cfg.xml file to the plugin directory. 3. Restart the web server. 4. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. 5. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using HCL Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to rolling back the cumulative fix. 6. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. * Unix/Linux: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * Windows: (profile_root)\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * IBM i: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * for MLS use ConfigEngine.sh|bat action-is-wcm-mls-enabled * for SMP use ConfigEngine.sh|bat action-is-wcm-smp-enabled 7. For rollback to CF03 or earlier level only: If the Brightcove integration was enabled, remove the old Brightcove plugins, then configure HCL Portal to add the new Brightcove plugins. 8. For rollback to CF03 or earlier level only: If using Rich Media Edition, remove the Rich Media Edition plugin, restart the Portal Server, then configure HCL Portal to add the Rich Media Edition plugins. 9. If you have set up a remote search server or document conversion server for use with HCL Portal 8.5, then whenever you roll back a cumulative fix to the portal server, you should also roll back the corresponding cumulative fix to the remote server. 10. Clear the browser cache. On this page* About HCL Portal 8.5 and 9.0 Combined Cumulative Fixes * Overview * Before you begin * Space Requirements * Best Practices * Syndicator/Subscriber Information * Search Crawler Information * Backing up the Installation Manager data * Known Issues * Check fixes installed on your system * Ensure wkplc properties files are correct * Unix, Linux, Windows, and IBM i: * Multiple profile considerations * Non-root considerations * Anti-virus and file indexing software considerations (Windows only) * Special note for customers using WAS 8.5.5.14 * Download the cumulative fix * Steps for installing the cumulative fix * Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) * Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems for CFs prior to CF17) * Use a command line (available on Windows, Linux, and Unix operating systems) * Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) * Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) * Additional configuration steps * On the Farm Master Server * Special Consideration for empty portals * Farm Support Server setup * Special Consideration for empty portals * Post installation steps * Steps for rolling back the cumulative fix * Post Rollback Steps Generated by XML WebHelp","title":"Post Rollback Steps"},{"location":"overview/ccf_95_health_checker/","text":"Cumulative Fix Health Checker | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Cumulative Fix Health Checker | HCL Digital Experience These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. To assist you with your upgrade, HCL is now providing a Health Checker tool that you can use to validate your Portal installation before applying a cumulative fix. Simply execute this tool on the target system and review the report that is generated to see if there are any issues you need to resolve before installing the update. The tool can't catch everything, but it scans for some of the most common pitfalls and will help to ensure a smoother upgrade experience. We suggest running the tool a few days before you plan to apply the cumulative fix so that you have time to reconcile any problems it finds. The tool will be installed with Cumulative Fix 03 or later and will be available for use with all future updates. To use it before applying CF03, simply unzip the archive from the maintenance package into your (PortalServer_root) directory. By default, this is: * Windows: C:\\IBM\\WebSphere\\PortalServer * Unix/Linux: /opt/IBM/WebSphere/PortalServer * IBM i: /QIBM/ProdData/WebSphere/PortalServer/V85/Server This will overwrite two or possibly three existing files: * installer/wp.config/bin/wp.config.jar * installer/wp.update/config/includes/upgrade_health_check.xml * installer/wp.update/config/was/wp_TestPortalScripting.jacl Once the tool is installed, execute the following ConfigEngine command from within the path of the profile to run it: * Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh health-check-update -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat health-check-update -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh health-check-update -DPortalAdminPwd=<password> -DWasPassword=<password> You can run this tool safely on any system that you plan to update. It is designed not to make any changes to your environment or to interfere with any running processes. After the command completes, you will find an output report in the ConfigEngine/log directory named HealthCheck-.log . A new report with a new timestamp will be generated every time you run the tool. If the tool found any conditions that would interfere with a successful update, they will be described in the report. You should remediate these problems and re-run the tool until you get a clean report before applying the cumulative fix. Generated by XML WebHelp","title":"Ccf 95 health checker"},{"location":"overview/ccf_95_health_checker/#cumulative-fix-health-checker-hcl-digital-experience","text":"These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. To assist you with your upgrade, HCL is now providing a Health Checker tool that you can use to validate your Portal installation before applying a cumulative fix. Simply execute this tool on the target system and review the report that is generated to see if there are any issues you need to resolve before installing the update. The tool can't catch everything, but it scans for some of the most common pitfalls and will help to ensure a smoother upgrade experience. We suggest running the tool a few days before you plan to apply the cumulative fix so that you have time to reconcile any problems it finds. The tool will be installed with Cumulative Fix 03 or later and will be available for use with all future updates. To use it before applying CF03, simply unzip the archive from the maintenance package into your (PortalServer_root) directory. By default, this is: * Windows: C:\\IBM\\WebSphere\\PortalServer * Unix/Linux: /opt/IBM/WebSphere/PortalServer * IBM i: /QIBM/ProdData/WebSphere/PortalServer/V85/Server This will overwrite two or possibly three existing files: * installer/wp.config/bin/wp.config.jar * installer/wp.update/config/includes/upgrade_health_check.xml * installer/wp.update/config/was/wp_TestPortalScripting.jacl Once the tool is installed, execute the following ConfigEngine command from within the path of the profile to run it: * Unix/Linux: <profile_root>/ConfigEngine/ConfigEngine.sh health-check-update -DPortalAdminPwd=<password> -DWasPassword=<password> Windows: <profile_root>\\ConfigEngine\\ConfigEngine.bat health-check-update -DPortalAdminPwd=<password> -DWasPassword=<password> IBM i: <profile_root>/ConfigEngine/ConfigEngine.sh health-check-update -DPortalAdminPwd=<password> -DWasPassword=<password> You can run this tool safely on any system that you plan to update. It is designed not to make any changes to your environment or to interfere with any running processes. After the command completes, you will find an output report in the ConfigEngine/log directory named HealthCheck-.log . A new report with a new timestamp will be generated every time you run the tool. If the tool found any conditions that would interfere with a successful update, they will be described in the report. You should remediate these problems and re-run the tool until you get a clean report before applying the cumulative fix. Generated by XML WebHelp","title":"Cumulative Fix Health Checker | HCL Digital Experience"},{"location":"overview/ccf_95_known_issues/","text":"Combined CF Known Issues | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Combined CF Known Issues | HCL Digital Experience Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. This page will contain the known issues for the HCL Portal 9.5 Combined Cumulative Fix 17 or later releases. Known Issues for HCL Portal 8.5 / 9.0 / 9.5 Combined CF17 Problem: As of HCL Portal 8.5 and 9.0 CF16, some features are not visible to users assigned to the Anonymous user role and the All authenticated users role, such as the tree view in Site Manager. Solution: Add the necessary roles for user Anonymous and user group All Authenticated Users explicitly. For example, to use site manager features within the toolbar, you must assign the User role to the All Authenticated Users group for the Site Manager portlet. Problem: The applyCF task may fail on iSeries when used in combination with certain WAS levels, potentially with WAS 8.5.5.13 or greater. An error similar to the following may be seen in the failure*.log in the ConfigEngine 'log' directory: /QIBM/ProdData/WebSphere/PortalServer/V85/ConfigEngine/config/includes/apply_ PTF.xml:172: /QIBM/ProdData/WebSphere/PortalServer/V85/Server/installer/wp.ie hs.ear/config/includes/wp.iehs.ear_cfg.xml:62 Solution: This may be due to an OSGi issue stemming from a WAS level upgrade. Run the following on the iSeries system: cd /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/wp_profile/bin osgiCfgInit -all Then rerun the applyCF task. Problem: The HCL Portal 8.5 and 9.0 CF15 applyCF task may fail if using the specific combination of WAS 8.5.5.12 on a Windows OS. An error similar to the following may be seen in the failure*.log in the (profile_root)/ConfigEngine/log directory: wp.theme.modules.webapp_cfg.xml:296: java.lang.NoClassDefFoundError: com.ibm.ffdc.config.Formattable Solution: This is due to an OSGi issue in WAS 8.5.5.12 that will be fixed in their next release. Simply rerunning the applyCF task should allow continuation and success of the CF15 update. The following command also remediates the issue: (profile_root)/bin/osgiCfgInit.sh|bat Problem: A failure, similar to the following, may be seen when running a Rollback on a system configured with WAS 8.5.5.x with JDK8: /opt/IBM/WebSphere/PortalServer/toolbar/wp.toolbar.themes/toolbar85/config/includes/wp.theme.themes.toolbar85_cfg.xml:217: The following error occurred while executing this line: /opt/IBM/WebSphere/ConfigEngine/config/includes/utils.xml:2093: EJPXB0019E: Server response indicates an error. For status and details of the XMLAccess error look at file /opt/IBM/WebSphere/wp_profile/ConfigEngine/config/work/xmlaccess.temp.file.657596238.xml. Solution: This is due to an EJBDeploy incompatibility with JDK8 on WAS 8.5.5.x. The following steps can be used to bypass the issue: After rollback failure, use the following command to switch the JDK used by the profile to 1.7. For example: /opt/IBM/WebSphere/wp_profile/bin/managesdk.sh -enableProfileAll -sdkName 1.7_64 Then rerun the failing rollbackCF command, from the start by removing the rollbackCFprogress directory in example (profile_root)/ConfigEngine/log. After rollback success, the JDK can then be switched back to the original JDK8 via the same command and substituting -sdkName 1.8_64 . This is planned to be fixed in the next Portal CF. Problem: The following error may be seen when working with or installing Portal Web Modules, when configured with WAS 8.5.5.12 / 9.0.0.5 generates this error: com.ibm.portal.tasks.wtf.XmlAccessException: Xmlaccess request failed with an error. Result [failed], Messages: [[EJPXA0043E: EJPXA0043E: An error occurred while creating or updating the resource.], [EJPPD0015E: EJPPD0015E: Portlet application manager failed when user xmlaccess scripting user executed command InstallWebApplication.], [EJPPE0013E: EJPPE0013E: The installation of Web Module from WAR file /opt/IBM/WebSphere/wp_profile/PortalServer/deployed/ilwwcm-wcmlibutil.war did not complete successfully when invoking the WebSphere Application Server administration interface.], [EJPPE0001E: EJPPE0001E: Instantiation of the WebSphere Application Server administration manager failed.], [EJPPH0007E: EJPPH0007E: Instantiation of the administration module for Portal context failed.], [EJPPH0010E: EJPPH0010E: Failed to retrieve and initialize administration runtime variables from Application Server.], Solution: This is expected to be fixed in an upcoming WAS level. The temporary workaround to alleviate this problem is to set the following JVM Property: com.ibm.ws.management.connector.soap.disableSOAPAuthCheck = true Problem: Errors may be seen in DCS (Document Conversion Service) based on Oracle OIT (Outside In Technology) levels. The new OIT 8.5.3 level has additional prerequisites outside of Portal's scope. Solution: Go and log in to HCL Software Support page to find related information about the PI84847 introduced in Portal Version 8.5 and Version 9.0 CF15 section. Problem: On a Linux or Unix system, it is possible that the applyCF command may fail, with this error message recorded in ConfigTrace.log: Couldn't flush user prefs: java.util.prefs.BackingStoreException: Couldn't get file lock. Solution: The problem concerns Java system and/or user preferences and can potentially be addressed in one of the following ways: Make sure that Java's preferences directory is accessible. Ensure that the /etc/.java/.systemPrefs directory exists and is read/writable by the user performing the upgrade as well as any alternate user ID used to do WAS administration. Create a new unique Java preferences path for use by WAS. a. Create a new sub-directory of your choice (for example, under /home/wasadmin/prefs/). b. Assign permissions on this directory so that it is read/writable by the user performing the upgrade as well as any alternate user ID used to do WAS administration. c. Set the following argument on the affected WebSphere JVM: -Djava.util.prefs.userRoot=/home/wasadmin/prefs . To set this argument, go to the administrative console, click Servers > Server Types > WebSphere application servers, and select the server that you want to add the generic argument to. Then, in the Server Infrastructure section, click Java and Process management > Process definition > Java virtual machine. d. Add -Djava.util.prefs.userRoot=/home/wasadmin/prefs to any existing properties in the Generic JVM Arguments field and click OK. Then click Save to save your changes and restart the application server. Problem: An error may occur during applyCF on the primary cluster node, similar to the following: [wplc-remove-ear] AppName EphoxTbioServices [wplc-remove-ear] ADMA5017I: Uninstallation of EphoxTbioServices started. [wplc-remove-ear] ADMA5104I: The server index entry for WebSphere:cell=psvtmigwin08Cell01,node=psvtmigwin11+WebSphere:cell=psvtmigwin08Cell01,node=psvtmigwin09+WebSphere:cell=psvtmigwin08Cell01,node=psvtmigwin10Node01 is updated successfully. [wplc-remove-ear] ADMA5102I: The configuration data for EphoxTbioServices from the configuration repository is deleted successfully. [wplc-remove-ear] ADMA5011I: The cleanup of the temp directory for application EphoxTbioServices is complete. [wplc-remove-ear] ADMA5106I: Application EphoxTbioServices uninstalled successfully. [wplc-remove-ear] WASX7015E: Exception running command: \"source \"C:/ibm/wp85/wp_profile/ConfigEngine/config/work/was/curJaclScript.jacl\"\"; exception information: [wplc-remove-ear] com.ibm.websphere.management.exception.ConfigServiceException [wplc-remove-ear] com.ibm.ws.sm.workspace.WorkSpaceException [wplc-remove-ear] com.ibm.websphere.management.exception.DocumentIOException: cells/psvtmigwin08Cell01/applications/EphoxTbioServices.ear/EphoxTbioServices.ear Solution: Go and log in to HCL Software Support page to find related information about disabling auto plugin generation. Once applyCF completes, re-enable the two plugin settings. Problem: The post-was-configuration-update task may fail due to an error in the Portal server startup. SystemOut.log shows an exception related to the wps_scheduler , and the wps_scheduler does not start when the Portal server starts. Error logs may appear similar to the following: [6/21/17 23:05:06:112 EDT] 00000080 InternalGetSc E com.ibm.wps.command.scheduler.internal.InternalGetSchedulerTaskCommand AbstractCommand.throwCommandException EJPDD0009E: JNDI naming lookup failed for name = [ejb/wpsSchedulerManager]. javax.naming.NameNotFoundException: Context: w7944aCell/nodes/w7944aNode/servers/HCL Portal and HCL Web Content Manager, name: ejb/wpsSchedulerManager: First component in name wpsSchedulerManager not found. [Root exception is org.omg.CosNaming.NamingContextPackage.NotFound: IDL:omg.org/CosNaming/NamingContext/NotFound:1.0] Solution: Edit the WAS 9 properties file, ex. AppServer/properties/migration.properties. #------------------------------------------------------------------------- # Specify the number of apps which can be installed in parallel. default=3 #------------------------------------------------------------------------- #com.ibm.ws.migration.application.install.threadPoolSize=3 Then uncomment the property and set to a value of 1. For example: com.ibm.ws.migration.application.install.threadPoolSize=1 Then, save the change and continue with the profile migration. Stop the Portal server, and run the following command again: post-was-configuration-update Problem: When creating a portal page, there is an option to Create Content. When clicking on that option, it presents available templates to create content from Content Hub Authoring Template is one of them. If selecting this template, it may show an error: \"The new content item could not be created. The selected template is not supported. A workflow is required, but the workflow is not set for the item\" Solution: This authoring template is not designed for this feature. It has to be exempted from creating content items off it from toolbar. To do that: Go to the Content Hub library. Open Authoring templates, edit the Content Hub authoring template. Go to the tab Properties. Open section Profile. Add this keyword hcl.portal.toolbar.hiddenTemplate to the keywords text box. Save and Close. Problem: XMLAccess in the applyCF command may fail when updating a virtual portal Solution: The CF install attempts to update the Portal owned pages in the base portal and all virtual portals. Prior to CF11 there were some cases where error conditions were suppressed for both the base portal and all virtual portals. This has changed and error conditions are no longer suppressed. If the CF install ( applyCF command) reports an error while running the XMLAccess tool on a virtual portal, there may be a problem with the virtual portal. If virtual portal(s) have been modified and removed some of the Portal owned pages on purpose then these errors can be safely suppressed and allow the CF install to continue. This can be done by adding the ignore-errors-all-vps property to the applyCF command. Example: applyCF.(sh|bat) ..... -Dignore-errors-all-vps='true' If Portal-owned pages have not been purposely removed from the virtual portal, then the error should be investigated and attempted to be fixed. Problem: After HCL Portal 8.5 CF12 or later is applied, warning messages may be seen in the SystemOut.log similar to the following, and custom themes or custom portlets may stop working: [10/5/15 8:00:00:000 EDT] 0000000a AbstractReque W com.ibm.wps.resolver.resource.AbstractRequestDispatcherFactory matchesWebAppDefault(aResource) Servlet context [/...] does not specify a blackwhite list when accessing resource [...], falling back to the default [[whitelist(null), blacklist(.*)]]... There might be many of these warning messages which could cause a significant performance issue. * Solution: HCL Portal 8.5 CF12 (and later) contains a security fix (PI65954). Similar to APAR PI47714, this APAR warns and then blocks access to files in a web application that does not have a blacklist or whitelist. The difference between PI47714 and PI65954 is that the default value for the blacklist is now \". \" instead of \"WEB-INF/. \" which is much more restrictive than before. Applications can define a custom blacklist or whitelist list by adding the keys com.ibm.portal.resource.whitelist and com.ibm.portal.resource.blacklist to their web.xml deployment descriptor. Custom themes must be redeployed for these changes to take effect. Alternatively, as a temporary solution, you can define a different default value for the blacklist. Details on the action required for the custom code mentioned in these messages and the setting of a default value for the blacklist can be found on the HCL Software Support page. Problem: If you drag and drop digital assets into: The Dropzone in the Sharing Tab of Rich Media Edition console, or Shared files directory (MBAssets folder and its subfolders) that the Rich Media Edition uses, then default renditions may not be created automatically. Solution: One of the two workaround approaches can be followed to place assets into Rich Media Edition and generate default renditions. You can either use WCM interface to place assets in Rich Media Edition instead of Dropzone or shared files directory of the Rich Media Edition server. Launch the link from Shared files section in the Sharing tab of Rich Media Edition console in a browser to open the user's workspace. Login and double click the assets for which you want to generate renditions and open Renditions tab. Click on Regenerate Renditions button. Problem: If HCL Portal is configured with an empty value for the wps context root or an empty value for the portal mapping for public pages then the following message may be seen in the browser when a user accesses a page that has a whitespace character or any other special character in the friendly page name: Error 400: EJBCD0006E: The resolution of a URI failed. Refer to the SystemOut.log for more detailed information. A similar warning in the SystemOut.log may also be seen: ExceptionLogg W com.ibm.wps.logging.ExceptionLogger logThrowable An exception occurred: [Illegal character in path at index 43: com.ibm.portal.friendly.name:/Search/Search Center]. Enable traces for [com.ibm.wps.logging.ExceptionLogger=all] to see the exception stack trace. Solution: This is a known issue and is fixed by applying the WAS interim fix for PI67942 for WAS 8.5.5.10. This issue will also be fixed or included in WAS 8.5.5.11. HCL Software page in the maintenance package. Problem: A decrease in performance may occur when Textbox.io is used with large amounts of HTML (~4000 lines/20,000 characters) that can cause the Firefox browser to stop working when switching between code and design views. Solution: When switching between code and design views, save and close the content and then reopen it before returning to the design view. For other browsers, waiting and allowing processes to continue running eventually returns to the design view and no further action is required. Problem: If WAS 8.5.5.10 is installed with JDK8 for the Portal server profile and CF12 or later is installed, the following errors may be found in the ConfigTrace.logfile: [exec] SEVERE: [exec] java.lang.UnsupportedClassVersionError: JVMCFRE003 bad major version; class=sun/rmi/rmic/Main, offset=6 and [exec] SEVERE: Error generating RMI code: Cannot run RMIC because it is not installed. Expected location of RMIC is the following: /opt/IBM/WebSphere/AppServer/java_1.8_64/lib. [exec] Exception in thread \"main\" java/lang/NullPointerException Solution: There is a problem communicating with RMIC while preparing an Enterprise Application for installation. This is fixed by installing WAS APAR PI67166 and retrying the applyCF.sh command. It can also be avoided by installing WAS APAR PI67166 before the Portal CF update. Problem: On iSeries environments configured with JDK8 and WAS 8.5.5.10, you may get the error message \"Java runtime version not supported\" in ConfigTrace.log during the installation of Portal CF12 or later. In more detail, an error similar to the following may be seen in the ConfigTrace.log file: [exec] Java runtime version not supported [exec] 1.8.0 [exec] Java runtime version not supported [exec] com.ibm.etools.ejbdeploy.EJBDeploymentException: 1.8.0 [exec] Java runtime version not supported [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.ValidateJavaRTenv(EJBDeploy.java:475) [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.execute(EJBDeploy.java:74) [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.deploy(EJBDeploy.java:349) [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.main(EJBDeploy.java:310) [exec] EJBDeploy level: --- Exception Thrown --- /QIBM/ProdData/WebSphere/PortalServer/V85/Server/wcm/prereq.wcm/config/includes/prereq.wcm.fp_cfg.xml:121: exec returned: 1 Solution: To use JDK8 with WAS 8.5.5.10 on IBM i, it will be necessary to first run a script to patch the ejbdeploy file. This script should be run after the IM install step and before the applyCF manual step. If this error has already been encountered during the applyCF command, then the script can be run, and then re-run the applyCF command. To run the script, open a command prompt in the (profile_root)/PortalServer/bin/ directory then run the command: i5ejbscript update To revert to the old state, running the following command will restore the link to the original file: i5ejbscript restore Note: WAS 8.5.5.11 should contain the fix for the ejbdeploy file, and this action will no longer be needed. Problem: ISAM v7 does not support JDK8. Any customer choosing to move to JDK8 will no longer have compatibility for ISAM v7. ISAM v9 will support JDK8, but Portal does not yet support this level. Solution: This is currently a Portal limitation. Future plans may include ISAM v9 support in a later CF. Problem: No content indexed in default search collection and system was configured with a custom Portal context root Solution: Prior to CF06 there was a manual step required after changing the context root. The context in the search content source had to be manually adjusted. If this was not performed, then the content source will be using the wrong context root and will not find any content to index. Beginning with CF06 the update of the search content source was included in the task modify-servlet-path . To solve this problem, the context in the search content source can be adjusted manually or just run the task modify-servlet-path again. Problem: In the WCM Authoring environment, when the DAM popup is opened to select an image, it may show all the assets available in DAM, but the thumbnails will not be generated properly. This may be due to a particular library which is installed with Linux, but is at a different version to that which MediaBeacon utilizes. Solution: The typical solution is to create a symbolic link, as shown below. Open Terminal. Run the following command: cd /lib64 If Linux is installed with libbz2.so.1.0.4 for example, then do: ln -s libbz2.so.1.0.4 libbz2.so.1.0 Problem: In installations with a large number of resources, it is possible that the applyCF script could run out of memory and fail. Such a failure would record a \"java.lang.OutOfMemoryError: Java heap space\" message and a Java stack trace in the ConfigTrace.log file. Solution: If this problem is encountered, the amount of memory available to the JVM can be increased, and the configuration can then be re-run. For Unix/Linux: Backup the (AppServer_home)/bin/wsadmin.sh file. Open this file in a text editor. Locate the PERF_JVM_OPTIONS= line specific to your operating system. Modify this line to have an Xmx parameter of 2048, e.g. from PERF_JVM_OPTIONS=\"-Xms256m -Xmx256m -Xquickstart\" ;; to PERF_JVM_OPTIONS=\"-Xms256m -Xmx2048m -Xquickstart\" ;; 5. Save changes. 6. Re-run applyCF.sh . After some initialization, the script will skip configuration steps that have already completed and pick up where it left off before the crash. 2. For Windows: 1. Backup the AppServer_home)\\bin\\wsadmin.bat file. 2. Locate the set PERFJAVAOPTION statement. 3. Modify this line to have an Xmx parameter of 2048, e.g. set PERFJAVAOPTION=-Xms256m -Xmx256m -Xquickstart to set PERFJAVAOPTION=-Xms256m -Xmx2048m -Xquickstart 4. Save changes. 5. Re-run applyCF.bat . After some initialization, the script will skip configuration steps that have already completed and pick up where it left off before the crash. Problem: Where Textbox.io is the configured rich text editor in WCM, rapidly opening and re-saving an existing item containing a rich text element can cause the loss of existing content if the item is saved before the rich text content is fully loaded. This is only likely to be an issue in environments with high network latency. Solution: Ensure when editing an existing content, site area, template or component containing a rich text element, the rich text content is fully loaded in the editor before re-saving the item. Problem: During the migration process the node may not start after upgrading to WAS 8.5.5.9 and before executing upgrade-profile. The node does not start with error message: ADMU3200I: Server launched. Waiting for initialization status. ADMU3011E: Server launched but failed initialization. Server logs, startServer.log, and other log files The log contains the following error message: HMGR0031E: A conflicting IP address and port has been detected for the DCS_UNICAST_ADDRESS end point. The node does not start due to conflicting port configuration for the DCS_UNICAST_ADDRESS end point of server1 and nodeagent in the node serverindex.xml. Solution: It is recommended to execute upgrade-profile before upgrading to WAS 8.5.5.9. Alternatively the conflicting port configuration for the DCS_UNICAST_ADDRESS needs to be solved by setting unique port numbers for server1 and nodeagent . Problem: After Rollback from CF09 or above to CF08 or below, the portal toolbar may show extra items that have titles $Banner$ , $Teaser$ and $Video$ . Solution: These items can be ignored and should not be used. During an update to CF09 or above again, these items will disappear. To have these items no longer visible in the toolbar, go to Applications > Content > Web Content Authoring. Search for each of these pieces of content. Edit each of the pieces of content and go to properties. In the profile keyword field, remove the keyword hcl.portal.toolbar.NewContent . Save this change. Problem: During the update on IBM i, the following error may occur: --- Exception Thrown --- WKSP0006E Error while saving context -java.io.IOException: The system cannot find the specified file, either the filename is too long on Windows system or run out of file descriptor on UNIX platform. java.io.FileNotFoundException: /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/wp_profile/wstemp/anonymous1358164268290/workspace/templates/.repositoryContext (The file access permissions do not allow the specified action.) Solution: If this exception occurs after configuration has already successfully completed, then it can be safely ignored. However, if it causes the update to fail, then you will need to change the location of the wstemp directory to shorten the path. Go and log in to HCL Software Support page to find instructions in changing the location of the wstemp temporary workspace directory. Problem: During the upgrade-profile task in migration, there may be an intermittent issue which can cause the uninstall of an application to fail because files from the application are locked and cannot be deleted. This is an example of an error message that may be seen: BUILD FAILED C:\\ibm\\wp85\\ConfigEngine\\config\\includes\\apply_PTF.xml:172: C:\\ibm\\wp85\\PortalServer\\jcr\\wp.content.repository.install\\config\\includes\\jcr.mig_cfg.xml:382: Exception found when executing wsadmin: <hostname> c:/ibm/wp85/ConfigEngine/lib/wkplc.misc.jar; C:/ibm/wp85/AppServer/deploytool/itp/batchboot.jar;C:/ibm/wp85/AppServer/deploytool/itp/batch2.jar; C:/ibm/wp85/PortalServer/base/wp.base/shared/app/wp.base.jar;C:/ibm/wp85/PortalServer/shared/app/wp.base.jar Solution: If this issue is encountered, wait 5 minutes and re-run the upgrade-profile task with the same options to resume the migration. The lock on the file should be released and the uninstall can continue as expected. Problem: It may be noticed that a page created from a page template does not have the access controls that are expected or that the access controls for such a page have recently changed. Solution: APAR PI39231 (IN STANTIATING A PAGE TEMPLATE LEADS TO INCONSISTENT ACCESS CONTROL SETTINGS ON THE TARGET PAGE) was introduced in CF08. With this APAR, access control settings applied to a page template are consistently copied onto the target page. This means that all access rights assigned explicitly on a page template are also applied to the created page. If, for example, the All Authenticated Portal Users group is assigned to USER@PageTemplate , then the created page will be visible to every authenticated user, independent of the access control configuration of the parent page. During the installation of the CF the out of the box page templates have also been changed, including those in existing virtual portals, to no longer have explicit role mappings and it is recommended that all customers do the same for custom code templates unless the use case really is to copy that role mapping onto the target page. This is a permanent change in behavior effective in CF08 or later. Go to Creating page templates topic for more information about this behavior. Problem: Non-English characters are not supported when exporting a Site/Section template from Site Builder. When importing Site or Section templates into the Site Builder application, you may encounter an error that the template PAA file could not be imported. This could be due to using non-English characters in the Site/Section template PAA import object file name. You will see the following messages on the site builder interface: \"Could not import the template. The solution installer import of the PAA file failed. Review the server logs for more information.\" Solution: Use only English characters in the PAA file name. Problem: If local hostname resolution is not configured properly, the applyCF command may fail with an error like this: C:\\IBM\\WebSphere\\PortalServer\\theme\\wp.setup.themedev\\config\\includes\\wp.setup.themedev_cfg.xml:52: Exception found when executing wsadmin: jacl C:/IBM/WebSphere/ConfigEngine/lib/wkplc.misc.jar;C:/IBM/WebSphere/AppServer/deploytool/itp/batchboot.jar; C:/IBM/WebSphere/AppServer/deploytool/itp/batch2.jar;C:/IBM/WebSphere/PortalServer/base/wp.base/shared/app/wp.base.jar; C:/IBM/WebSphere/PortalServer/shared/app/wp.base.jar 'HCL Portal and HCL Web Content Manager(cells/winwab09Cell/nodes/winwab09Node/servers/HCL Portal and HCL Web Content Manager|server.xml#Server_1452022426983)' Ear File C:/IBM/WebSphere/PortalServer/theme/wp.setup.themedev/installedApps/ThemeDevAssets.ear WASX7015E: Exception running command: \"source \"C:/IBM/WebSphere/wp_profile/ConfigEngine/config/work/was/curJaclScript.jacl\"\"; exception information: com.ibm.websphere.management.filetransfer.client.TransferFailedException java.io.FileNotFoundException: java.io.FileNotFoundException: C:\\IBM\\WebSphere\\PortalServer\\theme\\wp.setup.themedev\\installedApps\\ThemeDevAssets.ear (Access is denied) Solution: This indicates a SOAP issue on the Web server where the hostname does not resolve as expected. \ufeffThe solution is to make sure that all host names of the machine are associated with the loopback in the hosts file. Edit the following file. For Linux, AIX, Solaris, the hosts file is: /etc/hosts For Windows, the hosts file is: %SystemRoot%\\System32\\drivers\\etc\\hosts Add a line similar to the following, substituting your actual machine name where indicated like: 127.0.0.1 yourhostname yourhostname.yourdomain localhost localhost.localdomain If a line for localhost already exists, you can add your hostname to this existing line. To update the hosts table on IBM i, run the cfgtcp command and choose the option Work with TCP/IP host table entries. Problem: After the CF is applied, warning messages may be seen in the SystemOut.log similar to: [10/5/15 8:00:00:000 EDT] 0000000a AbstractReque W com.ibm.wps.resolver.resource.AbstractRequestDispatcherFactory matchesWebAppDefault(aResource) Servlet context [/...] does not specify a blackwhite list when accessing resource [...], falling back to the default [[(null), (WEB-INF/.*)]]. Applications can define a custom list by adding the keys [com.ibm.portal.resource.whitelist] and [com.ibm.portal.resource.blacklist] to their web.xml deployment descriptor. There might be many of these warning messages which could cause a significant performance issue. * Solution: HCL Portal Version 8.5 CF08 (or later) contained a security fix (PI47714 / CVE-2014-8912), which requires specification of black and white lists for custom themes and portlets in certain usage scenarios involving the 'res' data source. You must redeploy your custom theme for these changes to take effect. Details on the action required for the custom code mentioned in these messages can be found in the HCL Software Support page. Problem: When following steps to modify site URLs for the Search Engine Optimization (SEO) workflow some portlets and labels may not be available in clustered environments. For example, you cannot perform the Change the JSP components in the Web Resources v70 Library step. Solution: If you do not have a web server, you must resynchronize the nodes and restart the cluster before you can change the JSP components in the Web Resources library. Problem: There may be a performance issue seen (in EditLive) when using Java 1.8 Update 60 / Internet Explorer. Solution: Oracle and Ephox have acknowledged this issue and are documenting the following link on their support site: https://ephox.zendesk.com/entries/96347398-Java-1-8-u60-Internet-Explorer-Issue . Note: The Ephox (EditLive) Java based Rich Text Editor has been deprecated as of HCL Portal 8.5 CF11 and replaced by Textbox.IO. HCL Portal 9.5 requires a minimum of CF17 to offer Textbox.io. The Ephox (EditLive) feature is only available in HCL Portal 9.5 if you explicitly enable it. Problem: Error messages can be seen in the SystemOut.log after rollback regarding ManagedRules feature updates. These features would no longer be available after the rollback to a level earlier than CF08. The following error example may be seen in the log: java.lang.RuntimeException: java.lang.ClassNotFoundException: com.aptrix.pluto.pzn.Segment at com.aptrix.identity.IdentityReference.getTypeClass(IdentityReference.java:190) Solution: These logging errors are expected if content was created against a Portal feature at an updated CF level and a rollback occurs to a level that does not support it. The logging exceptions could be removed by running the following two ConfigEngine tasks: ./ConfigEngine.sh drop-wcm-recents-and-favorites-tables ./ConfigEngine.sh create-wcm-recents-and-favorites-tables Problem: Starting with HCL Portal Version 8.5 Cumulative Fix 5, a new check has been added to the XML configuration interface. When the XML configuration interface processes update requests, now all locale identifiers are checked if they represent a locale available on the system. If this is not the case, then the update request fails and the XML configuration interface returns with an error. For example, language-dependent strings are marked with a locale: {code:} (localedata locale=\"en\") (title)Home(/title) (/localedata){code} Here, for en which stands for the English locale, a title is defined. For other locales, other strings can be defined. Now, if the attribute locale contains an empty value or an identifier of a locale which does not exist on the system, then the file cannot be imported. As on levels prior to HCL Portal Version 8.5 Cumulative Fix 5, this check has not been performed, XML files exported from Portal systems can lead to errors when trying to import them on a HCL Portal Version 8.5 system with at least Cumulative Fix 5. Even HCL Portal systems migrated or upgraded to at least HCL Portal Version 8.5 Cumulative Fix 5 can contain configuration data with invalid locales. Exporting such data with the XML configuration interface is possible without problem. However, trying to import this data can lead to the error described above. * Solution: To fix this problem you can remove the XML element localedata with its child elements or you can change the locale attribute to an existing locale identifier. Problem: For IBM i only: May have the following error when running applyCF.sh when Portal databases have been transferred to IBM i DB2 using type 4 driver: [importNodeTypes] SEVERE: RT0022E: Failed to initialize pool with minimum number of free connections [importNodeTypes] com.ibm.db2.jdbc.app.DB2SQLSyntaxErrorException: Relational database \"hostname\" not in relational database directory. Solution: Run the following steps then rerun applyCF.sh : Start a 5250 session on the database machine. Type the IBM i command WRKRDBDIRE to display the Relational Database Directory Entry for Location *LOCAL and make a note of the value displayed. Sign off from the 5250 session. Start a 5250 session on the machine where HCL Portal is installed. Create a Relational Database Directory Entry on the system where HCL Portal is installed for the database system using IBM i command WRKRDBDIRE . Add an entry with the following values: Relational database: The relational database. Use the value noted from the prior step. Relational database alias: The hostname. Use the short TCP/IP hostname of the database system. Remote location: The domain qualified hostname. Use the full TCP/IP hostname of the database system. Type: IP Port number or service name: DRDA Remote authentication method: Preferred method: ENCRYPTED Allow lower authentication: ALWLOWER Problem: The Live Repository will not show any available packages to be updated when selecting the IIM Preferences checkbox Search service repositories during installation and updates. Solution: IBM Installation Manager (IIM) should be updated to the latest level, at least IIM 1.8, for the packages to be displayed. Problem: The applyCF.bat|sh task may fail with an error like the following: action-clear-was-caches: [echo] /usr/IBM/WebSphere/AppServer/deploytool/scripts/install/ejbdeploy-clear-cache.sh --- Exception Thrown --- /usr/IBM/WebSphere/PortalServer/installer/wp.update/config/includes/cumulative_fix.xml:302: The directory you specified does not exist. Solution: Portal Server requires the optional WebSphere Application Server EJBDeploy tool, and the above error will occur if this tool is not installed. To resolve the error, use IBM Installation Manager to modify your copy of WebSphere Application Server and add the feature named EJBDeploy tool for pre-EJB 3.0 modules. Problem: The IBM Installation Manager GUI may hang or crash on Red Hat Enterprise Linux v6.6 during the Portal update process. Solution: There are potentially two issues at work. The first is an eclipse bug caused by an infinite loop in code that tries to enumerate printers. This first issue can be resolved by updating your Installation Manager client to v1.8 or later. If updating your client is not a viable option at the moment, you can alternatively work around the problem by adding the following line to the /opt/IBM/InstallationManager/eclipse/IBMIM.ini file: -Dorg.eclipse.swt.internal.gtk.disablePrinting The second issue is caused by a different eclipse bug, related to a mismatch between the GTK version and the cairo library. The resolution is to update the cairo libraries. Problem: Starting Portal Farm node may result in Error 500 when accessing Portal. Solution: Go and log in to HCL Software Support page to find related information about this issue. Problem: If you do a database transfer to z/OS DB2 after installing HCL Portal 8.5 GA and before updating to the current CF, the schema name used for JCR indices will be the config user name instead of the designated schema name, resulting in potential duplicate entries if more than one portal uses the same z/OS DB2. The schema name is supposed to be sufficient for uniquely configuring multiple Portals to the same z/OS DB2 and it is very possible that the same config user could be used for both Portals. Solution: Apply HCL Portal 8.5 CF01 or later prior to doing a database transfer to z/OS DB2. Problem: After installing and rolling back the Cumulative Fix, you may observe error messages similar to the following in the Installation Manager if you subsequently uninstall HCL Portal 8.5: Basedir /usr/IBM/WebSphere/wp_profile does not exist Basedir /usr/IBM/WebSphere/wp_profile does not exist org.apache.tools.ant.Project.setBaseDir(Project.java:844) org.apache.tools.ant.Project.setBasedir(Project.java:829) Solution: The product will be successfully uninstalled despite these messages, so you can safely choose to ignore them. The errors will be avoided if you uninstall HCL Portal 8.5 without first rolling back the Cumulative Fix. Problem: IBM Installation Manager version 1.7.1 crashes with JVM Error when running HCL Portal rollback in GUI Mode. Solution: Upgrade Installation Manager to version 1.7.3 or later and retry the rollback. Please see the following documentation for more details. Problem: After installing or rolling back the cumulative fix, you may observe error messages similar to the following in the Installation Manager log file: \"Installation Manager cannot remove feature Portal Server Profile during the Update or Rollback.\" Solution: These messages do not indicate a problem. To prevent a configuration error, you are prevented from changing your feature selections when performing an update. If you want to add or drop a portal, you must select the Modify function of Installation Manager instead. Generated by XML WebHelp","title":"Ccf 95 known issues"},{"location":"overview/ccf_95_known_issues/#combined-cf-known-issues-hcl-digital-experience","text":"Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. This page will contain the known issues for the HCL Portal 9.5 Combined Cumulative Fix 17 or later releases.","title":"Combined CF Known Issues | HCL Digital Experience"},{"location":"overview/ccf_95_known_issues/#known-issues-for-hcl-portal-85-90-95-combined-cf17","text":"Problem: As of HCL Portal 8.5 and 9.0 CF16, some features are not visible to users assigned to the Anonymous user role and the All authenticated users role, such as the tree view in Site Manager. Solution: Add the necessary roles for user Anonymous and user group All Authenticated Users explicitly. For example, to use site manager features within the toolbar, you must assign the User role to the All Authenticated Users group for the Site Manager portlet. Problem: The applyCF task may fail on iSeries when used in combination with certain WAS levels, potentially with WAS 8.5.5.13 or greater. An error similar to the following may be seen in the failure*.log in the ConfigEngine 'log' directory: /QIBM/ProdData/WebSphere/PortalServer/V85/ConfigEngine/config/includes/apply_ PTF.xml:172: /QIBM/ProdData/WebSphere/PortalServer/V85/Server/installer/wp.ie hs.ear/config/includes/wp.iehs.ear_cfg.xml:62 Solution: This may be due to an OSGi issue stemming from a WAS level upgrade. Run the following on the iSeries system: cd /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/wp_profile/bin osgiCfgInit -all Then rerun the applyCF task. Problem: The HCL Portal 8.5 and 9.0 CF15 applyCF task may fail if using the specific combination of WAS 8.5.5.12 on a Windows OS. An error similar to the following may be seen in the failure*.log in the (profile_root)/ConfigEngine/log directory: wp.theme.modules.webapp_cfg.xml:296: java.lang.NoClassDefFoundError: com.ibm.ffdc.config.Formattable Solution: This is due to an OSGi issue in WAS 8.5.5.12 that will be fixed in their next release. Simply rerunning the applyCF task should allow continuation and success of the CF15 update. The following command also remediates the issue: (profile_root)/bin/osgiCfgInit.sh|bat Problem: A failure, similar to the following, may be seen when running a Rollback on a system configured with WAS 8.5.5.x with JDK8: /opt/IBM/WebSphere/PortalServer/toolbar/wp.toolbar.themes/toolbar85/config/includes/wp.theme.themes.toolbar85_cfg.xml:217: The following error occurred while executing this line: /opt/IBM/WebSphere/ConfigEngine/config/includes/utils.xml:2093: EJPXB0019E: Server response indicates an error. For status and details of the XMLAccess error look at file /opt/IBM/WebSphere/wp_profile/ConfigEngine/config/work/xmlaccess.temp.file.657596238.xml. Solution: This is due to an EJBDeploy incompatibility with JDK8 on WAS 8.5.5.x. The following steps can be used to bypass the issue: After rollback failure, use the following command to switch the JDK used by the profile to 1.7. For example: /opt/IBM/WebSphere/wp_profile/bin/managesdk.sh -enableProfileAll -sdkName 1.7_64 Then rerun the failing rollbackCF command, from the start by removing the rollbackCFprogress directory in example (profile_root)/ConfigEngine/log. After rollback success, the JDK can then be switched back to the original JDK8 via the same command and substituting -sdkName 1.8_64 . This is planned to be fixed in the next Portal CF. Problem: The following error may be seen when working with or installing Portal Web Modules, when configured with WAS 8.5.5.12 / 9.0.0.5 generates this error: com.ibm.portal.tasks.wtf.XmlAccessException: Xmlaccess request failed with an error. Result [failed], Messages: [[EJPXA0043E: EJPXA0043E: An error occurred while creating or updating the resource.], [EJPPD0015E: EJPPD0015E: Portlet application manager failed when user xmlaccess scripting user executed command InstallWebApplication.], [EJPPE0013E: EJPPE0013E: The installation of Web Module from WAR file /opt/IBM/WebSphere/wp_profile/PortalServer/deployed/ilwwcm-wcmlibutil.war did not complete successfully when invoking the WebSphere Application Server administration interface.], [EJPPE0001E: EJPPE0001E: Instantiation of the WebSphere Application Server administration manager failed.], [EJPPH0007E: EJPPH0007E: Instantiation of the administration module for Portal context failed.], [EJPPH0010E: EJPPH0010E: Failed to retrieve and initialize administration runtime variables from Application Server.], Solution: This is expected to be fixed in an upcoming WAS level. The temporary workaround to alleviate this problem is to set the following JVM Property: com.ibm.ws.management.connector.soap.disableSOAPAuthCheck = true Problem: Errors may be seen in DCS (Document Conversion Service) based on Oracle OIT (Outside In Technology) levels. The new OIT 8.5.3 level has additional prerequisites outside of Portal's scope. Solution: Go and log in to HCL Software Support page to find related information about the PI84847 introduced in Portal Version 8.5 and Version 9.0 CF15 section. Problem: On a Linux or Unix system, it is possible that the applyCF command may fail, with this error message recorded in ConfigTrace.log: Couldn't flush user prefs: java.util.prefs.BackingStoreException: Couldn't get file lock. Solution: The problem concerns Java system and/or user preferences and can potentially be addressed in one of the following ways: Make sure that Java's preferences directory is accessible. Ensure that the /etc/.java/.systemPrefs directory exists and is read/writable by the user performing the upgrade as well as any alternate user ID used to do WAS administration. Create a new unique Java preferences path for use by WAS. a. Create a new sub-directory of your choice (for example, under /home/wasadmin/prefs/). b. Assign permissions on this directory so that it is read/writable by the user performing the upgrade as well as any alternate user ID used to do WAS administration. c. Set the following argument on the affected WebSphere JVM: -Djava.util.prefs.userRoot=/home/wasadmin/prefs . To set this argument, go to the administrative console, click Servers > Server Types > WebSphere application servers, and select the server that you want to add the generic argument to. Then, in the Server Infrastructure section, click Java and Process management > Process definition > Java virtual machine. d. Add -Djava.util.prefs.userRoot=/home/wasadmin/prefs to any existing properties in the Generic JVM Arguments field and click OK. Then click Save to save your changes and restart the application server. Problem: An error may occur during applyCF on the primary cluster node, similar to the following: [wplc-remove-ear] AppName EphoxTbioServices [wplc-remove-ear] ADMA5017I: Uninstallation of EphoxTbioServices started. [wplc-remove-ear] ADMA5104I: The server index entry for WebSphere:cell=psvtmigwin08Cell01,node=psvtmigwin11+WebSphere:cell=psvtmigwin08Cell01,node=psvtmigwin09+WebSphere:cell=psvtmigwin08Cell01,node=psvtmigwin10Node01 is updated successfully. [wplc-remove-ear] ADMA5102I: The configuration data for EphoxTbioServices from the configuration repository is deleted successfully. [wplc-remove-ear] ADMA5011I: The cleanup of the temp directory for application EphoxTbioServices is complete. [wplc-remove-ear] ADMA5106I: Application EphoxTbioServices uninstalled successfully. [wplc-remove-ear] WASX7015E: Exception running command: \"source \"C:/ibm/wp85/wp_profile/ConfigEngine/config/work/was/curJaclScript.jacl\"\"; exception information: [wplc-remove-ear] com.ibm.websphere.management.exception.ConfigServiceException [wplc-remove-ear] com.ibm.ws.sm.workspace.WorkSpaceException [wplc-remove-ear] com.ibm.websphere.management.exception.DocumentIOException: cells/psvtmigwin08Cell01/applications/EphoxTbioServices.ear/EphoxTbioServices.ear Solution: Go and log in to HCL Software Support page to find related information about disabling auto plugin generation. Once applyCF completes, re-enable the two plugin settings. Problem: The post-was-configuration-update task may fail due to an error in the Portal server startup. SystemOut.log shows an exception related to the wps_scheduler , and the wps_scheduler does not start when the Portal server starts. Error logs may appear similar to the following: [6/21/17 23:05:06:112 EDT] 00000080 InternalGetSc E com.ibm.wps.command.scheduler.internal.InternalGetSchedulerTaskCommand AbstractCommand.throwCommandException EJPDD0009E: JNDI naming lookup failed for name = [ejb/wpsSchedulerManager]. javax.naming.NameNotFoundException: Context: w7944aCell/nodes/w7944aNode/servers/HCL Portal and HCL Web Content Manager, name: ejb/wpsSchedulerManager: First component in name wpsSchedulerManager not found. [Root exception is org.omg.CosNaming.NamingContextPackage.NotFound: IDL:omg.org/CosNaming/NamingContext/NotFound:1.0] Solution: Edit the WAS 9 properties file, ex. AppServer/properties/migration.properties. #------------------------------------------------------------------------- # Specify the number of apps which can be installed in parallel. default=3 #------------------------------------------------------------------------- #com.ibm.ws.migration.application.install.threadPoolSize=3 Then uncomment the property and set to a value of 1. For example: com.ibm.ws.migration.application.install.threadPoolSize=1 Then, save the change and continue with the profile migration. Stop the Portal server, and run the following command again: post-was-configuration-update Problem: When creating a portal page, there is an option to Create Content. When clicking on that option, it presents available templates to create content from Content Hub Authoring Template is one of them. If selecting this template, it may show an error: \"The new content item could not be created. The selected template is not supported. A workflow is required, but the workflow is not set for the item\" Solution: This authoring template is not designed for this feature. It has to be exempted from creating content items off it from toolbar. To do that: Go to the Content Hub library. Open Authoring templates, edit the Content Hub authoring template. Go to the tab Properties. Open section Profile. Add this keyword hcl.portal.toolbar.hiddenTemplate to the keywords text box. Save and Close. Problem: XMLAccess in the applyCF command may fail when updating a virtual portal Solution: The CF install attempts to update the Portal owned pages in the base portal and all virtual portals. Prior to CF11 there were some cases where error conditions were suppressed for both the base portal and all virtual portals. This has changed and error conditions are no longer suppressed. If the CF install ( applyCF command) reports an error while running the XMLAccess tool on a virtual portal, there may be a problem with the virtual portal. If virtual portal(s) have been modified and removed some of the Portal owned pages on purpose then these errors can be safely suppressed and allow the CF install to continue. This can be done by adding the ignore-errors-all-vps property to the applyCF command. Example: applyCF.(sh|bat) ..... -Dignore-errors-all-vps='true' If Portal-owned pages have not been purposely removed from the virtual portal, then the error should be investigated and attempted to be fixed. Problem: After HCL Portal 8.5 CF12 or later is applied, warning messages may be seen in the SystemOut.log similar to the following, and custom themes or custom portlets may stop working: [10/5/15 8:00:00:000 EDT] 0000000a AbstractReque W com.ibm.wps.resolver.resource.AbstractRequestDispatcherFactory matchesWebAppDefault(aResource) Servlet context [/...] does not specify a blackwhite list when accessing resource [...], falling back to the default [[whitelist(null), blacklist(.*)]]... There might be many of these warning messages which could cause a significant performance issue. * Solution: HCL Portal 8.5 CF12 (and later) contains a security fix (PI65954). Similar to APAR PI47714, this APAR warns and then blocks access to files in a web application that does not have a blacklist or whitelist. The difference between PI47714 and PI65954 is that the default value for the blacklist is now \". \" instead of \"WEB-INF/. \" which is much more restrictive than before. Applications can define a custom blacklist or whitelist list by adding the keys com.ibm.portal.resource.whitelist and com.ibm.portal.resource.blacklist to their web.xml deployment descriptor. Custom themes must be redeployed for these changes to take effect. Alternatively, as a temporary solution, you can define a different default value for the blacklist. Details on the action required for the custom code mentioned in these messages and the setting of a default value for the blacklist can be found on the HCL Software Support page. Problem: If you drag and drop digital assets into: The Dropzone in the Sharing Tab of Rich Media Edition console, or Shared files directory (MBAssets folder and its subfolders) that the Rich Media Edition uses, then default renditions may not be created automatically. Solution: One of the two workaround approaches can be followed to place assets into Rich Media Edition and generate default renditions. You can either use WCM interface to place assets in Rich Media Edition instead of Dropzone or shared files directory of the Rich Media Edition server. Launch the link from Shared files section in the Sharing tab of Rich Media Edition console in a browser to open the user's workspace. Login and double click the assets for which you want to generate renditions and open Renditions tab. Click on Regenerate Renditions button. Problem: If HCL Portal is configured with an empty value for the wps context root or an empty value for the portal mapping for public pages then the following message may be seen in the browser when a user accesses a page that has a whitespace character or any other special character in the friendly page name: Error 400: EJBCD0006E: The resolution of a URI failed. Refer to the SystemOut.log for more detailed information. A similar warning in the SystemOut.log may also be seen: ExceptionLogg W com.ibm.wps.logging.ExceptionLogger logThrowable An exception occurred: [Illegal character in path at index 43: com.ibm.portal.friendly.name:/Search/Search Center]. Enable traces for [com.ibm.wps.logging.ExceptionLogger=all] to see the exception stack trace. Solution: This is a known issue and is fixed by applying the WAS interim fix for PI67942 for WAS 8.5.5.10. This issue will also be fixed or included in WAS 8.5.5.11. HCL Software page in the maintenance package. Problem: A decrease in performance may occur when Textbox.io is used with large amounts of HTML (~4000 lines/20,000 characters) that can cause the Firefox browser to stop working when switching between code and design views. Solution: When switching between code and design views, save and close the content and then reopen it before returning to the design view. For other browsers, waiting and allowing processes to continue running eventually returns to the design view and no further action is required. Problem: If WAS 8.5.5.10 is installed with JDK8 for the Portal server profile and CF12 or later is installed, the following errors may be found in the ConfigTrace.logfile: [exec] SEVERE: [exec] java.lang.UnsupportedClassVersionError: JVMCFRE003 bad major version; class=sun/rmi/rmic/Main, offset=6 and [exec] SEVERE: Error generating RMI code: Cannot run RMIC because it is not installed. Expected location of RMIC is the following: /opt/IBM/WebSphere/AppServer/java_1.8_64/lib. [exec] Exception in thread \"main\" java/lang/NullPointerException Solution: There is a problem communicating with RMIC while preparing an Enterprise Application for installation. This is fixed by installing WAS APAR PI67166 and retrying the applyCF.sh command. It can also be avoided by installing WAS APAR PI67166 before the Portal CF update. Problem: On iSeries environments configured with JDK8 and WAS 8.5.5.10, you may get the error message \"Java runtime version not supported\" in ConfigTrace.log during the installation of Portal CF12 or later. In more detail, an error similar to the following may be seen in the ConfigTrace.log file: [exec] Java runtime version not supported [exec] 1.8.0 [exec] Java runtime version not supported [exec] com.ibm.etools.ejbdeploy.EJBDeploymentException: 1.8.0 [exec] Java runtime version not supported [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.ValidateJavaRTenv(EJBDeploy.java:475) [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.execute(EJBDeploy.java:74) [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.deploy(EJBDeploy.java:349) [exec] at com.ibm.etools.ejbdeploy.EJBDeploy.main(EJBDeploy.java:310) [exec] EJBDeploy level: --- Exception Thrown --- /QIBM/ProdData/WebSphere/PortalServer/V85/Server/wcm/prereq.wcm/config/includes/prereq.wcm.fp_cfg.xml:121: exec returned: 1 Solution: To use JDK8 with WAS 8.5.5.10 on IBM i, it will be necessary to first run a script to patch the ejbdeploy file. This script should be run after the IM install step and before the applyCF manual step. If this error has already been encountered during the applyCF command, then the script can be run, and then re-run the applyCF command. To run the script, open a command prompt in the (profile_root)/PortalServer/bin/ directory then run the command: i5ejbscript update To revert to the old state, running the following command will restore the link to the original file: i5ejbscript restore Note: WAS 8.5.5.11 should contain the fix for the ejbdeploy file, and this action will no longer be needed. Problem: ISAM v7 does not support JDK8. Any customer choosing to move to JDK8 will no longer have compatibility for ISAM v7. ISAM v9 will support JDK8, but Portal does not yet support this level. Solution: This is currently a Portal limitation. Future plans may include ISAM v9 support in a later CF. Problem: No content indexed in default search collection and system was configured with a custom Portal context root Solution: Prior to CF06 there was a manual step required after changing the context root. The context in the search content source had to be manually adjusted. If this was not performed, then the content source will be using the wrong context root and will not find any content to index. Beginning with CF06 the update of the search content source was included in the task modify-servlet-path . To solve this problem, the context in the search content source can be adjusted manually or just run the task modify-servlet-path again. Problem: In the WCM Authoring environment, when the DAM popup is opened to select an image, it may show all the assets available in DAM, but the thumbnails will not be generated properly. This may be due to a particular library which is installed with Linux, but is at a different version to that which MediaBeacon utilizes. Solution: The typical solution is to create a symbolic link, as shown below. Open Terminal. Run the following command: cd /lib64 If Linux is installed with libbz2.so.1.0.4 for example, then do: ln -s libbz2.so.1.0.4 libbz2.so.1.0 Problem: In installations with a large number of resources, it is possible that the applyCF script could run out of memory and fail. Such a failure would record a \"java.lang.OutOfMemoryError: Java heap space\" message and a Java stack trace in the ConfigTrace.log file. Solution: If this problem is encountered, the amount of memory available to the JVM can be increased, and the configuration can then be re-run. For Unix/Linux: Backup the (AppServer_home)/bin/wsadmin.sh file. Open this file in a text editor. Locate the PERF_JVM_OPTIONS= line specific to your operating system. Modify this line to have an Xmx parameter of 2048, e.g. from PERF_JVM_OPTIONS=\"-Xms256m -Xmx256m -Xquickstart\" ;; to PERF_JVM_OPTIONS=\"-Xms256m -Xmx2048m -Xquickstart\" ;; 5. Save changes. 6. Re-run applyCF.sh . After some initialization, the script will skip configuration steps that have already completed and pick up where it left off before the crash. 2. For Windows: 1. Backup the AppServer_home)\\bin\\wsadmin.bat file. 2. Locate the set PERFJAVAOPTION statement. 3. Modify this line to have an Xmx parameter of 2048, e.g. set PERFJAVAOPTION=-Xms256m -Xmx256m -Xquickstart to set PERFJAVAOPTION=-Xms256m -Xmx2048m -Xquickstart 4. Save changes. 5. Re-run applyCF.bat . After some initialization, the script will skip configuration steps that have already completed and pick up where it left off before the crash. Problem: Where Textbox.io is the configured rich text editor in WCM, rapidly opening and re-saving an existing item containing a rich text element can cause the loss of existing content if the item is saved before the rich text content is fully loaded. This is only likely to be an issue in environments with high network latency. Solution: Ensure when editing an existing content, site area, template or component containing a rich text element, the rich text content is fully loaded in the editor before re-saving the item. Problem: During the migration process the node may not start after upgrading to WAS 8.5.5.9 and before executing upgrade-profile. The node does not start with error message: ADMU3200I: Server launched. Waiting for initialization status. ADMU3011E: Server launched but failed initialization. Server logs, startServer.log, and other log files The log contains the following error message: HMGR0031E: A conflicting IP address and port has been detected for the DCS_UNICAST_ADDRESS end point. The node does not start due to conflicting port configuration for the DCS_UNICAST_ADDRESS end point of server1 and nodeagent in the node serverindex.xml. Solution: It is recommended to execute upgrade-profile before upgrading to WAS 8.5.5.9. Alternatively the conflicting port configuration for the DCS_UNICAST_ADDRESS needs to be solved by setting unique port numbers for server1 and nodeagent . Problem: After Rollback from CF09 or above to CF08 or below, the portal toolbar may show extra items that have titles $Banner$ , $Teaser$ and $Video$ . Solution: These items can be ignored and should not be used. During an update to CF09 or above again, these items will disappear. To have these items no longer visible in the toolbar, go to Applications > Content > Web Content Authoring. Search for each of these pieces of content. Edit each of the pieces of content and go to properties. In the profile keyword field, remove the keyword hcl.portal.toolbar.NewContent . Save this change. Problem: During the update on IBM i, the following error may occur: --- Exception Thrown --- WKSP0006E Error while saving context -java.io.IOException: The system cannot find the specified file, either the filename is too long on Windows system or run out of file descriptor on UNIX platform. java.io.FileNotFoundException: /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/wp_profile/wstemp/anonymous1358164268290/workspace/templates/.repositoryContext (The file access permissions do not allow the specified action.) Solution: If this exception occurs after configuration has already successfully completed, then it can be safely ignored. However, if it causes the update to fail, then you will need to change the location of the wstemp directory to shorten the path. Go and log in to HCL Software Support page to find instructions in changing the location of the wstemp temporary workspace directory. Problem: During the upgrade-profile task in migration, there may be an intermittent issue which can cause the uninstall of an application to fail because files from the application are locked and cannot be deleted. This is an example of an error message that may be seen: BUILD FAILED C:\\ibm\\wp85\\ConfigEngine\\config\\includes\\apply_PTF.xml:172: C:\\ibm\\wp85\\PortalServer\\jcr\\wp.content.repository.install\\config\\includes\\jcr.mig_cfg.xml:382: Exception found when executing wsadmin: <hostname> c:/ibm/wp85/ConfigEngine/lib/wkplc.misc.jar; C:/ibm/wp85/AppServer/deploytool/itp/batchboot.jar;C:/ibm/wp85/AppServer/deploytool/itp/batch2.jar; C:/ibm/wp85/PortalServer/base/wp.base/shared/app/wp.base.jar;C:/ibm/wp85/PortalServer/shared/app/wp.base.jar Solution: If this issue is encountered, wait 5 minutes and re-run the upgrade-profile task with the same options to resume the migration. The lock on the file should be released and the uninstall can continue as expected. Problem: It may be noticed that a page created from a page template does not have the access controls that are expected or that the access controls for such a page have recently changed. Solution: APAR PI39231 (IN STANTIATING A PAGE TEMPLATE LEADS TO INCONSISTENT ACCESS CONTROL SETTINGS ON THE TARGET PAGE) was introduced in CF08. With this APAR, access control settings applied to a page template are consistently copied onto the target page. This means that all access rights assigned explicitly on a page template are also applied to the created page. If, for example, the All Authenticated Portal Users group is assigned to USER@PageTemplate , then the created page will be visible to every authenticated user, independent of the access control configuration of the parent page. During the installation of the CF the out of the box page templates have also been changed, including those in existing virtual portals, to no longer have explicit role mappings and it is recommended that all customers do the same for custom code templates unless the use case really is to copy that role mapping onto the target page. This is a permanent change in behavior effective in CF08 or later. Go to Creating page templates topic for more information about this behavior. Problem: Non-English characters are not supported when exporting a Site/Section template from Site Builder. When importing Site or Section templates into the Site Builder application, you may encounter an error that the template PAA file could not be imported. This could be due to using non-English characters in the Site/Section template PAA import object file name. You will see the following messages on the site builder interface: \"Could not import the template. The solution installer import of the PAA file failed. Review the server logs for more information.\" Solution: Use only English characters in the PAA file name. Problem: If local hostname resolution is not configured properly, the applyCF command may fail with an error like this: C:\\IBM\\WebSphere\\PortalServer\\theme\\wp.setup.themedev\\config\\includes\\wp.setup.themedev_cfg.xml:52: Exception found when executing wsadmin: jacl C:/IBM/WebSphere/ConfigEngine/lib/wkplc.misc.jar;C:/IBM/WebSphere/AppServer/deploytool/itp/batchboot.jar; C:/IBM/WebSphere/AppServer/deploytool/itp/batch2.jar;C:/IBM/WebSphere/PortalServer/base/wp.base/shared/app/wp.base.jar; C:/IBM/WebSphere/PortalServer/shared/app/wp.base.jar 'HCL Portal and HCL Web Content Manager(cells/winwab09Cell/nodes/winwab09Node/servers/HCL Portal and HCL Web Content Manager|server.xml#Server_1452022426983)' Ear File C:/IBM/WebSphere/PortalServer/theme/wp.setup.themedev/installedApps/ThemeDevAssets.ear WASX7015E: Exception running command: \"source \"C:/IBM/WebSphere/wp_profile/ConfigEngine/config/work/was/curJaclScript.jacl\"\"; exception information: com.ibm.websphere.management.filetransfer.client.TransferFailedException java.io.FileNotFoundException: java.io.FileNotFoundException: C:\\IBM\\WebSphere\\PortalServer\\theme\\wp.setup.themedev\\installedApps\\ThemeDevAssets.ear (Access is denied) Solution: This indicates a SOAP issue on the Web server where the hostname does not resolve as expected. \ufeffThe solution is to make sure that all host names of the machine are associated with the loopback in the hosts file. Edit the following file. For Linux, AIX, Solaris, the hosts file is: /etc/hosts For Windows, the hosts file is: %SystemRoot%\\System32\\drivers\\etc\\hosts Add a line similar to the following, substituting your actual machine name where indicated like: 127.0.0.1 yourhostname yourhostname.yourdomain localhost localhost.localdomain If a line for localhost already exists, you can add your hostname to this existing line. To update the hosts table on IBM i, run the cfgtcp command and choose the option Work with TCP/IP host table entries. Problem: After the CF is applied, warning messages may be seen in the SystemOut.log similar to: [10/5/15 8:00:00:000 EDT] 0000000a AbstractReque W com.ibm.wps.resolver.resource.AbstractRequestDispatcherFactory matchesWebAppDefault(aResource) Servlet context [/...] does not specify a blackwhite list when accessing resource [...], falling back to the default [[(null), (WEB-INF/.*)]]. Applications can define a custom list by adding the keys [com.ibm.portal.resource.whitelist] and [com.ibm.portal.resource.blacklist] to their web.xml deployment descriptor. There might be many of these warning messages which could cause a significant performance issue. * Solution: HCL Portal Version 8.5 CF08 (or later) contained a security fix (PI47714 / CVE-2014-8912), which requires specification of black and white lists for custom themes and portlets in certain usage scenarios involving the 'res' data source. You must redeploy your custom theme for these changes to take effect. Details on the action required for the custom code mentioned in these messages can be found in the HCL Software Support page. Problem: When following steps to modify site URLs for the Search Engine Optimization (SEO) workflow some portlets and labels may not be available in clustered environments. For example, you cannot perform the Change the JSP components in the Web Resources v70 Library step. Solution: If you do not have a web server, you must resynchronize the nodes and restart the cluster before you can change the JSP components in the Web Resources library. Problem: There may be a performance issue seen (in EditLive) when using Java 1.8 Update 60 / Internet Explorer. Solution: Oracle and Ephox have acknowledged this issue and are documenting the following link on their support site: https://ephox.zendesk.com/entries/96347398-Java-1-8-u60-Internet-Explorer-Issue . Note: The Ephox (EditLive) Java based Rich Text Editor has been deprecated as of HCL Portal 8.5 CF11 and replaced by Textbox.IO. HCL Portal 9.5 requires a minimum of CF17 to offer Textbox.io. The Ephox (EditLive) feature is only available in HCL Portal 9.5 if you explicitly enable it. Problem: Error messages can be seen in the SystemOut.log after rollback regarding ManagedRules feature updates. These features would no longer be available after the rollback to a level earlier than CF08. The following error example may be seen in the log: java.lang.RuntimeException: java.lang.ClassNotFoundException: com.aptrix.pluto.pzn.Segment at com.aptrix.identity.IdentityReference.getTypeClass(IdentityReference.java:190) Solution: These logging errors are expected if content was created against a Portal feature at an updated CF level and a rollback occurs to a level that does not support it. The logging exceptions could be removed by running the following two ConfigEngine tasks: ./ConfigEngine.sh drop-wcm-recents-and-favorites-tables ./ConfigEngine.sh create-wcm-recents-and-favorites-tables Problem: Starting with HCL Portal Version 8.5 Cumulative Fix 5, a new check has been added to the XML configuration interface. When the XML configuration interface processes update requests, now all locale identifiers are checked if they represent a locale available on the system. If this is not the case, then the update request fails and the XML configuration interface returns with an error. For example, language-dependent strings are marked with a locale: {code:} (localedata locale=\"en\") (title)Home(/title) (/localedata){code} Here, for en which stands for the English locale, a title is defined. For other locales, other strings can be defined. Now, if the attribute locale contains an empty value or an identifier of a locale which does not exist on the system, then the file cannot be imported. As on levels prior to HCL Portal Version 8.5 Cumulative Fix 5, this check has not been performed, XML files exported from Portal systems can lead to errors when trying to import them on a HCL Portal Version 8.5 system with at least Cumulative Fix 5. Even HCL Portal systems migrated or upgraded to at least HCL Portal Version 8.5 Cumulative Fix 5 can contain configuration data with invalid locales. Exporting such data with the XML configuration interface is possible without problem. However, trying to import this data can lead to the error described above. * Solution: To fix this problem you can remove the XML element localedata with its child elements or you can change the locale attribute to an existing locale identifier. Problem: For IBM i only: May have the following error when running applyCF.sh when Portal databases have been transferred to IBM i DB2 using type 4 driver: [importNodeTypes] SEVERE: RT0022E: Failed to initialize pool with minimum number of free connections [importNodeTypes] com.ibm.db2.jdbc.app.DB2SQLSyntaxErrorException: Relational database \"hostname\" not in relational database directory. Solution: Run the following steps then rerun applyCF.sh : Start a 5250 session on the database machine. Type the IBM i command WRKRDBDIRE to display the Relational Database Directory Entry for Location *LOCAL and make a note of the value displayed. Sign off from the 5250 session. Start a 5250 session on the machine where HCL Portal is installed. Create a Relational Database Directory Entry on the system where HCL Portal is installed for the database system using IBM i command WRKRDBDIRE . Add an entry with the following values: Relational database: The relational database. Use the value noted from the prior step. Relational database alias: The hostname. Use the short TCP/IP hostname of the database system. Remote location: The domain qualified hostname. Use the full TCP/IP hostname of the database system. Type: IP Port number or service name: DRDA Remote authentication method: Preferred method: ENCRYPTED Allow lower authentication: ALWLOWER Problem: The Live Repository will not show any available packages to be updated when selecting the IIM Preferences checkbox Search service repositories during installation and updates. Solution: IBM Installation Manager (IIM) should be updated to the latest level, at least IIM 1.8, for the packages to be displayed. Problem: The applyCF.bat|sh task may fail with an error like the following: action-clear-was-caches: [echo] /usr/IBM/WebSphere/AppServer/deploytool/scripts/install/ejbdeploy-clear-cache.sh --- Exception Thrown --- /usr/IBM/WebSphere/PortalServer/installer/wp.update/config/includes/cumulative_fix.xml:302: The directory you specified does not exist. Solution: Portal Server requires the optional WebSphere Application Server EJBDeploy tool, and the above error will occur if this tool is not installed. To resolve the error, use IBM Installation Manager to modify your copy of WebSphere Application Server and add the feature named EJBDeploy tool for pre-EJB 3.0 modules. Problem: The IBM Installation Manager GUI may hang or crash on Red Hat Enterprise Linux v6.6 during the Portal update process. Solution: There are potentially two issues at work. The first is an eclipse bug caused by an infinite loop in code that tries to enumerate printers. This first issue can be resolved by updating your Installation Manager client to v1.8 or later. If updating your client is not a viable option at the moment, you can alternatively work around the problem by adding the following line to the /opt/IBM/InstallationManager/eclipse/IBMIM.ini file: -Dorg.eclipse.swt.internal.gtk.disablePrinting The second issue is caused by a different eclipse bug, related to a mismatch between the GTK version and the cairo library. The resolution is to update the cairo libraries. Problem: Starting Portal Farm node may result in Error 500 when accessing Portal. Solution: Go and log in to HCL Software Support page to find related information about this issue. Problem: If you do a database transfer to z/OS DB2 after installing HCL Portal 8.5 GA and before updating to the current CF, the schema name used for JCR indices will be the config user name instead of the designated schema name, resulting in potential duplicate entries if more than one portal uses the same z/OS DB2. The schema name is supposed to be sufficient for uniquely configuring multiple Portals to the same z/OS DB2 and it is very possible that the same config user could be used for both Portals. Solution: Apply HCL Portal 8.5 CF01 or later prior to doing a database transfer to z/OS DB2. Problem: After installing and rolling back the Cumulative Fix, you may observe error messages similar to the following in the Installation Manager if you subsequently uninstall HCL Portal 8.5: Basedir /usr/IBM/WebSphere/wp_profile does not exist Basedir /usr/IBM/WebSphere/wp_profile does not exist org.apache.tools.ant.Project.setBaseDir(Project.java:844) org.apache.tools.ant.Project.setBasedir(Project.java:829) Solution: The product will be successfully uninstalled despite these messages, so you can safely choose to ignore them. The errors will be avoided if you uninstall HCL Portal 8.5 without first rolling back the Cumulative Fix. Problem: IBM Installation Manager version 1.7.1 crashes with JVM Error when running HCL Portal rollback in GUI Mode. Solution: Upgrade Installation Manager to version 1.7.3 or later and retry the rollback. Please see the following documentation for more details. Problem: After installing or rolling back the cumulative fix, you may observe error messages similar to the following in the Installation Manager log file: \"Installation Manager cannot remove feature Portal Server Profile during the Update or Rollback.\" Solution: These messages do not indicate a problem. To prevent a configuration error, you are prevented from changing your feature selections when performing an update. If you want to add or drop a portal, you must select the Modify function of Installation Manager instead. Generated by XML WebHelp","title":"Known Issues for HCL Portal 8.5 / 9.0 / 9.5 Combined CF17"},{"location":"overview/ccf_95_remote_search/","text":"Cumulative fix instructions: Remote search | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Cumulative fix instructions: Remote search | HCL Digital Experience Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. About Version 8.5 Cumulative Fixes This cumulative fix can only be applied to an existing functional version of HCL Portal Version 8.5 remote search or document conversion services (DCS) server, with or without a previous cumulative fix applied. Overview If you have set up a remote search server or document conversion server for use with Portal Version 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. (Likewise, when you roll back a fix from the portal server, you should roll back the corresponding fix from the remote server.) There are two ways of doing this, depending on how you installed the server originally. * If you originally installed the remote service using manual steps, then you must use manual steps to upgrade it. Update the application on the remote search server by copying updated files from the primary portal server and redeploying them. Refer to the Updating remote search by using manual steps topic for details on how to set up the application. What's new: For a list of the Fixes which have gone into each CF, visit Combined Cumulative Fix Strategy for more information. Before you begin Space Requirements: Ensure that enough disk space is available in the following directories: * All platforms: 250 MB in the download directory to download the cumulative fix, 1 MB in the installation directory, and 75 MB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update.Note: If you configured a user or group other than wpsadmin for the security role mapping for the PSEStandalone application, ensure that you add the property portalAdminUser=<username> replacing <username> with your username e.g. wpsbind in the <searchProfile>/ConfigEngine/properties/wkplc.properties file before the update.If you missed this configuration step, you can still manually re-add the user or groups after the update. Best Practices: Go to the HCL Software Support page to read the Portal Upgrade Best Practices. Backing up the Installation Manager data: Backup the contents of the IBM Installation Manager data directory on the server you are upgrading in the event you lose connection during the upgrade, as this could corrupt the data directory. The default locations of these directories are: * Windows: C:\\ProgramData\\IBM\\InstallationManager * Linux/UNIX root users: /var/ibm/InstallationManager * Linux/UNIX non-root users: /home/(user id)/var/ibm/InstallationManager * IBM i: Installation location: /QIBM/ProdData/InstallationManager * IBM i: Agent data location: /QIBM/UserData/InstallationManager Known Issues: Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 8.5 CF releases. Review supported hardware/software requirements: For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the (supported hardware and software requirements external link) for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server. Check fixes installed on your system: All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information. Download the cumulative fix: If you are installing the cumulative fix using a live repository, then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Download the latest zip file that corresponds to the installation on your system. Go to the HCL Software Support page and download the HCL Portal Remote Search CF file 8.5-WP-RemoteSearch-CFPInnnnn-CFnn.zip. 2. Create a directory and extract the downloaded zip file into this directory. Inside the zip file are a readme file, sample response files, and the actual cumulative fix file itself. The cumulative fix file is named as follows, where nn represents the CF number associated with this cumulative fix: WP8500CFnn_Remote.zip. 3. Create a sub-directory and extract theWP8500CFnn_Remote.zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update. Steps for installing the cumulative fix There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use silent mode installation Choose one method that is available for your system and follow the detailed steps for that option. Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Launch the IBM Installation Manager that was used to install HCL Portal Remote Search Version 8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal Remote Search. If you are running an external web server, restart it now. Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Launch the IBM Installation Manager that was used to install HCL Portal Remote Search Version 8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click Apply. Select Update and follow the prompts to update HCL Portal Remote Search. If you are running an external web server, restart it now. Use a command line (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools 4. Run the following command to launch the installation program of IBM Installation Manager. NOTE: The command is shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_remotesearch_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_remotesearch_root> -acceptLicense If you are running an external web server, restart it now. Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Go to the HCL Software Support page for detailed instructions for recording an IBM Installation Manager response file. Note: The feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is: features='main.ce,main.rs.install,main.dcs.install,main.rs.deploy,main.dcs.deploy' If the server you are applying the fix to is configured only as a remote search server, then you should remove main.dcs.deploy from this list. * Example (Remote Search server only): ``` features='main.ce,main.rs.install,main.dcs.install,main.rs.deploy' ``` * Example (Document Conversion server only): ``` features='main.ce,main.rs.install,main.dcs.install,main.dcs.deploy' ``` Run the following command to install in silent mode: imcl -acceptLicense -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress If you are running an external web server, restart it now. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools * IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools 5. Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Complete the following steps to add the repositories: Enter P to go to the Preferences menu. Enter 1 to go to the Repositories menu. Enter D to add repositories. Type the path for your HCL Portal Remote Search Version 8.5 CF repository file. Enter A to apply your repositories and return to the Preferences menu. Enter R to return to the Main menu. Select Update and follow the prompts to update HCL Portal. If you are running an external web server, restart it now. Reminder: Known IssuesGo to Known Issues in this topic section to be aware of any known issues for HCL Portal CF releases. Steps for rolling back the cumulative fix NOTE: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line rollback * Use silent mode rollback * Use console mode rollback Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Use a Graphical User Interface to roll back (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. For Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools Run the following command to launch the installation program of IBM Installation Manager: NOTE: The command is shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -installationDirectory <portal_remotesearch_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -installationDirectory <portal_remotesearch_root> If you are running an external web server, restart it now. Use silent mode to roll back (available on Windows, Linux, Unix, and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory. * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` * IBM i: ``` serverStatus -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools * IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools 5. Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. 6. Run the following command to roll back in silent mode: imcl -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress If you are running an external web server, restart it now. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory. * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` * IBM i: ``` serverStatus -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools * IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools 5. Run the command to start the IBM Installation Manager in console mode: * Unix/Linux: ./imcl -c * Windows: imcl.exe -c * IBM i: ./imcl -c 6. Select Roll back and follow the prompts to roll back HCL Portal Remote Search. 7. If you are running an external web server, restart it now. On this page* About Version 8.5 Cumulative Fixes * Before you begin * Steps for installing the cumulative fix * Steps for rolling back the cumulative fix Generated by XML WebHelp","title":"Ccf 95 remote search"},{"location":"overview/ccf_95_remote_search/#cumulative-fix-instructions-remote-search-hcl-digital-experience","text":"Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix.","title":"Cumulative fix instructions: Remote search | HCL Digital Experience"},{"location":"overview/ccf_95_remote_search/#about-version-85-cumulative-fixes","text":"This cumulative fix can only be applied to an existing functional version of HCL Portal Version 8.5 remote search or document conversion services (DCS) server, with or without a previous cumulative fix applied. Overview If you have set up a remote search server or document conversion server for use with Portal Version 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. (Likewise, when you roll back a fix from the portal server, you should roll back the corresponding fix from the remote server.) There are two ways of doing this, depending on how you installed the server originally. * If you originally installed the remote service using manual steps, then you must use manual steps to upgrade it. Update the application on the remote search server by copying updated files from the primary portal server and redeploying them. Refer to the Updating remote search by using manual steps topic for details on how to set up the application. What's new: For a list of the Fixes which have gone into each CF, visit Combined Cumulative Fix Strategy for more information.","title":"About Version 8.5 Cumulative Fixes"},{"location":"overview/ccf_95_remote_search/#before-you-begin","text":"Space Requirements: Ensure that enough disk space is available in the following directories: * All platforms: 250 MB in the download directory to download the cumulative fix, 1 MB in the installation directory, and 75 MB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update.Note: If you configured a user or group other than wpsadmin for the security role mapping for the PSEStandalone application, ensure that you add the property portalAdminUser=<username> replacing <username> with your username e.g. wpsbind in the <searchProfile>/ConfigEngine/properties/wkplc.properties file before the update.If you missed this configuration step, you can still manually re-add the user or groups after the update. Best Practices: Go to the HCL Software Support page to read the Portal Upgrade Best Practices. Backing up the Installation Manager data: Backup the contents of the IBM Installation Manager data directory on the server you are upgrading in the event you lose connection during the upgrade, as this could corrupt the data directory. The default locations of these directories are: * Windows: C:\\ProgramData\\IBM\\InstallationManager * Linux/UNIX root users: /var/ibm/InstallationManager * Linux/UNIX non-root users: /home/(user id)/var/ibm/InstallationManager * IBM i: Installation location: /QIBM/ProdData/InstallationManager * IBM i: Agent data location: /QIBM/UserData/InstallationManager Known Issues: Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 8.5 CF releases. Review supported hardware/software requirements: For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the (supported hardware and software requirements external link) for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server. Check fixes installed on your system: All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information. Download the cumulative fix: If you are installing the cumulative fix using a live repository, then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Download the latest zip file that corresponds to the installation on your system. Go to the HCL Software Support page and download the HCL Portal Remote Search CF file 8.5-WP-RemoteSearch-CFPInnnnn-CFnn.zip. 2. Create a directory and extract the downloaded zip file into this directory. Inside the zip file are a readme file, sample response files, and the actual cumulative fix file itself. The cumulative fix file is named as follows, where nn represents the CF number associated with this cumulative fix: WP8500CFnn_Remote.zip. 3. Create a sub-directory and extract theWP8500CFnn_Remote.zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update.","title":"Before you begin"},{"location":"overview/ccf_95_remote_search/#steps-for-installing-the-cumulative-fix","text":"There are several different methods to install the cumulative fix, and they are: * Use a Graphical User Interface (GUI) * Use a live repository via the Graphical User Interface * Use a command line * Use silent mode installation * Use silent mode installation Choose one method that is available for your system and follow the detailed steps for that option. Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Launch the IBM Installation Manager that was used to install HCL Portal Remote Search Version 8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal Remote Search. If you are running an external web server, restart it now. Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Launch the IBM Installation Manager that was used to install HCL Portal Remote Search Version 8.5. Using Installation Manager, click File > Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click Apply. Select Update and follow the prompts to update HCL Portal Remote Search. If you are running an external web server, restart it now. Use a command line (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools 4. Run the following command to launch the installation program of IBM Installation Manager. NOTE: The command is shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_remotesearch_root> -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -repositories <fullpath/to/repository.config> -installationDirectory <portal_remotesearch_root> -acceptLicense If you are running an external web server, restart it now. Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Go to the HCL Software Support page for detailed instructions for recording an IBM Installation Manager response file. Note: The feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is: features='main.ce,main.rs.install,main.dcs.install,main.rs.deploy,main.dcs.deploy' If the server you are applying the fix to is configured only as a remote search server, then you should remove main.dcs.deploy from this list. * Example (Remote Search server only): ``` features='main.ce,main.rs.install,main.dcs.install,main.rs.deploy' ``` * Example (Document Conversion server only): ``` features='main.ce,main.rs.install,main.dcs.install,main.dcs.deploy' ``` Run the following command to install in silent mode: imcl -acceptLicense -input <Full_path_to_your_response_file> -log <Full_Path_to_a_log_file> -showProgress If you are running an external web server, restart it now. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools * IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools 5. Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c Windows: imcl.exe -c IBM i: ./imcl -c Complete the following steps to add the repositories: Enter P to go to the Preferences menu. Enter 1 to go to the Repositories menu. Enter D to add repositories. Type the path for your HCL Portal Remote Search Version 8.5 CF repository file. Enter A to apply your repositories and return to the Preferences menu. Enter R to return to the Main menu. Select Update and follow the prompts to update HCL Portal. If you are running an external web server, restart it now. Reminder: Known IssuesGo to Known Issues in this topic section to be aware of any known issues for HCL Portal CF releases.","title":"Steps for installing the cumulative fix"},{"location":"overview/ccf_95_remote_search/#steps-for-rolling","text":"back the cumulative fix NOTE: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line rollback * Use silent mode rollback * Use console mode rollback Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Use a Graphical User Interface to roll back (available on Windows, Linux, and Unix operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory: * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. For Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools Run the following command to launch the installation program of IBM Installation Manager: NOTE: The command is shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -installationDirectory <portal_remotesearch_root> Windows: imcl.exe rollback com.ibm.websphere.PORTAL.REMOTESEARCH.v85 -installationDirectory <portal_remotesearch_root> If you are running an external web server, restart it now. Use silent mode to roll back (available on Windows, Linux, Unix, and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory. * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` * IBM i: ``` serverStatus -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools * IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools 5. Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. 6. Run the following command to roll back in silent mode: imcl -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress If you are running an external web server, restart it now. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems): 1. If you are running an external web server such as IBM HTTP server, stop the web server. 2. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (prs_profile)/bin directory. * Unix/Linux: ``` ./serverStatus.sh -all ``` * Windows: ``` serverStatus.bat -all ``` * IBM i: ``` serverStatus -all ``` For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/prs_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools * Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools * IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools 5. Run the command to start the IBM Installation Manager in console mode: * Unix/Linux: ./imcl -c * Windows: imcl.exe -c * IBM i: ./imcl -c 6. Select Roll back and follow the prompts to roll back HCL Portal Remote Search. 7. If you are running an external web server, restart it now. On this page* About Version 8.5 Cumulative Fixes * Before you begin * Steps for installing the cumulative fix * Steps for rolling back the cumulative fix Generated by XML WebHelp","title":"Steps for rolling"},{"location":"overview/ccf_95_standalone/","text":"Cumulative fix instructions: Stand-alone | HCL Digital Experience 9.5 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Cumulative fix instructions: Stand-alone | HCL Digital Experience 9.5 Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Before you begin Note: Unless you are migrating from a previous release or plan to add this node to an existing cluster, you must create your Portal profile before applying the cumulative fix. If you did not do this during the initial installation, you can use the Configuration Wizard to do so now. Portal Version 8.5 CF12 or later introduces support for JDK8. However, if you plan to use JDK 8 with your profile, you must first create the profile using JDK 7 and then upgrade to JDK 8 after applying the cumulative fix. Note: In Portal Version 8.5 CF12 or later, the blacklist settings have become more restrictive. For inquiries, go to HCL Software Support page. Space Requirements: Ensure that enough disk space is available in the following directories: * For all platforms: 2.0 GB in the download directory to download the cumulative fix, 1.5 GB in Portal_Install_Root , 1 GB temporary disk space in (wp_profile_root) , and 1.66 GB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update. * For Solaris: It is recommended that you allocate swap space equal to at least twice your physical RAM to avoid memory errors during the configuration of this cumulative fix. Best Practices Go to the HCL Software Support page for Portal Upgrade Best Practices. Syndicator/Subscriber Information It is recommended that servers utilizing syndication have associated syndicators and subscribers disabled prior to installing the cumulative fixpack. Otherwise syndication updates that run during install may clash with install modifications and can cause the CF update to fail. Syndicators and subscribers can be disabled by editing them in the syndication administration portlet. Go to the Syndicators and Subscribers topic pages in the HCL Digital Experience Version 8.5 product documentation for more information. Syndication should then be re-enabled after the update is complete. Alternatively, the following ConfigEngine tasks have also been integrated into CF09 or later to globally disable and enable syndication (These tasks can be used in place of the manual updates linked above): * ``` (wp_profile root)/ConfigEngine/ConfigEngine.sh|.bat disable-syndication-auto-scheduler * ``` (wp_profile root)/ConfigEngine/ConfigEngine.sh|.bat enable-syndication-auto-scheduler Search Crawler Information It is recommended that any search crawlers are disabled before applying the CF. If a CF is applied at the same time the crawler is running, the search collection may be corrupted. The search crawler should be restarted after the CF update is complete. Take a complete backup of the Portal environment Before performing a CF upgrade, it is strongly recommended that you perform a complete backup of the Portal environment, including IBM Installation Manager. See Backup and Restore topic for guidance on how to do a complete backup of the entire Portal environment. Known Issues Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 9.5 CF releases. Review supported hardware/software requirements For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the Supported Hardware and Software Requirements article for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server. Note: Ensure that the optional WebSphere Application Server feature \"EJBDeploy tool for pre-EJB 3.0 modules\" is installed. Check fixes installed on your system All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information. Ensure wkplc.properties files are correct The HCL Portal upgrade will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. Edit the (wp_profile root)/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=(the hostname of your WAS instance) WasSoapPort=(the soap port of your WAS instance) WasUserid=(your WAS admin user) WasPassword=(your WAS admin pwd) PortalAdminId=(your Portal Admin ID) PortalAdminPwd=(your Portal Admin password) WpsHostName=(Your Portal hostname) WpsHostPort=(The port you use to access Portal) WpsContextRoot=(your Portal context root) CwUserPwd=xxxxxx (your Config wizard password) HCL DX 9.5 CF19 and higher Edit the (wp_profile root)/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=(your database user password) community.DbPassword=(your database user password) customization.DbPassword=(your database user password) jcr.DbPassword=(your database user password) likeminds.DbPassword=(your database user password) feedback.DbPassword=(your database user password) Edit the (wp_profile root)/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=(your Portal hostname) XmlAccessPort=(the port you use to access Portal) Note: If your server is configured with database runtime users, for example, feedback.DbRuntimeUser=(your feedback database runtime user) , ensure to set their password values correctly as well, for example, in feedback.DbRuntimePassword=(your feedback database runtime user password) . Unix, Linux, Windows, and IBM i: The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false Multiple profile considerations Verify that all of your profiles are at the same level before starting the upgrade or rollback. All profiles that share the same Portal installation directory (multiple profile option) must be manually upgraded after the IBM Installation Manager update completes. See the Additional configuration steps for details. Non-root considerations In Unix/Linux environments, you must install the cumulative fix as the same user which you used to install HCL Portal originally. This could be either root or a non-root user. If you need to use a non-root user, ensure the following conditions are met: * If you are installing as a non-root user on Unix or Linux, the umask setting for your login session must be set to 0022 or better. ( umask is a setting that controls what file permissions are set for newly created files and directories. A value of 0022 correspond to permission settings of (rwxr-xr-x) .) If the umask is not set appropriately by default, you must set it when you start Installation Manager or when you open a command-line utility to run Installation Manager commands * The non-root user has a ulimit - n setting of at least 18192 . This must be a number and not unlimited . * The non-root user owns the AppServer, PortalServer, ConfigEngine, and Portal profile directories and has read/write access to all files in these directories. Permission settings of 755 (rwxr-xr-x) are sufficient. * Do not use sudo or su to install the fix pack. Either use root explicitly or use a non-root user that meets the above conditions. To open a command-line utility to run Installation Manager commands: 1. Open a command line window. 2. Run this command to check your current umask setting: umask If necessary, run this command to set the umask: umask 0022 Anti-virus and file indexing software considerations (Windows only) As part of the CF upgrade process, new files will be created in the WebSphere installation directory, as well as the user's temp directory. Anti-viruses and file indexing software (like Google Desktop) have been known to lock newly created files as they are being scanned, which can interfere with the upgrade process. We recommend to exclude the WebSphere installation directory and the user's temp directory from being scanned by this software during the upgrade. Or you can stop / disable these tools for the duration of the upgrade, and re-enable them after the upgrade completes. Special note for customers using WAS 8.5.5.14 Support for WebSphere Application Server v8.5.5.14 will be added in Portal Cumulative Fix 16. If you need to apply Portal Cumulative Fix 15 or earlier to a WAS v8.5.5.14 installation, you will need to perform an additional manual step during the upgrade. After running Installation Manager to install the new Portal code but before running the applyCF.sh or applyCF.bat command to update the Portal profile, perform these steps: 1. Open a command Window and switch to the ConfigEngine home directory. By default this is: * Unix/Linux: /opt/IBM/WebSphere/ConfigEngine * Windows: C:\\IBM\\WebSphere\\ConfigEngine * IBM i: /QIBM/ProdData/WebSphere/ConfigEngine 2. Make a backup copy of the ConfigEngine script. This file is named ConfigEngine.bat for Windows and ConfigEngine.sh for all other platforms. 3. Make sure your user has write permissions for the script file and open it in a text editor. 4. Look for the text EJBDEPLOY_JAVA_HOME in the script. 5. If you do not find it, no further action is necessary and you can continue with the installation. If you do find it, delete every line that contains the text EJBDEPLOY_JAVA_HOME anywhere in the line. (There should be 3 such lines in the .sh script and 2 lines in the .bat script.) 6. Save the file. You may now continue with the installation of the Portal CF. Download the cumulative fix If you are installing the cumulative fix using a live repository (only possible with CFs prior to CF17), then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Go and log in to HCL Software Support and download the latest zip file that corresponds to the installation on your system. 2. Create a directory and extract the zip file(s) into this directory. Inside the zip file is a readme file, sample response files (Server and Express only), and the actual cumulative fix file itself. 3. Create a sub-directory and extract the appropriate zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update. Steps for installing the cumulative fix There are several different methods to install the cumulative fix. Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Additional configuration steps. Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Using Installation Manager, click File then Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps. Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Using Installation Manager, click File then Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click apply. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps. Use a command line (available on Windows, Linux, and Unix operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the ( wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are installing the cumulative fix on HCL Portal Express, skip to step Otherwise, run the following command to launch the installation program of IBM Installation Manager. Do note, the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -installationDirectory(portal_server_root) -acceptLicense For Windows: imcl.exe install com.hcl.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense For HCL Portal Express only (IBM i must use silent or console mode method), run the following command to launch the installation program from the eclipse/tools sub-directory of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl install com.hcl.websphere.PORTAL.EXPRESS.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense After installation completes, proceed with the Additional configuration steps. Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the ( wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Visit the HCL Software Support page for detailed instructions on the procedure for recording an IBM Installation Manager response. Note that the feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is features='ce.install,portal.binary,portal.profile' If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or creating multiple profiles, or you originally installed HCL Portal as a binary install ), then you should remove the 'portal.profile' feature from this list features='ce.install,portal.binary' Run the following command to install in silent mode: imcl -acceptLicense -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress After installation completes, proceed with the Additional configuration steps. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the ( wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode: For Unix/Linux: ./imcl -c For Windows: imcl.exe -c For IBM i: ./imcl -c Complete the following steps to add the repositories. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps. To add the repositories for Step 6: 1. Enter P to go to the Preferences menu. 2. Enter 1 to go to the Repositories menu. 3. Enter D to add repositories. 4. Type the path for your HCL Portal Version 8.5 CF repository file. 5. Enter A to apply your repositories and return to the Preferences menu. 6. Enter R to return to the Main menu. Additional configuration steps If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal or plan to add this node to an existing cluster), no additional configuration steps are necessary and you can continue with the Post installation steps. If you are in the process of a migration, you will need to follow these additional configuration steps after running upgrade-profile for your migrated environment.Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Linux, Unix, Windows or IBM i Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All profiles that share the same Portal installation directory (multiple profile option) must be at the same level for future upgrades to be applied. Note: If a remote search server is used within this environment, it should be started before running the following commands. Note: If a WAS update has occurred prior to running the CF update, it is recommended to run the following task: (profile_root)/bin/osgiCfgInit.sh|bat Note: Optional:To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Apply CF Ensure the HCL Portal server is stopped on the profile you intend to upgrade. Execute the following command from within the path of the profile to configure. If you are installing the CF on an empty portal, see Special Considerations below before running applyCF . If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. Unix/Linux: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) * Windows: (profile_root)\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) * IBM i: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Note: If applying the CF19 update to HCL DX 9.5, a DX Connect servlet is installed as a method to manage Continuous Integration and Continuous Delivery processes . If you supply the Config Wizard password ( CwUserPwd=xxxxxx ) during CF191 or higher installation, the DXConnect servlet will be started immediately, a new Resource Environment Provider will be added to the configuration wizard profile along with 2 name/value pairs as shown below in the DXC_ConfigSettings Resource Environment Provider: DXCONNECT_MAX_MEMORY_SIZE_MB The default value is 40 . DXCONNECT_MAX_FILE_SIZE_MB The default value is 50 . If the Config Wizard password ( CwUserPwd=xxxxxx ) is NOT provided at applyCF time, no resource environment provider is created. Note: The DX Connect servlet will not operate on HCL DX deployments prior to HCL DX 9.5 CF191. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. 1. If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://(myhost):(port)/wps/config -in (Portal home)/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the isEmptyPortal property when performing this step. If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing: Unix/Linux: (profile_root)/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=(password) -DWasPassword=(password) Windows: (profile_root)\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=(password) -DWasPassword=(password) IBM i: (profile_root)/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=(password) -DWasPassword=(password) Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux: (profile_root)/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=password -DPortalAdminPwd=password Windows: (profile_root)/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=password -DPortalAdminPwd=password IBM i: (profile_root)/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=password -DPortalAdminPwd=password If you exported custom content in Step 1 above, you can now use XMLAccess to reimport that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user (Portal_admin_user) -password (Portal_admin_password) -url http://(myhost):(port)/wps/config -in result.xml -out importResults.xml Post installation steps If you are running an external web server and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, regenerate the web server plug-in, copy the plugin-cfg.xml file to the plugin directory, then restart the web server. If there is a custom theme that contains a static content WAR and the com.ibm.portal.resource.blacklist and com.ibm.portal.resource.whitelist context parameters have not yet been added to the web.xml file, go to the HCL Software Support page to fix security vulnerability. The changes associated with this can cause custom themes to produce a lot of warning messages in the logs resulting in a significant performance penalty. The custom theme must be redeployed before the changes will take effect. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using HCL Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to installing the cumulative fix. Go to the HCL Software Support page see if the Configuration changes and options introduced in the HCL Web Content Manager 8.5 Combined Cumulative Fixes apply to your environment: If you modified the permissions on the PortalServer home directory tree to install the cumulative fix as non-root, restore the original permissions. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. Unix/Linux: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) Windows: (profile_root)\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) IBM i: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: For MLS use: ConfigEngine.sh|bat action-is-wcm-mls-enabled For SMP, use: ConfigEngine.sh|bat action-is-wcm-smp-enabled If you have set up a remote search server or document conversion server for use with HCL Portal 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. Refer to the HCL Portal 8.5 Combined cumulative fix instructions: remote search for the details of applying a cumulative fix to the remote server. Clear the browser cache. Go to the HCL Software Support page for Recommended Updates for HCL Portal and HCL Web Content Manager Version 8.5 to review and apply any recommended Fixes. Prior to CF07, it was recommended to set the DB2 database configuration parameter dft_queryopt to a value of 2 as this was tested to provide the best balance of query optimization time and query execution time for the SQL produced by the JCR. For CF07 or later, this recommendation has been changed to use a value of 5 in conjunction with the testing and changes made to the JCR and JCR schema. This can be done manually by customers by executing the following SQL against the JCR Domain Database: db2 update db cfg for JCRDBNAME using DFT_QUERYOPT 5 or running the following Config Engine Task: configure-jcr-db2-dft-queryopt Steps for rolling back the cumulative fix Note: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. Note: Versions of Portal prior to CF12 do not support JDK 8. Therefore, if JDK 8 has been enabled in CF12 or later, the managesdk command must be used to switch back to JDK 7 or 7.1 before performing a rollback to CF11 or earlier. Limitations 1. Changing the server context root after upgrading is an unsupported rollback path. To roll back after changing the context root, you must first change the server context root to the values of the previous version. 2. When rolling back a CF install, if you have configured an empty context root you cannot roll back to a CF level that does not support the empty context root capability. For instance, if you have applied CF08 and have configured an empty context root you cannot rollback to CF07. If you have applied CF09 and have configured an empty context root you can roll back to CF08 but you would not be able to roll back if your previous CF level was CF07 or prior. 3. Configuring HCL Portal from a stand-alone environment to a clustered environment after upgrading is an unsupported rollback path. Before you begin rollback 1. The HCL Portal rollback scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. 2. Edit the (wp_profile root)/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: * WasRemoteHostName=(the hostname of your WAS instance) * WasSoapPort=(the soap port of your WAS instance) * WasUserid=(your WAS admin user) * WasPassword=(your WAS admin pwd) * PortalAdminId=(your Portal Admin ID) * PortalAdminPwd=(your Portal Admin password) * WpsHostName=(Your Portal hostname) * WpsHostPort=(The port you use to access Portal) * WpsContextRoot=(your Portal context root) Note: In a Standalone Portal environment, the WasRemoteHostName should be the local hostname and the WasSoapPort should be the soap port of the HCL Portal and HCL Web Content Manager server. 3. Edit the (wp_profile root)/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: * release.DbPassword=(your database user password) * community.DbPassword=(your database user password) * customization.DbPassword=(your database user password) * jcr.DbPassword=(your database user password) * likeminds.DbPassword=(your database user password) * feedback.DbPassword=(your database user password) 4. Edit the (wp_profile root)/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: * XmlAccessHost=(your Portal hostname) * XmlAccessPort=(the port you use to access Portal) Unix, Linux, Windows, and IBM i The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line roll back * Use silent mode roll back * Use console mode roll back Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps. Use a Graphical User Interface to rollback (available on Windows, Linux, and Unix operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (wp_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Select Roll Back on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. After rollback completes, proceed with the Post Rollback Steps. Use a command line to rollback (available on Windows, Linux, and Unix operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are rolling back the cumulative fix on HCL Portal Express, skip to step 5. Otherwise, run the following command to launch the installation program of IBM Installation Manager. The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces: For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory (portal_server_root) For Windows: imcl.exe rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory (portal_server_root) HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program from the eclipse/tools sub-directory of Installation Manager. The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces: For Linux: ./imcl rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory (portal_server_root) For Windows: imcl.exe rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory (portal_server_root) After rollback completes, proceed with the Post Rollback Steps. Use silent mode to rollback (available on Windows, Linux, Unix, and IBM i operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress After rollback completes, proceed with the Post Rollback Steps. Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only : Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c For Windows: imcl.exe -c For IBM i: ./imcl -c Select Roll back and follow the prompts to roll back HCL Portal. After installation completes, proceed with the Post Rollback Steps. Post Rollback Steps Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All profiles that share the same Portal installation directory (multiple profile option) must be at the same level for future upgrades to be applied. The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. If a remote search server is used within this environment, it should be started before running the following commands. 1. Run the following command from within the path of the profile to configure. If you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the isEmptyPortal property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Digital Experience before re-running. * Unix/Linux: ``` (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * Windows: ``` (profile_root)\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * IBM i: ``` (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ``` If you are running an external web server and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, simply regenerate the web server plugin, copy the plugin-cfg.xml file to the plugin directory, then restart the web server. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to rolling back the cumulative fix. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. Unix/Linux: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * Windows: (profile_root)\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * IBM i: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * For MLS, use: ConfigEngine.sh|bat action-is-wcm-mls-enabled * For SMP, use: ConfigEngine.sh|bat action-is-wcm-smp-enabled 6. For rollback to CF03 or earlier level only: If the Brightcove integration was enabled, remove the old Brightcove plugins, then configure HCL Portal to add the new Brightcove plugins. 7. For rollback to CF03 or earlier level only: If using Rich Media Edition, remove the Rich Media Edition plugin, restart the Portal Server, then configure HCL Portal to add the Rich Media Edition plugins. 8. If you have set up a remote search server or document conversion server for use with HCL Portal Version 8.5, then whenever you roll back a cumulative fix to the portal server, you should also roll back the corresponding cumulative fix to the remote server. 9. Clear the browser cache. On this page* Search Crawler Information * Take a complete backup of the Portal environment * Known Issues * Review supported hardware/software requirements * Check fixes installed on your system * Ensure wkplc.properties files are correct * Multiple profile considerations * Non-root considerations * Anti-virus and file indexing software considerations (Windows only) * Special note for customers using WAS 8.5.5.14 * Download the cumulative fix * Steps for installing the cumulative fix * Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) * Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems) * Use a command line (available on Windows, Linux, and Unix operating systems) * Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) * Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) * Additional configuration steps * Post installation steps * Steps for rolling back the cumulative fix * Use a Graphical User Interface to rollback (available on Windows, Linux, and Unix operating systems) * Use a command line to rollback (available on Windows, Linux, and Unix operating systems) * Use silent mode to rollback (available on Windows, Linux, Unix, and IBM i operating systems) * Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) * Post Rollback Steps Generated by XML WebHelp","title":"Ccf 95 standalone"},{"location":"overview/ccf_95_standalone/#cumulative-fix-instructions-stand-alone-hcl-digital-experience-95","text":"Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix.","title":"Cumulative fix instructions: Stand-alone | HCL Digital Experience 9.5"},{"location":"overview/ccf_95_standalone/#before-you-begin","text":"Note: Unless you are migrating from a previous release or plan to add this node to an existing cluster, you must create your Portal profile before applying the cumulative fix. If you did not do this during the initial installation, you can use the Configuration Wizard to do so now. Portal Version 8.5 CF12 or later introduces support for JDK8. However, if you plan to use JDK 8 with your profile, you must first create the profile using JDK 7 and then upgrade to JDK 8 after applying the cumulative fix. Note: In Portal Version 8.5 CF12 or later, the blacklist settings have become more restrictive. For inquiries, go to HCL Software Support page. Space Requirements: Ensure that enough disk space is available in the following directories: * For all platforms: 2.0 GB in the download directory to download the cumulative fix, 1.5 GB in Portal_Install_Root , 1 GB temporary disk space in (wp_profile_root) , and 1.66 GB in the shared data space, which is the directory where Installation Manager temporarily stores downloaded files for use during the update. * For Solaris: It is recommended that you allocate swap space equal to at least twice your physical RAM to avoid memory errors during the configuration of this cumulative fix.","title":"Before you begin"},{"location":"overview/ccf_95_standalone/#best-practices","text":"Go to the HCL Software Support page for Portal Upgrade Best Practices.","title":"Best Practices"},{"location":"overview/ccf_95_standalone/#syndicatorsubscriber-information","text":"It is recommended that servers utilizing syndication have associated syndicators and subscribers disabled prior to installing the cumulative fixpack. Otherwise syndication updates that run during install may clash with install modifications and can cause the CF update to fail. Syndicators and subscribers can be disabled by editing them in the syndication administration portlet. Go to the Syndicators and Subscribers topic pages in the HCL Digital Experience Version 8.5 product documentation for more information. Syndication should then be re-enabled after the update is complete. Alternatively, the following ConfigEngine tasks have also been integrated into CF09 or later to globally disable and enable syndication (These tasks can be used in place of the manual updates linked above): * ``` (wp_profile root)/ConfigEngine/ConfigEngine.sh|.bat disable-syndication-auto-scheduler * ``` (wp_profile root)/ConfigEngine/ConfigEngine.sh|.bat enable-syndication-auto-scheduler","title":"Syndicator/Subscriber Information"},{"location":"overview/ccf_95_standalone/#search-crawler-information","text":"It is recommended that any search crawlers are disabled before applying the CF. If a CF is applied at the same time the crawler is running, the search collection may be corrupted. The search crawler should be restarted after the CF update is complete.","title":"Search Crawler Information"},{"location":"overview/ccf_95_standalone/#take-a-complete-backup-of-the-portal-environment","text":"Before performing a CF upgrade, it is strongly recommended that you perform a complete backup of the Portal environment, including IBM Installation Manager. See Backup and Restore topic for guidance on how to do a complete backup of the entire Portal environment.","title":"Take a complete backup of the Portal environment"},{"location":"overview/ccf_95_standalone/#known-issues","text":"Review the Known issues for combined cumulative fix topic page to be aware of any known issues for the HCL Portal Version 9.5 CF releases.","title":"Known Issues"},{"location":"overview/ccf_95_standalone/#review-supported-hardwaresoftware-requirements","text":"For Portal Version 8.5 CF08 or later, the minimum recommended WebSphere Application Server level is at least WAS 8.5.5.6 with the corresponding JDK level applied. Review the Supported Hardware and Software Requirements article for this cumulative fix. If necessary, upgrade all hardware and software before applying this cumulative fix, including interim fixes required for WebSphere Application Server. Note: Ensure that the optional WebSphere Application Server feature \"EJBDeploy tool for pre-EJB 3.0 modules\" is installed.","title":"Review supported hardware/software requirements"},{"location":"overview/ccf_95_standalone/#check-fixes-installed-on-your-system","text":"All temporary or interim fixes on your system must be removed before installing this cumulative fix. Also check whether the fixes installed on your system are included in the list of fixes provided in this cumulative fix. If you have temporary or interim fixes on your system that are not included in this cumulative fix then contact HCL Software Support for an updated version of those fixes or for more information.","title":"Check fixes installed on your system"},{"location":"overview/ccf_95_standalone/#ensure-wkplcproperties-files-are-correct","text":"The HCL Portal upgrade will run several ConfigEngine scripts. These scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. Edit the (wp_profile root)/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: WasRemoteHostName=(the hostname of your WAS instance) WasSoapPort=(the soap port of your WAS instance) WasUserid=(your WAS admin user) WasPassword=(your WAS admin pwd) PortalAdminId=(your Portal Admin ID) PortalAdminPwd=(your Portal Admin password) WpsHostName=(Your Portal hostname) WpsHostPort=(The port you use to access Portal) WpsContextRoot=(your Portal context root) CwUserPwd=xxxxxx (your Config wizard password) HCL DX 9.5 CF19 and higher Edit the (wp_profile root)/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: release.DbPassword=(your database user password) community.DbPassword=(your database user password) customization.DbPassword=(your database user password) jcr.DbPassword=(your database user password) likeminds.DbPassword=(your database user password) feedback.DbPassword=(your database user password) Edit the (wp_profile root)/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: XmlAccessHost=(your Portal hostname) XmlAccessPort=(the port you use to access Portal) Note: If your server is configured with database runtime users, for example, feedback.DbRuntimeUser=(your feedback database runtime user) , ensure to set their password values correctly as well, for example, in feedback.DbRuntimePassword=(your feedback database runtime user password) .","title":"Ensure wkplc.properties files are correct"},{"location":"overview/ccf_95_standalone/#unix-linux-windows-and-ibm-i","text":"The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false","title":"Unix, Linux, Windows, and IBM i:"},{"location":"overview/ccf_95_standalone/#multiple-profile-considerations","text":"Verify that all of your profiles are at the same level before starting the upgrade or rollback. All profiles that share the same Portal installation directory (multiple profile option) must be manually upgraded after the IBM Installation Manager update completes. See the Additional configuration steps for details.","title":"Multiple profile considerations"},{"location":"overview/ccf_95_standalone/#non-root-considerations","text":"In Unix/Linux environments, you must install the cumulative fix as the same user which you used to install HCL Portal originally. This could be either root or a non-root user. If you need to use a non-root user, ensure the following conditions are met: * If you are installing as a non-root user on Unix or Linux, the umask setting for your login session must be set to 0022 or better. ( umask is a setting that controls what file permissions are set for newly created files and directories. A value of 0022 correspond to permission settings of (rwxr-xr-x) .) If the umask is not set appropriately by default, you must set it when you start Installation Manager or when you open a command-line utility to run Installation Manager commands * The non-root user has a ulimit - n setting of at least 18192 . This must be a number and not unlimited . * The non-root user owns the AppServer, PortalServer, ConfigEngine, and Portal profile directories and has read/write access to all files in these directories. Permission settings of 755 (rwxr-xr-x) are sufficient. * Do not use sudo or su to install the fix pack. Either use root explicitly or use a non-root user that meets the above conditions. To open a command-line utility to run Installation Manager commands: 1. Open a command line window. 2. Run this command to check your current umask setting: umask If necessary, run this command to set the umask: umask 0022","title":"Non-root considerations"},{"location":"overview/ccf_95_standalone/#anti-virus-and-file-indexing-software-considerations-windows-only","text":"As part of the CF upgrade process, new files will be created in the WebSphere installation directory, as well as the user's temp directory. Anti-viruses and file indexing software (like Google Desktop) have been known to lock newly created files as they are being scanned, which can interfere with the upgrade process. We recommend to exclude the WebSphere installation directory and the user's temp directory from being scanned by this software during the upgrade. Or you can stop / disable these tools for the duration of the upgrade, and re-enable them after the upgrade completes.","title":"Anti-virus and file indexing software considerations (Windows only)"},{"location":"overview/ccf_95_standalone/#special-note-for-customers-using-was-85514","text":"Support for WebSphere Application Server v8.5.5.14 will be added in Portal Cumulative Fix 16. If you need to apply Portal Cumulative Fix 15 or earlier to a WAS v8.5.5.14 installation, you will need to perform an additional manual step during the upgrade. After running Installation Manager to install the new Portal code but before running the applyCF.sh or applyCF.bat command to update the Portal profile, perform these steps: 1. Open a command Window and switch to the ConfigEngine home directory. By default this is: * Unix/Linux: /opt/IBM/WebSphere/ConfigEngine * Windows: C:\\IBM\\WebSphere\\ConfigEngine * IBM i: /QIBM/ProdData/WebSphere/ConfigEngine 2. Make a backup copy of the ConfigEngine script. This file is named ConfigEngine.bat for Windows and ConfigEngine.sh for all other platforms. 3. Make sure your user has write permissions for the script file and open it in a text editor. 4. Look for the text EJBDEPLOY_JAVA_HOME in the script. 5. If you do not find it, no further action is necessary and you can continue with the installation. If you do find it, delete every line that contains the text EJBDEPLOY_JAVA_HOME anywhere in the line. (There should be 3 such lines in the .sh script and 2 lines in the .bat script.) 6. Save the file. You may now continue with the installation of the Portal CF.","title":"Special note for customers using WAS 8.5.5.14"},{"location":"overview/ccf_95_standalone/#download-the-cumulative-fix","text":"If you are installing the cumulative fix using a live repository (only possible with CFs prior to CF17), then you do not need to download the cumulative fix to your server. If you need to download the cumulative fix, then you can follow these steps. 1. Go and log in to HCL Software Support and download the latest zip file that corresponds to the installation on your system. 2. Create a directory and extract the zip file(s) into this directory. Inside the zip file is a readme file, sample response files (Server and Express only), and the actual cumulative fix file itself. 3. Create a sub-directory and extract the appropriate zip file to this directory. The extraction results in a repository.config file that is used by IBM Installation Manager during the update.","title":"Download the cumulative fix"},{"location":"overview/ccf_95_standalone/#steps-for-installing-the-cumulative-fix","text":"There are several different methods to install the cumulative fix. Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Additional configuration steps.","title":"Steps for installing the cumulative fix"},{"location":"overview/ccf_95_standalone/#use-a-graphical-user-interface-available-on-windows-linux-and-unix-operating","text":"systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Using Installation Manager, click File then Preferences. Go to the Repositories panel and click \"Add Repository\". Navigate to the repository.config file mentioned earlier and select it. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps.","title":"Use a Graphical User Interface (available on Windows, Linux, and Unix operating"},{"location":"overview/ccf_95_standalone/#use-a-live-repository-via-the-graphical-user-interface-available-on-windows","text":"Linux, and Unix operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Using Installation Manager, click File then Preferences. Go to the Repositories panel and click Search service repositories during installation and updates. Click apply. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps.","title":"Use a live repository via the Graphical User Interface (available on Windows,"},{"location":"overview/ccf_95_standalone/#use-a-command-line-available-on-windows-linux-and-unix-operating","text":"systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the ( wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are installing the cumulative fix on HCL Portal Express, skip to step Otherwise, run the following command to launch the installation program of IBM Installation Manager. Do note, the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Unix/Linux: ./imcl install com.ibm.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -installationDirectory(portal_server_root) -acceptLicense For Windows: imcl.exe install com.hcl.websphere.PORTAL.SERVER.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense For HCL Portal Express only (IBM i must use silent or console mode method), run the following command to launch the installation program from the eclipse/tools sub-directory of Installation Manager. Do note that the commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces. For Linux: ./imcl install com.hcl.websphere.PORTAL.EXPRESS.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense For Windows: imcl.exe install com.ibm.websphere.PORTAL.EXPRESS.v85 -repositories (fullpath/to/repository.config) -installationDirectory (portal_server_root) -acceptLicense After installation completes, proceed with the Additional configuration steps.","title":"Use a command line (available on Windows, Linux, and Unix operating"},{"location":"overview/ccf_95_standalone/#use-silent-mode-installation-available-on-windows-linux-unix-and-ibm-i","text":"operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the ( wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. You can also record a response file to use to install the fix in silent mode. Visit the HCL Software Support page for detailed instructions on the procedure for recording an IBM Installation Manager response. Note that the feature set listed in your response file must match the feature set you have installed. You cannot add or remove features during the cumulative fix update. The feature set listed in the sample response file is features='ce.install,portal.binary,portal.profile' If you do not have any profiles on this node (because you are in the process of migration from a previous version of HCL Portal, or creating multiple profiles, or you originally installed HCL Portal as a binary install ), then you should remove the 'portal.profile' feature from this list features='ce.install,portal.binary' Run the following command to install in silent mode: imcl -acceptLicense -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress After installation completes, proceed with the Additional configuration steps.","title":"Use silent mode installation (available on Windows, Linux, Unix, and IBM i"},{"location":"overview/ccf_95_standalone/#use-console-mode-interface-available-on-windows-linux-unix-and-ibm-i-operating","text":"systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the ( wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode: For Unix/Linux: ./imcl -c For Windows: imcl.exe -c For IBM i: ./imcl -c Complete the following steps to add the repositories. Select Update and follow the prompts to update HCL Portal. After installation completes, proceed with the Additional configuration steps. To add the repositories for Step 6: 1. Enter P to go to the Preferences menu. 2. Enter 1 to go to the Repositories menu. 3. Enter D to add repositories. 4. Type the path for your HCL Portal Version 8.5 CF repository file. 5. Enter A to apply your repositories and return to the Preferences menu. 6. Enter R to return to the Main menu.","title":"Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating"},{"location":"overview/ccf_95_standalone/#additional-configuration-steps","text":"If you have any profiles the following configuration steps are mandatory. If you do not have any profiles at this point (because you are in the process of migration from a previous version of HCL Portal or plan to add this node to an existing cluster), no additional configuration steps are necessary and you can continue with the Post installation steps. If you are in the process of a migration, you will need to follow these additional configuration steps after running upgrade-profile for your migrated environment.Note: The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. Linux, Unix, Windows or IBM i Use the following commands to update all profiles. These steps must be repeated for each profile, if multiple profiles exist. All profiles that share the same Portal installation directory (multiple profile option) must be at the same level for future upgrades to be applied. Note: If a remote search server is used within this environment, it should be started before running the following commands. Note: If a WAS update has occurred prior to running the CF update, it is recommended to run the following task: (profile_root)/bin/osgiCfgInit.sh|bat Note: Optional:To skip regeneration of the profile template, add the following flag to the CF update command: ex. applyCF.sh -Dskip.profile.template.update=true If an updated template is needed at a later time, this command can be run to do so at any time: ex. ConfigEngine.sh cf-create-profile-templates Apply CF Ensure the HCL Portal server is stopped on the profile you intend to upgrade. Execute the following command from within the path of the profile to configure. If you are installing the CF on an empty portal, see Special Considerations below before running applyCF . If the applyCF command fails for any reason, check the error logs and correct error conditions before re-running. Unix/Linux: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) * Windows: (profile_root)\\PortalServer\\bin\\applyCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) * IBM i: (profile_root)/PortalServer/bin/applyCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) Note: If applying the CF19 update to HCL DX 9.5, a DX Connect servlet is installed as a method to manage Continuous Integration and Continuous Delivery processes . If you supply the Config Wizard password ( CwUserPwd=xxxxxx ) during CF191 or higher installation, the DXConnect servlet will be started immediately, a new Resource Environment Provider will be added to the configuration wizard profile along with 2 name/value pairs as shown below in the DXC_ConfigSettings Resource Environment Provider: DXCONNECT_MAX_MEMORY_SIZE_MB The default value is 40 . DXCONNECT_MAX_FILE_SIZE_MB The default value is 50 . If the Config Wizard password ( CwUserPwd=xxxxxx ) is NOT provided at applyCF time, no resource environment provider is created. Note: The DX Connect servlet will not operate on HCL DX deployments prior to HCL DX 9.5 CF191. Special Consideration for empty portals If you are installing the CF on an empty portal then extra steps are required to avoid upgrade errors. 1. If you have created any custom content on top of the empty portal, you must first use XMLAccess to export the Portal content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user Portal_admin_user -password Portal_admin_password -url http://(myhost):(port)/wps/config -in (Portal home)/doc/xml-samples/Export.xml -out result.xml Upgrade the portal profile to the new CF level. Because many of the expected artifacts will not exist in an empty portal, you must define the isEmptyPortal property when performing this step. If the applyCF command fails for any reason, check the error logs and correct error conditions before continuing: Unix/Linux: (profile_root)/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=(password) -DWasPassword=(password) Windows: (profile_root)\\PortalServer\\bin\\applyCF.bat -DisEmptyPortal=true -DPortalAdminPwd=(password) -DWasPassword=(password) IBM i: (profile_root)/PortalServer/bin/applyCF.sh -DisEmptyPortal=true -DPortalAdminPwd=(password) -DWasPassword=(password) Following a successful run of the applyCF script, re-run the empty-portal task to remove Portal artifacts that were reintroduced with the CF, as these may cause runtime errors. Unix/Linux: (profile_root)/ConfigEngine/ ./ConfigEngine.sh empty-portal -DWasPassword=password -DPortalAdminPwd=password Windows: (profile_root)/ConfigEngine/ ConfigEngine.bat empty-portal -DWasPassword=password -DPortalAdminPwd=password IBM i: (profile_root)/ConfigEngine/ ConfigEngine.sh empty-portal -DWasPassword=password -DPortalAdminPwd=password If you exported custom content in Step 1 above, you can now use XMLAccess to reimport that content. From the wp_profile_root/PortalServer/bin directory run: xmlaccess.bat/sh -user (Portal_admin_user) -password (Portal_admin_password) -url http://(myhost):(port)/wps/config -in result.xml -out importResults.xml","title":"Additional configuration steps"},{"location":"overview/ccf_95_standalone/#post-installation-steps","text":"If you are running an external web server and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, regenerate the web server plug-in, copy the plugin-cfg.xml file to the plugin directory, then restart the web server. If there is a custom theme that contains a static content WAR and the com.ibm.portal.resource.blacklist and com.ibm.portal.resource.whitelist context parameters have not yet been added to the web.xml file, go to the HCL Software Support page to fix security vulnerability. The changes associated with this can cause custom themes to produce a lot of warning messages in the logs resulting in a significant performance penalty. The custom theme must be redeployed before the changes will take effect. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using HCL Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to installing the cumulative fix. Go to the HCL Software Support page see if the Configuration changes and options introduced in the HCL Web Content Manager 8.5 Combined Cumulative Fixes apply to your environment: If you modified the permissions on the PortalServer home directory tree to install the cumulative fix as non-root, restore the original permissions. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. Unix/Linux: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) Windows: (profile_root)\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) IBM i: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: For MLS use: ConfigEngine.sh|bat action-is-wcm-mls-enabled For SMP, use: ConfigEngine.sh|bat action-is-wcm-smp-enabled If you have set up a remote search server or document conversion server for use with HCL Portal 8.5, then whenever you apply a cumulative fix to the portal server, you should also apply the corresponding cumulative fix to the remote server. Refer to the HCL Portal 8.5 Combined cumulative fix instructions: remote search for the details of applying a cumulative fix to the remote server. Clear the browser cache. Go to the HCL Software Support page for Recommended Updates for HCL Portal and HCL Web Content Manager Version 8.5 to review and apply any recommended Fixes. Prior to CF07, it was recommended to set the DB2 database configuration parameter dft_queryopt to a value of 2 as this was tested to provide the best balance of query optimization time and query execution time for the SQL produced by the JCR. For CF07 or later, this recommendation has been changed to use a value of 5 in conjunction with the testing and changes made to the JCR and JCR schema. This can be done manually by customers by executing the following SQL against the JCR Domain Database: db2 update db cfg for JCRDBNAME using DFT_QUERYOPT 5 or running the following Config Engine Task: configure-jcr-db2-dft-queryopt","title":"Post installation steps"},{"location":"overview/ccf_95_standalone/#steps-for-rolling-back-the-cumulative-fix","text":"Note: The steps in these sections for rolling back the cumulative fix describe how to roll back from a successful update to a previous level. However, rolling back from a failed update does not guarantee return to a dependable state. When an update fails, it is advised that you fix the cause of the failure and try again for a successful update; to return to a previous level, you must depend on a system and database backup and restore. Note: Versions of Portal prior to CF12 do not support JDK 8. Therefore, if JDK 8 has been enabled in CF12 or later, the managesdk command must be used to switch back to JDK 7 or 7.1 before performing a rollback to CF11 or earlier. Limitations 1. Changing the server context root after upgrading is an unsupported rollback path. To roll back after changing the context root, you must first change the server context root to the values of the previous version. 2. When rolling back a CF install, if you have configured an empty context root you cannot roll back to a CF level that does not support the empty context root capability. For instance, if you have applied CF08 and have configured an empty context root you cannot rollback to CF07. If you have applied CF09 and have configured an empty context root you can roll back to CF08 but you would not be able to roll back if your previous CF level was CF07 or prior. 3. Configuring HCL Portal from a stand-alone environment to a clustered environment after upgrading is an unsupported rollback path. Before you begin rollback 1. The HCL Portal rollback scripts depend on the wkplc.properties being up to date and accurate, particularly with the password properties. If you are using multiple profiles, verify that the information in each profile is correct. 2. Edit the (wp_profile root)/ConfigEngine/properties/wkplc.properties file and ensure the following values are set correctly: * WasRemoteHostName=(the hostname of your WAS instance) * WasSoapPort=(the soap port of your WAS instance) * WasUserid=(your WAS admin user) * WasPassword=(your WAS admin pwd) * PortalAdminId=(your Portal Admin ID) * PortalAdminPwd=(your Portal Admin password) * WpsHostName=(Your Portal hostname) * WpsHostPort=(The port you use to access Portal) * WpsContextRoot=(your Portal context root) Note: In a Standalone Portal environment, the WasRemoteHostName should be the local hostname and the WasSoapPort should be the soap port of the HCL Portal and HCL Web Content Manager server. 3. Edit the (wp_profile root)/ConfigEngine/properties/wkplc_dbdomain.properties file and ensure the following values are set correctly: * release.DbPassword=(your database user password) * community.DbPassword=(your database user password) * customization.DbPassword=(your database user password) * jcr.DbPassword=(your database user password) * likeminds.DbPassword=(your database user password) * feedback.DbPassword=(your database user password) 4. Edit the (wp_profile root)/ConfigEngine/properties/wkplc_comp.properties file and ensure the following values are set correctly: * XmlAccessHost=(your Portal hostname) * XmlAccessPort=(the port you use to access Portal) Unix, Linux, Windows, and IBM i The update process removes plain text passwords from the wkplc*.properties files. To keep these passwords in the properties files, include the following line in the wkplc.properties file: PWordDelete=false There are several different methods to roll back the cumulative fix, and they are: * Use a Graphical User Interface (GUI) to roll back * Use a command line roll back * Use silent mode roll back * Use console mode roll back Choose one method that is available for your system. Follow the detailed steps for that option, and then proceed with the Post Rollback Steps.","title":"Steps for rolling back the cumulative fix"},{"location":"overview/ccf_95_standalone/#use-a-graphical-user-interface-to-rollback-available-on-windows-linux-and-unix","text":"operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (wp_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Launch the IBM Installation Manager that was used to install HCL Portal Version 8.5. Select Roll Back on the Installation Manager main window and follow the prompts to roll HCL Portal back to the desired level. After rollback completes, proceed with the Post Rollback Steps.","title":"Use a Graphical User Interface to rollback (available on Windows, Linux, and Unix"},{"location":"overview/ccf_95_standalone/#use-a-command-line-to-rollback-available-on-windows-linux-and-unix-operating","text":"systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools If you are rolling back the cumulative fix on HCL Portal Express, skip to step 5. Otherwise, run the following command to launch the installation program of IBM Installation Manager. The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces: For Unix/Linux: ./imcl rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory (portal_server_root) For Windows: imcl.exe rollback com.ibm.websphere.PORTAL.SERVER.v85 -installationDirectory (portal_server_root) HCL Portal Express only (IBM i must use silent or console mode method): Run the following command to launch the installation program from the eclipse/tools sub-directory of Installation Manager. The commands are shown here on multiple lines for clarity, but the entire command must be entered on one line. Include quotation marks around file paths that include spaces: For Linux: ./imcl rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory (portal_server_root) For Windows: imcl.exe rollback com.ibm.websphere.PORTAL.EXPRESS.v85 -installationDirectory (portal_server_root) After rollback completes, proceed with the Post Rollback Steps.","title":"Use a command line to rollback (available on Windows, Linux, and Unix operating"},{"location":"overview/ccf_95_standalone/#use-silent-mode-to-rollback-available-on-windows-linux-unix-and-ibm-i","text":"operating systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only, Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Update the sample response file that is packaged with your cumulative fix level according to the comments in the file. Run the following command to roll back in silent mode: imcl -input (Full_path_to_your_response_file) -log (Full_Path_to_a_log_file) -showProgress After rollback completes, proceed with the Post Rollback Steps.","title":"Use silent mode to rollback (available on Windows, Linux, Unix, and IBM i"},{"location":"overview/ccf_95_standalone/#use-console-mode-interface-available-on-windows-linux-unix-and-ibm-i-operating_1","text":"systems) If you are running an external web server, stop the web server. Stop any active application servers by using the stopServer command. To see which application servers are active, use the serverStatus command from the (wp_profile)/bin directory and again from the (cw_profile)/bin directory: Unix/Linux: ./serverStatus.sh -all Windows: serverStatus.bat -all IBM i: serverStatus -all For IBM i only : Run the following command from qshell: chown QEJBSVR /QIBM/UserData/WebSphere/AppServer/V85/ND/profiles/cw_profile/ConfigEngine/properties/wkplc.properties Open a command window and switch to the eclipse/tools sub-directory of Installation Manager. By default, this is: Unix/Linux: /opt/IBM/InstallationManager/eclipse/tools Windows: C:\\Program Files\\IBM\\Installation Manager\\eclipse\\tools IBM i: /QIBM/ProdData/InstallationManager/eclipse/tools Run the command to start the IBM Installation Manager in console mode. For Unix/Linux: ./imcl -c For Windows: imcl.exe -c For IBM i: ./imcl -c Select Roll back and follow the prompts to roll back HCL Portal. After installation completes, proceed with the Post Rollback Steps.","title":"Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating"},{"location":"overview/ccf_95_standalone/#post-rollback-steps","text":"Linux, Unix, Windows or IBM i Use the following commands to roll back all profiles. These steps must be repeated for each profile, if multiple profiles exist. All profiles that share the same Portal installation directory (multiple profile option) must be at the same level for future upgrades to be applied. The following configuration steps should be run as the user who normally administers the Portal Server, which may or may not be the same user who runs the installation program. If a remote search server is used within this environment, it should be started before running the following commands. 1. Run the following command from within the path of the profile to configure. If you are rolling back the CF on an empty portal then many of the expected artifacts will not exist and the rollbackCF command will fail. In this case you must define the isEmptyPortal property on the command line. Example: rollbackCF.sh -DisEmptyPortal=true If the rollbackCF command fails for any reason, check the error logs and correct error conditions, then stop HCL Digital Experience before re-running. * Unix/Linux: ``` (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * Windows: ``` (profile_root)\\PortalServer\\bin\\rollbackCF.bat -DPortalAdminPwd=(password) -DWasPassword=(password) ``` * IBM i: ``` (profile_root)/PortalServer/bin/rollbackCF.sh -DPortalAdminPwd=(password) -DWasPassword=(password) ``` If you are running an external web server and you are using the WebSphere Application Server automatic generation and propagation of the plug-in, then restart the web server. If you are not using the automatic generation and propagation, simply regenerate the web server plugin, copy the plugin-cfg.xml file to the plugin directory, then restart the web server. If you previously customized any configuration files in the wp_profile_root/PortalServer/config directory, check to see if rolling back the cumulative fix affected those files by restoring a version of the files that was saved when the cumulative fix was originally installed. If it did affect the files, you must perform the same customization on the restored version of each file. If necessary, redeploy any customizations, including JSPs, to the WCM portlets (if using Web Content Manager), any other portlets, or any other Portal enterprise applications, if these were customized prior to rolling back the cumulative fix. If using HCL Web Content Manager and have installed any official extensions (such as the WCM Multilingual Solution (MLS) or WCM Social Media Publisher (SMP)), then run the following task to update them. Unix/Linux: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * Windows: (profile_root)\\ConfigEngine\\ConfigEngine.bat action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) * IBM i: (profile_root)/ConfigEngine/ConfigEngine.sh action-update-wcm-extensions -DWasPassword=(password) -DPortalAdminPwd=(password) The task can be run even if you are not sure if you had the extensions enabled. If you want to check if they were enabled the following tasks can be used: * For MLS, use: ConfigEngine.sh|bat action-is-wcm-mls-enabled * For SMP, use: ConfigEngine.sh|bat action-is-wcm-smp-enabled 6. For rollback to CF03 or earlier level only: If the Brightcove integration was enabled, remove the old Brightcove plugins, then configure HCL Portal to add the new Brightcove plugins. 7. For rollback to CF03 or earlier level only: If using Rich Media Edition, remove the Rich Media Edition plugin, restart the Portal Server, then configure HCL Portal to add the Rich Media Edition plugins. 8. If you have set up a remote search server or document conversion server for use with HCL Portal Version 8.5, then whenever you roll back a cumulative fix to the portal server, you should also roll back the corresponding cumulative fix to the remote server. 9. Clear the browser cache. On this page* Search Crawler Information * Take a complete backup of the Portal environment * Known Issues * Review supported hardware/software requirements * Check fixes installed on your system * Ensure wkplc.properties files are correct * Multiple profile considerations * Non-root considerations * Anti-virus and file indexing software considerations (Windows only) * Special note for customers using WAS 8.5.5.14 * Download the cumulative fix * Steps for installing the cumulative fix * Use a Graphical User Interface (available on Windows, Linux, and Unix operating systems) * Use a live repository via the Graphical User Interface (available on Windows, Linux, and Unix operating systems) * Use a command line (available on Windows, Linux, and Unix operating systems) * Use silent mode installation (available on Windows, Linux, Unix, and IBM i operating systems) * Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) * Additional configuration steps * Post installation steps * Steps for rolling back the cumulative fix * Use a Graphical User Interface to rollback (available on Windows, Linux, and Unix operating systems) * Use a command line to rollback (available on Windows, Linux, and Unix operating systems) * Use silent mode to rollback (available on Windows, Linux, Unix, and IBM i operating systems) * Use Console Mode Interface (available on Windows, Linux, Unix and IBM i operating systems) * Post Rollback Steps Generated by XML WebHelp","title":"Post Rollback Steps"},{"location":"overview/ccf_strategy9/","text":"Combined Cumulative Fix strategy | HCL Digital Experience 9.0 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Combined Cumulative Fix strategy | HCL Digital Experience 9.0 The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Cumulative fixes can only be applied to an existing functional version of HCL Portal Version or an HCL Portal Version with a previous cumulative fix applied. Read the instructions to learn how to apply or roll back an HCL Portal Combined Cumulative Fix. The following instruction links are for HCL Portal Version 8.5 CF08 or later. Beginning with CF14, these instructions can be applied on a Portal system running either Version 8.5 or Version 9.0. Note Each release of a maintenance package is included in your HCL Digital Experience offering. Overview Applying the cumulative fix is a multi-step process. You must first update the product files using IBM Installation Manager, and then you must use the Portal ConfigEngine tool to apply the changes to each profile in your system. The update is not complete until you have performed both steps! Likewise, to roll back a fix, you must first use IBM Installation Manager to restore the older product files and then use ConfigEngine to apply the rollback to each profile. The procedures below describe these steps in detail. Go to Installing the HCL Digital Experience software documentation to install according your operating system. What's new For a list of the Fixes which have gone into each CF, go to the What's new in the Combined Cumulative fixes section in the Version 8.5 documentation. Effective in Version 8.5 CF08, the update and rollback processes have been streamlined for easier customer application. The previous CF instructions detailing \"PRE-APPLY-FIX\" and \"APPLY-FIX\" upgrade commands have now been integrated into the single applyCF command. Correspondingly, the rollback instructions for \"PRE-ROLLBACK-FIX\" and \"ROLLBACK-FIX\" have been integrated into the single \"rollbackCF\" command. To assist you with your upgrade, HCL is now providing a Health Checker tool that you can use to validate your Portal installation before applying a cumulative fix. Simply execute this tool on the target system and review the report that is generated to see if there are any issues you need to resolve before installing the update. See the Health Checker in this topic directory or the README text in the Combined Cumulative Fix ZIP file. The HCL Script Application was made available as V1.3 and earlier by the catalog. It was developed further and included with Portal Version 8.5 CF09 and later, then also renamed to \"Script Application\" for Portal Version 8.5 CF11. When customers have the old HCL Script Application catalog version 1.3 AND then install CF09 or later, the security settings need to be obtained BEFORE installing the CF. The detailed information can be found under the first optional step of the procedure in The Script Application security overview section in the Version 8.5 documentation. The Ephox EditLive! Java based Rich Text Editor has been deprecated as of CF11 and replaced by Textbox.io. More details about CF11 can found in CF11 topic page in the Version 8.5 documentation. Due to security vulnerabilities in the Apache Axis library (JAR file), the \"axis.jar\" will be removed from the HCL Portal class path effective in CF12. For inquiries, go to HCL Software Support page. Portal Version 8.5 CF12 introduces support for JDK8 in conjunction with WAS 8.5.5.10. This will also require WAS iFix PI67166 on top of WAS 8.5.5.10 (scheduled for inclusion in WAS 8.5.5.11.) Support for IBM Rich Media Edition (RME) has been removed effective with HCL Portal and Web Content Manager Version 8.5 CF14, and will not be supported in future releases. For more information about this IBM Rich Media Edition support lifecycle announcement, go to HCL Software Support page. Ephox EditLive! has been removed effective in Version 8.5 CF14 and is no longer supported. This change follows the steps taken above in Version 8.5 CF11 to deprecate Ephox EditLive! and replace it with Textbox.io as the new advanced rich text editor for HCL Web Content Manager. Customers that have manually installed and configured EditLive! as a Third Party editor option can continue to use EditLive! but will no longer be able to receive support and updates via HCL. Also effective with Version 8.5 CF14, the Textbox.io will support the following web browsers/levels . CF16 for Portal Versions 8.5 and 9.0 contain security fix PH01459 for CVE-2018-1736. It introduces a configurable white list for external hosts, which are allowed as redirects via the CategoryProfileUpdater Module. Server relative redirects are continuously working. Redirects to external hosts not specified in the white list are blocked. The white list is enabled per default, and needs to be filled in with appropriate values, if this functionality is used in your installation. For inquiries, go to HCL Software Support page. CF16 for Portal Versions 8.5 and 9.0 changes the behavior of Cumulative Fix installation related to out of the box resources to address CVE-2018-1420. Prior to CF16, access control settings of out of the box resources were reset to their out of the box access control settings, overriding potential customizations. This has been changed such that the Cumulative Fix installation leaves the access control settings at their current values. A side effect of this change is, that out of the box resources introduced in a Cumulative Fix after the initial version of Portal Version 8.5 or Version 9.0 will not receive any access control settings, if CF16 or later is installed on top of a CF level prior to introduction of an out of the box resource. In such a case the resource will not have any access control configured, and will have to be set manually to your security requirements. See the HCL Digital Experience 8.5 documentation on how to manage the access control and get an overview of initial access control settings . Generated by XML WebHelp","title":"Ccf strategy9"},{"location":"overview/ccf_strategy9/#combined-cumulative-fix-strategy-hcl-digital-experience-90","text":"The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Cumulative fixes can only be applied to an existing functional version of HCL Portal Version or an HCL Portal Version with a previous cumulative fix applied. Read the instructions to learn how to apply or roll back an HCL Portal Combined Cumulative Fix. The following instruction links are for HCL Portal Version 8.5 CF08 or later. Beginning with CF14, these instructions can be applied on a Portal system running either Version 8.5 or Version 9.0.","title":"Combined Cumulative Fix strategy | HCL Digital Experience 9.0"},{"location":"overview/ccf_strategy9/#note","text":"Each release of a maintenance package is included in your HCL Digital Experience offering.","title":"Note"},{"location":"overview/ccf_strategy9/#overview","text":"Applying the cumulative fix is a multi-step process. You must first update the product files using IBM Installation Manager, and then you must use the Portal ConfigEngine tool to apply the changes to each profile in your system. The update is not complete until you have performed both steps! Likewise, to roll back a fix, you must first use IBM Installation Manager to restore the older product files and then use ConfigEngine to apply the rollback to each profile. The procedures below describe these steps in detail. Go to Installing the HCL Digital Experience software documentation to install according your operating system.","title":"Overview"},{"location":"overview/ccf_strategy9/#whats-new","text":"For a list of the Fixes which have gone into each CF, go to the What's new in the Combined Cumulative fixes section in the Version 8.5 documentation. Effective in Version 8.5 CF08, the update and rollback processes have been streamlined for easier customer application. The previous CF instructions detailing \"PRE-APPLY-FIX\" and \"APPLY-FIX\" upgrade commands have now been integrated into the single applyCF command. Correspondingly, the rollback instructions for \"PRE-ROLLBACK-FIX\" and \"ROLLBACK-FIX\" have been integrated into the single \"rollbackCF\" command. To assist you with your upgrade, HCL is now providing a Health Checker tool that you can use to validate your Portal installation before applying a cumulative fix. Simply execute this tool on the target system and review the report that is generated to see if there are any issues you need to resolve before installing the update. See the Health Checker in this topic directory or the README text in the Combined Cumulative Fix ZIP file. The HCL Script Application was made available as V1.3 and earlier by the catalog. It was developed further and included with Portal Version 8.5 CF09 and later, then also renamed to \"Script Application\" for Portal Version 8.5 CF11. When customers have the old HCL Script Application catalog version 1.3 AND then install CF09 or later, the security settings need to be obtained BEFORE installing the CF. The detailed information can be found under the first optional step of the procedure in The Script Application security overview section in the Version 8.5 documentation. The Ephox EditLive! Java based Rich Text Editor has been deprecated as of CF11 and replaced by Textbox.io. More details about CF11 can found in CF11 topic page in the Version 8.5 documentation. Due to security vulnerabilities in the Apache Axis library (JAR file), the \"axis.jar\" will be removed from the HCL Portal class path effective in CF12. For inquiries, go to HCL Software Support page. Portal Version 8.5 CF12 introduces support for JDK8 in conjunction with WAS 8.5.5.10. This will also require WAS iFix PI67166 on top of WAS 8.5.5.10 (scheduled for inclusion in WAS 8.5.5.11.) Support for IBM Rich Media Edition (RME) has been removed effective with HCL Portal and Web Content Manager Version 8.5 CF14, and will not be supported in future releases. For more information about this IBM Rich Media Edition support lifecycle announcement, go to HCL Software Support page. Ephox EditLive! has been removed effective in Version 8.5 CF14 and is no longer supported. This change follows the steps taken above in Version 8.5 CF11 to deprecate Ephox EditLive! and replace it with Textbox.io as the new advanced rich text editor for HCL Web Content Manager. Customers that have manually installed and configured EditLive! as a Third Party editor option can continue to use EditLive! but will no longer be able to receive support and updates via HCL. Also effective with Version 8.5 CF14, the Textbox.io will support the following web browsers/levels . CF16 for Portal Versions 8.5 and 9.0 contain security fix PH01459 for CVE-2018-1736. It introduces a configurable white list for external hosts, which are allowed as redirects via the CategoryProfileUpdater Module. Server relative redirects are continuously working. Redirects to external hosts not specified in the white list are blocked. The white list is enabled per default, and needs to be filled in with appropriate values, if this functionality is used in your installation. For inquiries, go to HCL Software Support page. CF16 for Portal Versions 8.5 and 9.0 changes the behavior of Cumulative Fix installation related to out of the box resources to address CVE-2018-1420. Prior to CF16, access control settings of out of the box resources were reset to their out of the box access control settings, overriding potential customizations. This has been changed such that the Cumulative Fix installation leaves the access control settings at their current values. A side effect of this change is, that out of the box resources introduced in a Cumulative Fix after the initial version of Portal Version 8.5 or Version 9.0 will not receive any access control settings, if CF16 or later is installed on top of a CF level prior to introduction of an out of the box resource. In such a case the resource will not have any access control configured, and will have to be set manually to your security requirements. See the HCL Digital Experience 8.5 documentation on how to manage the access control and get an overview of initial access control settings . Generated by XML WebHelp","title":"What's new"},{"location":"overview/ccf_strategy95/","text":"Combined Cumulative Fix (CF) Installation | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. Cumulative fix instructions: Stand-alone Read the installation instructions to learn how to apply a cumulative fix to a stand-alone portal installation or to roll back the cumulative fix. Cumulative fix instructions: Cluster Read the installation instructions to learn how to apply a cumulative fix to a clustered portal installation or to roll back the cumulative fix. Cumulative fix instructions: Farm Read the installation instructions to learn how to apply a cumulative fix to a portal farm installation or to roll back the cumulative fix. Cumulative fix instructions: Remote search Read the installation instructions to learn how to apply a cumulative fix to a portal remote search installation or to roll back the cumulative fix. Cumulative Fix Health Checker These instructions are for the HCL Digital Experience Combined Cumulative Fix Health Checker. Known Issues for the Combined Cumulative Fix Learn what are the known issues in the HCL Digital Experience Combined Cumulative Fixes. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. Combined Cumulative Fix (CF) Installation | HCL Digital Experience The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. The following instruction links are for HCL Digital Experience 9.5 CF17 and higher. These instructions can be applied on an HCL Digital Experience system running either 8.5 or 9.0. CF17 is used as a prerequisite fix in order for users to move up to 9.5 level. Video : HCL Digital Experience - Installing HCL Portal 9.5 CF18 Note Each release of a maintenance package is included in your HCL Digital Experience offering. Overview Applying the cumulative fix is a multi-step process. You must first update the product files using IBM Installation Manager, and then you must use the Portal ConfigEngine tool to apply the changes to each profile in your system. The update is not complete until you have performed both steps! Likewise, to roll back a fix, you must first use IBM Installation Manager to restore the older product files and then use ConfigEngine to apply the rollback to each profile. The procedures below describe these steps in detail. Go to Installing the HCL Digital Experience software documentation to install according to your operating system. What's new For a list of the Fixes which have gone into each CF, go to the List of software fixes section. Effective in 8.5 CF08, the update and rollback processes have been streamlined for easier customer application. The previous CF instructions detailing \"PRE-APPLY-FIX\" and \"APPLY-FIX\" upgrade commands have now been integrated into the single applyCF command. Correspondingly, the rollback instructions for \"PRE-ROLLBACK-FIX\" and \"ROLLBACK-FIX\" have been integrated into the single \"rollbackCF\" command. To assist you with your upgrade, HCL is now providing a Health Checker tool that you can use to validate your Portal installation before applying a cumulative fix. Simply execute this tool on the target system and review the report that is generated to see if there are any issues you need to resolve before installing the update. See the Health Checker in this topic directory or the README text in the Combined Cumulative Fix ZIP file. The HCL Script Application was made available as V1.3 and earlier by the catalog. It was developed further and included with Portal Version 8.5 CF09 and later, then also renamed to \"Script Application\" for Portal 8.5 CF11. When customers have the old HCL Script Application catalog version 1.3 AND then install CF09 or later, the security settings need to be obtained BEFORE installing the CF. The detailed information can be found under the first optional step of the procedure in The Script Application security overview section in the 8.5 documentation. The Ephox EditLive! Java based Rich Text Editor has been deprecated as of CF11 and replaced by Textbox.io. More details about CF11 can found in CF11 topic page in the Version 8.5 documentation. Due to security vulnerabilities in the Apache Axis library (JAR file), the \"axis.jar\" will be removed from the HCL Portal class path effective in CF12. For inquiries, go to HCL Software Support page. Portal Version 8.5 CF12 introduces support for JDK8 in conjunction with WAS 8.5.5.10. This will also require WAS iFix PI67166 on top of WAS 8.5.5.10 (scheduled for inclusion in WAS 8.5.5.11.) Support for IBM Rich Media Edition (RME) has been removed effective with HCL Portal and Web Content Manager Version 8.5 CF14, and will not be supported in future releases. For more information about this IBM Rich Media Edition support lifecycle announcement, go to HCL Software Support page. Ephox EditLive! has been removed effective in Version 8.5 CF14 and is no longer supported. This change follows the steps taken above in Version 8.5 CF11 to deprecate Ephox EditLive! and replace it with Textbox.io as the new advanced rich text editor for HCL Web Content Manager. Customers that have manually installed and configured EditLive! as a Third Party editor option can continue to use EditLive! but will no longer be able to receive support and updates via HCL. Also effective with Version 8.5 CF14, the Textbox.io will support the following web browsers/levels . CF16 for Portal Versions 8.5 and 9.0 contain security fix PH01459 for CVE-2018-1736. It introduces a configurable white list for external hosts, which are allowed as redirects via the CategoryProfileUpdater Module. Server relative redirects are continuously working. Redirects to external hosts not specified in the white list are blocked. The white list is enabled per default, and needs to be filled in with appropriate values, if this functionality is used in your installation. For inquiries, go to HCL Software Support page. CF16 for Portal Versions 8.5 and 9.0 changes the behavior of Cumulative Fix installation related to out of the box resources to address CVE-2018-1420. Prior to CF16, access control settings of out of the box resources were reset to their out of the box access control settings, overriding potential customizations. This has been changed such that the Cumulative Fix installation leaves the access control settings at their current values. A side effect of this change is, that out of the box resources introduced in a Cumulative Fix after the initial version of Portal Version 8.5 or Version 9.0 will not receive any access control settings, if CF16 or later is installed on top of a CF level prior to introduction of an out of the box resource. In such a case the resource will not have any access control configured, and will have to be set manually to your security requirements. See the HCL Digital Experience 8.5 documentation on how to manage the access control and get an overview of initial access control settings . Generated by XML WebHelp","title":"Ccf strategy95"},{"location":"overview/ccf_strategy95/#combined-cumulative-fix-cf-installation-hcl-digital-experience","text":"The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. The following instruction links are for HCL Digital Experience 9.5 CF17 and higher. These instructions can be applied on an HCL Digital Experience system running either 8.5 or 9.0. CF17 is used as a prerequisite fix in order for users to move up to 9.5 level. Video : HCL Digital Experience - Installing HCL Portal 9.5 CF18","title":"Combined Cumulative Fix (CF) Installation | HCL Digital Experience"},{"location":"overview/ccf_strategy95/#note","text":"Each release of a maintenance package is included in your HCL Digital Experience offering.","title":"Note"},{"location":"overview/ccf_strategy95/#overview","text":"Applying the cumulative fix is a multi-step process. You must first update the product files using IBM Installation Manager, and then you must use the Portal ConfigEngine tool to apply the changes to each profile in your system. The update is not complete until you have performed both steps! Likewise, to roll back a fix, you must first use IBM Installation Manager to restore the older product files and then use ConfigEngine to apply the rollback to each profile. The procedures below describe these steps in detail. Go to Installing the HCL Digital Experience software documentation to install according to your operating system.","title":"Overview"},{"location":"overview/ccf_strategy95/#whats-new","text":"For a list of the Fixes which have gone into each CF, go to the List of software fixes section. Effective in 8.5 CF08, the update and rollback processes have been streamlined for easier customer application. The previous CF instructions detailing \"PRE-APPLY-FIX\" and \"APPLY-FIX\" upgrade commands have now been integrated into the single applyCF command. Correspondingly, the rollback instructions for \"PRE-ROLLBACK-FIX\" and \"ROLLBACK-FIX\" have been integrated into the single \"rollbackCF\" command. To assist you with your upgrade, HCL is now providing a Health Checker tool that you can use to validate your Portal installation before applying a cumulative fix. Simply execute this tool on the target system and review the report that is generated to see if there are any issues you need to resolve before installing the update. See the Health Checker in this topic directory or the README text in the Combined Cumulative Fix ZIP file. The HCL Script Application was made available as V1.3 and earlier by the catalog. It was developed further and included with Portal Version 8.5 CF09 and later, then also renamed to \"Script Application\" for Portal 8.5 CF11. When customers have the old HCL Script Application catalog version 1.3 AND then install CF09 or later, the security settings need to be obtained BEFORE installing the CF. The detailed information can be found under the first optional step of the procedure in The Script Application security overview section in the 8.5 documentation. The Ephox EditLive! Java based Rich Text Editor has been deprecated as of CF11 and replaced by Textbox.io. More details about CF11 can found in CF11 topic page in the Version 8.5 documentation. Due to security vulnerabilities in the Apache Axis library (JAR file), the \"axis.jar\" will be removed from the HCL Portal class path effective in CF12. For inquiries, go to HCL Software Support page. Portal Version 8.5 CF12 introduces support for JDK8 in conjunction with WAS 8.5.5.10. This will also require WAS iFix PI67166 on top of WAS 8.5.5.10 (scheduled for inclusion in WAS 8.5.5.11.) Support for IBM Rich Media Edition (RME) has been removed effective with HCL Portal and Web Content Manager Version 8.5 CF14, and will not be supported in future releases. For more information about this IBM Rich Media Edition support lifecycle announcement, go to HCL Software Support page. Ephox EditLive! has been removed effective in Version 8.5 CF14 and is no longer supported. This change follows the steps taken above in Version 8.5 CF11 to deprecate Ephox EditLive! and replace it with Textbox.io as the new advanced rich text editor for HCL Web Content Manager. Customers that have manually installed and configured EditLive! as a Third Party editor option can continue to use EditLive! but will no longer be able to receive support and updates via HCL. Also effective with Version 8.5 CF14, the Textbox.io will support the following web browsers/levels . CF16 for Portal Versions 8.5 and 9.0 contain security fix PH01459 for CVE-2018-1736. It introduces a configurable white list for external hosts, which are allowed as redirects via the CategoryProfileUpdater Module. Server relative redirects are continuously working. Redirects to external hosts not specified in the white list are blocked. The white list is enabled per default, and needs to be filled in with appropriate values, if this functionality is used in your installation. For inquiries, go to HCL Software Support page. CF16 for Portal Versions 8.5 and 9.0 changes the behavior of Cumulative Fix installation related to out of the box resources to address CVE-2018-1420. Prior to CF16, access control settings of out of the box resources were reset to their out of the box access control settings, overriding potential customizations. This has been changed such that the Cumulative Fix installation leaves the access control settings at their current values. A side effect of this change is, that out of the box resources introduced in a Cumulative Fix after the initial version of Portal Version 8.5 or Version 9.0 will not receive any access control settings, if CF16 or later is installed on top of a CF level prior to introduction of an out of the box resource. In such a case the resource will not have any access control configured, and will have to be set manually to your security requirements. See the HCL Digital Experience 8.5 documentation on how to manage the access control and get an overview of initial access control settings . Generated by XML WebHelp","title":"What's new"},{"location":"overview/inst_req/","text":"System requirements | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Planning to install HCL Digital Experience Before you install HCL Digital Experience in a production environment, assess your hardware and software needs, possible database configurations, security options, and LDAP server options. System requirements Before installing HCL Digital Experience, you must review the system requirements to ensure that you have the supported versions of prerequisite and co-requisite software and hardware. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Planning to install HCL Digital Experience Before you install HCL Digital Experience in a production environment, assess your hardware and software needs, possible database configurations, security options, and LDAP server options. System requirements Before installing HCL Digital Experience, you must review the system requirements to ensure that you have the supported versions of prerequisite and co-requisite software and hardware. Support Statement This support statement proposes a revision to the definition of supported and unsupported about the various products of which HCL Digital Experience depends on for proper operation. User IDs and passwords Understanding character limitations for user IDs and passwords is important because they are used throughout the system to provide access and secure content. Web Content Manager environments Reviewing the Web Content Manager environments help you understand what happens in each environment and how you might want to set up your physical servers. Database considerations HCL Digital Experience includes an Apache Derby database that is configured and ready for immediate use. But for a production environment or any environment for HCL Web Content Manager, you must use one of the other supported database management systems. User registry considerations A user registry or repository authenticates a user and retrieves information about users and groups to do security-related functions, including authorization. HCL Digital Experience high availability HCL Digital Experience is licensed for use in a single-server configuration and might not be used in either a cloned configuration or a clustered configuration except when implementing idle standby for the purpose of failover. Cluster considerations Multiple portal servers can be clustered with IBM WebSphere Application Server Network Deployment. Virtual environment overview Use virtualized environments to meet your business needs like production server consolidation, centralized management, or dynamic test environments. Multiple profile support Multiple profiles give you the ability to have multiple, independently configured portal instances that run from the same installation. * Roadmaps to deploy your system Review the roadmaps to understand the common deployment, configuration, migration, and integration patterns. * Migrating to IBM WebSphere Application Server 9.0.5 If you are installing the latest version of HCL Digital Experience, migrate your IBM WebSphere Application Server to 9.0.5. * Installing and preparing the prerequisite software Before you install HCL Digital Experience, make sure that the prerequisite software is installed, configured, and has the required fix packs applied. * Installing the HCL Digital Experience software The HCL Digital Experience is designed to help create, manage, simplify, and integrate your processes into an engaging online experience. - Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. System requirements | HCL Digital Experience Before installing HCL Digital Experience, you must review the system requirements to ensure that you have the supported versions of prerequisite and co-requisite software and hardware. Click the link to see the detailed system requirements document: HCL Digital Experience detailed system requirements The following information provides the minimum system requirements for HCL Digital Experience 9.5. Unless stated otherwise, users could generally install and run HCL Digital Experience 9.5 with updates to supported products if the updates are compatible with later versions: System requirements The following are system requirements of different versions of the products: | HCL Digital Experience 9.5 Detailed System Requirements for HCL Portal Server, HCL Portal Enable, HCL Portal Extend, and HCL Web Content Manager | HCL Digital Experience 9.5 for Express Detailed System Requirements for HCL Portal Express | | --- | --- | | HCL Digital Experience 9.0 Detailed System Requirements for HCL Portal Server, HCL Portal Enable, HCL Portal Extend, and HCL Web Content Manager | HCL Digital Experience 9.0 for Express Detailed System Requirements for HCL Portal Express | | HCL Digital Experience 8.5 Detailed System Requirements for HCL Portal Server, HCL Portal Enable, HCL Portal Extend, and HCL Web Content Manager | HCL Digital Experience 8.5 for Express Detailed System Requirements for HCL Portal Express | Hardware requirements The following table contains the minimum hardware requirements. | Memory | 8 GB | | Storage | 20 GB | | CPU | 2 | Disk space information The following table contains the general information about your directory sizing. Directory information Volume Required Temporary Total Shared resources /home 123.9 KB 1.82 GB 1.82 GB Installation directory /home 3.18 GB 3.18 GB Software requirements Refer to the HCL Digital Experience detailed system requirements page for the latest updates. Software Description Portal server HCL Portal and HCL Web Content Manager Version 9.5 Application server IBM\u00ae WebSphere\u00ae Application Server Network Deployment version 8.5.5.12 on-premises or 9.0.x or later Java 8.0.3 SDK IBM WebSphere SDK Java Technology Edition Generated by XML WebHelp","title":"Inst req"},{"location":"overview/inst_req/#system-requirements-hcl-digital-experience","text":"Before installing HCL Digital Experience, you must review the system requirements to ensure that you have the supported versions of prerequisite and co-requisite software and hardware. Click the link to see the detailed system requirements document: HCL Digital Experience detailed system requirements The following information provides the minimum system requirements for HCL Digital Experience 9.5. Unless stated otherwise, users could generally install and run HCL Digital Experience 9.5 with updates to supported products if the updates are compatible with later versions: System requirements The following are system requirements of different versions of the products: | HCL Digital Experience 9.5 Detailed System Requirements for HCL Portal Server, HCL Portal Enable, HCL Portal Extend, and HCL Web Content Manager | HCL Digital Experience 9.5 for Express Detailed System Requirements for HCL Portal Express | | --- | --- | | HCL Digital Experience 9.0 Detailed System Requirements for HCL Portal Server, HCL Portal Enable, HCL Portal Extend, and HCL Web Content Manager | HCL Digital Experience 9.0 for Express Detailed System Requirements for HCL Portal Express | | HCL Digital Experience 8.5 Detailed System Requirements for HCL Portal Server, HCL Portal Enable, HCL Portal Extend, and HCL Web Content Manager | HCL Digital Experience 8.5 for Express Detailed System Requirements for HCL Portal Express | Hardware requirements The following table contains the minimum hardware requirements. | Memory | 8 GB | | Storage | 20 GB | | CPU | 2 | Disk space information The following table contains the general information about your directory sizing. Directory information Volume Required Temporary Total Shared resources /home 123.9 KB 1.82 GB 1.82 GB Installation directory /home 3.18 GB 3.18 GB Software requirements Refer to the HCL Digital Experience detailed system requirements page for the latest updates. Software Description Portal server HCL Portal and HCL Web Content Manager Version 9.5 Application server IBM\u00ae WebSphere\u00ae Application Server Network Deployment version 8.5.5.12 on-premises or 9.0.x or later Java 8.0.3 SDK IBM WebSphere SDK Java Technology Edition Generated by XML WebHelp","title":"System requirements | HCL Digital Experience"},{"location":"overview/inst_req_supt/","text":"HCL Digital Experience Support Statement Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Home HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Planning to install HCL Digital Experience Before you install HCL Digital Experience in a production environment, assess your hardware and software needs, possible database configurations, security options, and LDAP server options. Support Statement This support statement proposes a revision to the definition of supported and unsupported about the various products of which HCL Digital Experience depends on for proper operation. HCL Digital Experience 9.5 Welcome to the documentation for HCL Digital Experience 9.5. Learn how to install, configure, troubleshoot, maintain and use Version 9.5 of HCL Digital Experience. Digital Experience on non-containerized platforms Learn how to deploy HCL Digital Experience as a non-containerized application and optimize web content and applications to deliver differentiated, personalized experiences for your customers. Installing HCL Digital Experience Review the planning information on HCL Digital Experience, then select your operating system and installation pattern that most reflects your business needs. Planning to install HCL Digital Experience Before you install HCL Digital Experience in a production environment, assess your hardware and software needs, possible database configurations, security options, and LDAP server options. System requirements Before installing HCL Digital Experience, you must review the system requirements to ensure that you have the supported versions of prerequisite and co-requisite software and hardware. Support Statement This support statement proposes a revision to the definition of supported and unsupported about the various products of which HCL Digital Experience depends on for proper operation. User IDs and passwords Understanding character limitations for user IDs and passwords is important because they are used throughout the system to provide access and secure content. Web Content Manager environments Reviewing the Web Content Manager environments help you understand what happens in each environment and how you might want to set up your physical servers. Database considerations HCL Digital Experience includes an Apache Derby database that is configured and ready for immediate use. But for a production environment or any environment for HCL Web Content Manager, you must use one of the other supported database management systems. User registry considerations A user registry or repository authenticates a user and retrieves information about users and groups to do security-related functions, including authorization. HCL Digital Experience high availability HCL Digital Experience is licensed for use in a single-server configuration and might not be used in either a cloned configuration or a clustered configuration except when implementing idle standby for the purpose of failover. Cluster considerations Multiple portal servers can be clustered with IBM WebSphere Application Server Network Deployment. Virtual environment overview Use virtualized environments to meet your business needs like production server consolidation, centralized management, or dynamic test environments. Multiple profile support Multiple profiles give you the ability to have multiple, independently configured portal instances that run from the same installation. * Roadmaps to deploy your system Review the roadmaps to understand the common deployment, configuration, migration, and integration patterns. * Migrating to IBM WebSphere Application Server 9.0.5 If you are installing the latest version of HCL Digital Experience, migrate your IBM WebSphere Application Server to 9.0.5. * Installing and preparing the prerequisite software Before you install HCL Digital Experience, make sure that the prerequisite software is installed, configured, and has the required fix packs applied. * Installing the HCL Digital Experience software The HCL Digital Experience is designed to help create, manage, simplify, and integrate your processes into an engaging online experience. - Combined Cumulative Fix (CF) installation The Combined Cumulative Fix is a package of HCL Digital Experience fixes. Read the instructions to learn how to apply or roll back a combined cumulative fix. - Backup and restore Backup and recovery of data files and databases is an essential operation for any business system, particularly for data and applications that run in production environments. Create and follow a plan for backing up and recovering data on all tiers of your HCL Digital Experience deployment. IBM Installation Manager must also be included in backup and recovery planning. If you back up the HCL Portal file structure and then install a fix pack, your HCL Digital Experience and IBM Installation Manager become out of sync after you restore the HCL Portal file system. This condition is not recoverable. - Migrating Successful migration requires significant planning and preparation, understanding the tools that are involved, and careful execution of the appropriate steps in the order provided. - Setting up a website Setting up a website includes, creating pages, adding navigation, setting up search, and adding content to the site. Themes are used to customize the portal's look-and-feel. Out-of-the-box templates and the site wizard can help you set up your portal site faster. You can add wikis and blogs to your site and let users tag and rate content on your site. - Staging to production During portal solution development, the solution is initially developed, tested, and refined on one server or a limited number of servers. The solution is deployed later on live systems, referred to as the production environment. The process of moving the solution from the development environment to the production environment is called staging. - Content Template Catalog 4.4 The Content Template (CTC) is a set of templates that accelerate the process of building a website. HCL Digital Experience Support Statement This support statement proposes a revision to the definition of supported and unsupported about the various products of which HCL Digital Experience depends on for proper operation. Introduction HCL Digital Experience requires the use of several collateral products for its normal operations. In particular, it requires WebSphere\u00ae Application Server, a database, a repository for user information (typically an LDAP), and other products depending on specific customer requirements. During the testing of a new release, Development generally tests HCL Digital Experience with a prescribed list of these collateral products. These products are designated as Supported Products in the documented hardware and software requirements for that release. Because the list of Supported Products cannot reasonably describe all possible configurations that a customer might need to use, some customers voiced concerns about the level of support that is provided for configurations that are not designated as Supported. This document is intended to provide clarification of the level of support that can be expected for the current release with various combinations of dependent products. Note: Although the statements in this document reflect the general level of support that can be expected for HCL Digital Experience, the terms and conditions of any specific support offering, license or other Agreement you might have with HCL will determine the actual delivered support for the product. Nothing herein shall be construed as supplementing, modifying or superseding the terms of your HCL license agreement for HCL Digital Experience or any other agreement you might have with HCL, nor shall it create any obligation for HCL to deliver a level of support other than might be set forth in such Agreements. Categories of Support There are three categories of support for collateral products to HCL Digital Experience. They are Supported Products, Newer Versions, and Releases of Supported Products and Unsupported Products. The definition and support statement for each category follows: Supported Product A Supported Product is a product (at a specified version, release and fix level) that was tested by Development and is known to work with HCL Digital Experience.Products in this category are supported according to the terms of your HCL Digital Experience License Agreement. PMRs (Problem Management Records) are accepted by HCL Software Support in accordance with the conditions of the License Agreement you have for HCL Digital Experience Newer Versions and Releases of Supported Products Many products outside the specific version(s), release(s), or fix pack(s) of the Supported version (referenced in the documented hardware and software requirements) might not be explicitly tested by HCL Software, yet can reasonably be expected to perform within the accepted bounds of reliability, function, and performance by a customer. Products that fall into this category are typically newer releases or fix levels of a product already in the Supported Product category or a product that adheres to a standard API that HCL Digital Experience supports (such as an LDAP server). Some specific examples might include a newer operating system fix level, a WebSphere\u00ae Application Server (WAS) fix pack newer than the original Supported fix pack level, an IBM Java (JVM) fix pack, a new fix pack, or release of DB2 or an updated LDAP server. For products that fall into this category, support is as follows: For Products, such as IBM Directory Server or HCL Domino LDAP, IBM DB2, IBM JDKs (JVMs) and WebSphere\u00ae Application Server, HCL Digital Experience will fully support fix-pack, release and version updates that do not significantly change interfaces or other underlying support that HCL Digital Experience depends on for its functionality. If and when a newer release of one of these products is shipped that HCL Digital Experience cannot accommodate, that fact will be noted as described in the next section entitled Unsupported Products. Note that in order for HCL Digital Experience to support an update to a database or LDAP product, WebSphere\u00ae Application Server must support that update as well. For non-HCL products, the Support team makes a commercially reasonable effort to support products in this category. Support accepts problem reports (PMRs) for the appropriate releases that use these untested products. If Support is able to re-create the reported problem with a Supported version of the product, we will attempt to fix the problem. If Support is not able to re-create the problem with a Supported version of the product in question and is not able to resolve the problem on the untested version of the product in question, Support will look to the support organization for the product in question to provide resolution. Please note that varying degrees of customer involvement may be necessary to handle this process for non-HCL products. If the support organization for the untested product in question is unable to resolve the problem, Support will deem that version, release or fix pack level of the untested product in question to now be an Unsupported Product. Unsupported Products An Unsupported Product is a product (at a specified version, release and fix level) that is known to not work with HCL Digital Experience and is therefore not supported. A product can be included in this category as a result of an explicit test effort by Development or as a result of discovery from a prior customer problem. The HCL Digital Experience Support team maintains a list, by release, of all known Unsupported Products. The list is published as a technical document and is available to all customers. WebSphere\u00ae Application Server has a similar support statement, which can be found on the web. Note: WebSphere\u00ae Application Server uses specially customized builds of the IBM Java SDKs on certain platforms. Updates to these builds must be obtained from WebSphere\u00ae Application Server support.HCL Portal can be sensitive to changes in the underlying WebSphere\u00ae Application Server. Upgrading to a new fix pack level of the application server is well tolerated and encouraged (such as from WebSphere\u00ae Application Server version 8.5.5.2 to 9.0.x) as long as all required fixes for WebSphere\u00ae Application Server are available as integrated into that fix pack or by applying an interim fix specifically for that maintenance level. However, upgrading from one version of WebSphere\u00ae Application Server to the next is problematic if not done within the context of a migration of versions and must never be attempted with an in-place system. Support for Kubernetes Docker and Kubernetes are third-party products. HCL support is available to assist in configuration and support related issues as it pertains to the HCL Digital Experience product. If you require assistance with a full Kubernetes or Docker deployment, contact HCL Services or one of our HCL Business Partners to inquire about professional services. Support for LDAP Servers LDAP support spans two categories: Fully tested and supported LDAP servers: The list of fully tested LDAP servers for each release of HCL Digital Experience is documented in the detailed system requirements for each release. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using the tested directory servers. These problem reports receive high-priority attention. Features that are tested with these directories include relatively simple search and retrieval functions for user and group objects. Functions outside this scope, such as the Active Directory Global Catalog feature, are considered advanced features and have not been tested with HCL Digital Experience. HCL Digital Experience support encourages customers to work with their LDAP provider for additional support on these advanced features. Untested and partially supported LDAP servers: In general, HCL Digital Experience support makes a best effort to support directory servers that have not been tested with HCL Digital Experience. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using untested directory servers. If HCL Digital Experience support can re-create the reported problem using a tested LDAP server, staff will attempt to fix the problem. If the support team is not able to re-create the problem on a tested LDAP server, customers are referred to the LDAP provider for further assistance. Support for External Security Managers (ESM) ESM support spans two (2) categories: Fully tested and supported ESM software: The list of fully tested ESM software versions for each release of HCL Digital Experience is documented in the detailed system requirements for each release. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using the tested ESM servers. These problem reports receive high-priority attention. Features that are tested with these software products include authentication and authorization. Functions outside this scope, such as login customizations, referrals, impersonation, and step up authentication are considered advanced features and have not been tested with HCL Digital Experience. HCL Digital Experience support encourages customers to work with their ESM provider for additional support on these advanced features. Untested and partially supported ESM servers: In general, HCL Digital Experience support makes a best effort to support ESM servers that have not been tested with HCL Digital Experience when relying on the ESM for authentication only. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using untested ESM Trust Association Interceptor (TAI) implementations. If HCL Digital Experience support can re-create the reported problem using a tested ESM, staff will attempt to fix the problem. If the support team is not able to re-create the problem on a tested ESM, customers are referred to the ESM provider for further assistance. Generated by XML WebHelp","title":"Inst req supt"},{"location":"overview/inst_req_supt/#hcl-digital-experience-support-statement","text":"This support statement proposes a revision to the definition of supported and unsupported about the various products of which HCL Digital Experience depends on for proper operation.","title":"HCL Digital Experience Support Statement"},{"location":"overview/inst_req_supt/#introduction","text":"HCL Digital Experience requires the use of several collateral products for its normal operations. In particular, it requires WebSphere\u00ae Application Server, a database, a repository for user information (typically an LDAP), and other products depending on specific customer requirements. During the testing of a new release, Development generally tests HCL Digital Experience with a prescribed list of these collateral products. These products are designated as Supported Products in the documented hardware and software requirements for that release. Because the list of Supported Products cannot reasonably describe all possible configurations that a customer might need to use, some customers voiced concerns about the level of support that is provided for configurations that are not designated as Supported. This document is intended to provide clarification of the level of support that can be expected for the current release with various combinations of dependent products. Note: Although the statements in this document reflect the general level of support that can be expected for HCL Digital Experience, the terms and conditions of any specific support offering, license or other Agreement you might have with HCL will determine the actual delivered support for the product. Nothing herein shall be construed as supplementing, modifying or superseding the terms of your HCL license agreement for HCL Digital Experience or any other agreement you might have with HCL, nor shall it create any obligation for HCL to deliver a level of support other than might be set forth in such Agreements.","title":"Introduction"},{"location":"overview/inst_req_supt/#categories-of-support","text":"There are three categories of support for collateral products to HCL Digital Experience. They are Supported Products, Newer Versions, and Releases of Supported Products and Unsupported Products. The definition and support statement for each category follows: Supported Product A Supported Product is a product (at a specified version, release and fix level) that was tested by Development and is known to work with HCL Digital Experience.Products in this category are supported according to the terms of your HCL Digital Experience License Agreement. PMRs (Problem Management Records) are accepted by HCL Software Support in accordance with the conditions of the License Agreement you have for HCL Digital Experience Newer Versions and Releases of Supported Products Many products outside the specific version(s), release(s), or fix pack(s) of the Supported version (referenced in the documented hardware and software requirements) might not be explicitly tested by HCL Software, yet can reasonably be expected to perform within the accepted bounds of reliability, function, and performance by a customer. Products that fall into this category are typically newer releases or fix levels of a product already in the Supported Product category or a product that adheres to a standard API that HCL Digital Experience supports (such as an LDAP server). Some specific examples might include a newer operating system fix level, a WebSphere\u00ae Application Server (WAS) fix pack newer than the original Supported fix pack level, an IBM Java (JVM) fix pack, a new fix pack, or release of DB2 or an updated LDAP server. For products that fall into this category, support is as follows: For Products, such as IBM Directory Server or HCL Domino LDAP, IBM DB2, IBM JDKs (JVMs) and WebSphere\u00ae Application Server, HCL Digital Experience will fully support fix-pack, release and version updates that do not significantly change interfaces or other underlying support that HCL Digital Experience depends on for its functionality. If and when a newer release of one of these products is shipped that HCL Digital Experience cannot accommodate, that fact will be noted as described in the next section entitled Unsupported Products. Note that in order for HCL Digital Experience to support an update to a database or LDAP product, WebSphere\u00ae Application Server must support that update as well. For non-HCL products, the Support team makes a commercially reasonable effort to support products in this category. Support accepts problem reports (PMRs) for the appropriate releases that use these untested products. If Support is able to re-create the reported problem with a Supported version of the product, we will attempt to fix the problem. If Support is not able to re-create the problem with a Supported version of the product in question and is not able to resolve the problem on the untested version of the product in question, Support will look to the support organization for the product in question to provide resolution. Please note that varying degrees of customer involvement may be necessary to handle this process for non-HCL products. If the support organization for the untested product in question is unable to resolve the problem, Support will deem that version, release or fix pack level of the untested product in question to now be an Unsupported Product. Unsupported Products An Unsupported Product is a product (at a specified version, release and fix level) that is known to not work with HCL Digital Experience and is therefore not supported. A product can be included in this category as a result of an explicit test effort by Development or as a result of discovery from a prior customer problem. The HCL Digital Experience Support team maintains a list, by release, of all known Unsupported Products. The list is published as a technical document and is available to all customers. WebSphere\u00ae Application Server has a similar support statement, which can be found on the web. Note: WebSphere\u00ae Application Server uses specially customized builds of the IBM Java SDKs on certain platforms. Updates to these builds must be obtained from WebSphere\u00ae Application Server support.HCL Portal can be sensitive to changes in the underlying WebSphere\u00ae Application Server. Upgrading to a new fix pack level of the application server is well tolerated and encouraged (such as from WebSphere\u00ae Application Server version 8.5.5.2 to 9.0.x) as long as all required fixes for WebSphere\u00ae Application Server are available as integrated into that fix pack or by applying an interim fix specifically for that maintenance level. However, upgrading from one version of WebSphere\u00ae Application Server to the next is problematic if not done within the context of a migration of versions and must never be attempted with an in-place system.","title":"Categories of Support"},{"location":"overview/inst_req_supt/#support-for-kubernetes","text":"Docker and Kubernetes are third-party products. HCL support is available to assist in configuration and support related issues as it pertains to the HCL Digital Experience product. If you require assistance with a full Kubernetes or Docker deployment, contact HCL Services or one of our HCL Business Partners to inquire about professional services.","title":"Support for Kubernetes"},{"location":"overview/inst_req_supt/#support-for-ldap-servers","text":"LDAP support spans two categories: Fully tested and supported LDAP servers: The list of fully tested LDAP servers for each release of HCL Digital Experience is documented in the detailed system requirements for each release. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using the tested directory servers. These problem reports receive high-priority attention. Features that are tested with these directories include relatively simple search and retrieval functions for user and group objects. Functions outside this scope, such as the Active Directory Global Catalog feature, are considered advanced features and have not been tested with HCL Digital Experience. HCL Digital Experience support encourages customers to work with their LDAP provider for additional support on these advanced features. Untested and partially supported LDAP servers: In general, HCL Digital Experience support makes a best effort to support directory servers that have not been tested with HCL Digital Experience. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using untested directory servers. If HCL Digital Experience support can re-create the reported problem using a tested LDAP server, staff will attempt to fix the problem. If the support team is not able to re-create the problem on a tested LDAP server, customers are referred to the LDAP provider for further assistance.","title":"Support for LDAP Servers"},{"location":"overview/inst_req_supt/#support-for-external-security-managers-esm","text":"ESM support spans two (2) categories: Fully tested and supported ESM software: The list of fully tested ESM software versions for each release of HCL Digital Experience is documented in the detailed system requirements for each release. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using the tested ESM servers. These problem reports receive high-priority attention. Features that are tested with these software products include authentication and authorization. Functions outside this scope, such as login customizations, referrals, impersonation, and step up authentication are considered advanced features and have not been tested with HCL Digital Experience. HCL Digital Experience support encourages customers to work with their ESM provider for additional support on these advanced features. Untested and partially supported ESM servers: In general, HCL Digital Experience support makes a best effort to support ESM servers that have not been tested with HCL Digital Experience when relying on the ESM for authentication only. HCL Digital Experience support accepts problem reports for the appropriate HCL Digital Experience releases using untested ESM Trust Association Interceptor (TAI) implementations. If HCL Digital Experience support can re-create the reported problem using a tested ESM, staff will attempt to fix the problem. If the support team is not able to re-create the problem on a tested ESM, customers are referred to the ESM provider for further assistance. Generated by XML WebHelp","title":"Support for External Security Managers (ESM)"},{"location":"overview/intr_new9/","text":"What's new in Version 9.0 | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search What's new in Version 9.0 | HCL Digital Experience Learn what's new in HCL Digital Experience Version 9.0. Go to Product capabilities for information about HCL Digital Experience. HCL Digital Experience Version 8.5 and 9.0 Starting with CF13, combined cumulative fixes apply to both HCL Digital Experience version 8.5 and 9.0. The HCL Digital Experience documentation for Version 9.0 contains installation documentation and documentation on how to migrate your IBM\u00ae WebSphere\u00ae Application Server. After you install Version 9, return to the Version 8.5 HCL Knowledge Center for information on how to configure and use HCL Digital Experience. Integration with Watson Content Hub Starting with CF13, you can purchase an extra license (HCL Digital Experience Version 9.0 to integrate HCL Digital Experience with Watson Content Hub. The license gives you access to the Asset Picker portlet. Use the portlet to select assets (files, videos, and images) that are stored in the content hub and publish them on your site.* Documentation resource: Getting the software * Documentation resource: Integrating with Watson Content Hub Migrate to WebSphere\u00ae Application Server V9.0 With the purchase of the HCL Digital Experience Version 9 license, you can migrate your WebSphere\u00ae Application Server to Version 9.0.0.2.* Documentation resource: Migrating to WebSphere Application Server V9.0 Unsupported and deprecated features All features that are deprecated in HCL Digital Experience Version 9.0 are unsupported in HCL Digital Experience Version 9. For information on deprecated and unsupported features, go to Unsupported and deprecated features in the Version 8.5 product base documentation.* Documentation resource: Unsupported and deprecated features Generated by XML WebHelp","title":"Intr new9"},{"location":"overview/intr_new9/#whats-new-in-version-90-hcl-digital-experience","text":"Learn what's new in HCL Digital Experience Version 9.0. Go to Product capabilities for information about HCL Digital Experience.","title":"What's new in Version 9.0 | HCL Digital Experience"},{"location":"overview/intr_new9/#hcl-digital-experience-version-85-and-90","text":"Starting with CF13, combined cumulative fixes apply to both HCL Digital Experience version 8.5 and 9.0. The HCL Digital Experience documentation for Version 9.0 contains installation documentation and documentation on how to migrate your IBM\u00ae WebSphere\u00ae Application Server. After you install Version 9, return to the Version 8.5 HCL Knowledge Center for information on how to configure and use HCL Digital Experience.","title":"HCL Digital Experience Version 8.5 and 9.0"},{"location":"overview/intr_new9/#integration-with-watson-content-hub","text":"Starting with CF13, you can purchase an extra license (HCL Digital Experience Version 9.0 to integrate HCL Digital Experience with Watson Content Hub. The license gives you access to the Asset Picker portlet. Use the portlet to select assets (files, videos, and images) that are stored in the content hub and publish them on your site.* Documentation resource: Getting the software * Documentation resource: Integrating with Watson Content Hub","title":"Integration with Watson Content Hub"},{"location":"overview/intr_new9/#migrate-to-websphere-application-server-v90","text":"With the purchase of the HCL Digital Experience Version 9 license, you can migrate your WebSphere\u00ae Application Server to Version 9.0.0.2.* Documentation resource: Migrating to WebSphere Application Server V9.0","title":"Migrate to WebSphere\u00ae Application Server V9.0"},{"location":"overview/intr_new9/#unsupported-and-deprecated-features","text":"All features that are deprecated in HCL Digital Experience Version 9.0 are unsupported in HCL Digital Experience Version 9. For information on deprecated and unsupported features, go to Unsupported and deprecated features in the Version 8.5 product base documentation.* Documentation resource: Unsupported and deprecated features Generated by XML WebHelp","title":"Unsupported and deprecated features"},{"location":"overview/new_cf17/","text":"What's new in CF17? | HCL Digital Experience 9.5 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search What's new in CF17? | HCL Digital Experience 9.5 Combined Cumulative Fix (CF17) includes new software fixes for the latest version of HCL Digital Experience. Go to the HCL Software Support Site for the list of software fixes for HCL Digital Experience. Product software can be accessed from the HCL Software Licensing Portal . Go to this Step-by-step guide to downloading DX products and accessing Customer Support for more information. Also, see the following link for Portal maintenance guidance: HCL Digital Experience Roadmap: Applying maintenance Generated by XML WebHelp","title":"New cf17"},{"location":"overview/new_cf17/#whats-new-in-cf17-hcl-digital-experience-95","text":"Combined Cumulative Fix (CF17) includes new software fixes for the latest version of HCL Digital Experience. Go to the HCL Software Support Site for the list of software fixes for HCL Digital Experience. Product software can be accessed from the HCL Software Licensing Portal . Go to this Step-by-step guide to downloading DX products and accessing Customer Support for more information. Also, see the following link for Portal maintenance guidance: HCL Digital Experience Roadmap: Applying maintenance Generated by XML WebHelp","title":"What's new in CF17? | HCL Digital Experience 9.5"},{"location":"overview/new_cf_95/","text":"Latest Combined CF and Container updates | HCL Digital Experience 9.5 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Latest Combined CF and Container updates | HCL Digital Experience 9.5 Learn what's new in the HCL Digital Experience Version 9.5 Combined Cumulative Fix and HCL Digital Experience Version 9.5 Container Update releases. Generated by XML WebHelp","title":"New cf 95"},{"location":"overview/new_cf_95/#latest-combined-cf-and-container-updates-hcl-digital-experience-95","text":"Learn what's new in the HCL Digital Experience Version 9.5 Combined Cumulative Fix and HCL Digital Experience Version 9.5 Container Update releases. Generated by XML WebHelp","title":"Latest Combined CF and Container updates | HCL Digital Experience 9.5"},{"location":"overview/was_905/","text":"Fixes for IBM WebSphere Application Server 9.0.5 Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Fixes for IBM WebSphere Application Server 9.0.5 Learn about the latest fixes for IBM WebSphere Application Server 9.0.5. You can find information about IBM WebSphere Application Server 9.0.5 including the fixes that were incorporated here . Generated by XML WebHelp","title":"Was 905"},{"location":"overview/was_905/#fixes-for-ibm-websphere-application-server-905","text":"Learn about the latest fixes for IBM WebSphere Application Server 9.0.5. You can find information about IBM WebSphere Application Server 9.0.5 including the fixes that were incorporated here . Generated by XML WebHelp","title":"Fixes for IBM WebSphere Application Server 9.0.5"},{"location":"practitioner_studio/practitionerstudio_overview/","text":"Practitioner Studio | HCL Digital Experience Jump to main content HCL Digital Experience 9.5 HCL Digital Experience 9.5 Index Search Practitioner Studio | HCL Digital Experience Practitioner Studio is a newly designed user experience for HCL Digital Experience. Please see the following pages to understand how the new navigation is organized. Note: With HCL Digital Experience 9.5 Container Update CF192 and later, the following issues are experienced with use of the Safari web browser (Version 13.0.5 (15608.5.11). These issues, which were found in Web Content from the Practitioner Studio side navigator, will be resolved in a later software update:* List navigation is not accessible using keyboard * Incorrect focus behavior in Open Search and Close sidebar buttons * Remnant of highlight outline of Search icon remains after back-tabbing to Back link Overview Practitioner Studio is a newly designed user experience for HCL Digital Experience. There are several advantages to this new look. The consolidated navigation has a consistent look and feel for most administration tasks so that commonly used tasks are found together. User assistance is easily found and is provided for pages that are in the navigation. In time, this interface also serves as the launching point for newly developed features. Enabling Practitioner Studio deactivates the legacy Administration and Applications pages. However, all of these functions are still available. Generated by XML WebHelp","title":"Practitionerstudio overview"},{"location":"practitioner_studio/practitionerstudio_overview/#practitioner-studio-hcl-digital-experience","text":"Practitioner Studio is a newly designed user experience for HCL Digital Experience. Please see the following pages to understand how the new navigation is organized. Note: With HCL Digital Experience 9.5 Container Update CF192 and later, the following issues are experienced with use of the Safari web browser (Version 13.0.5 (15608.5.11). These issues, which were found in Web Content from the Practitioner Studio side navigator, will be resolved in a later software update:* List navigation is not accessible using keyboard * Incorrect focus behavior in Open Search and Close sidebar buttons * Remnant of highlight outline of Search icon remains after back-tabbing to Back link","title":"Practitioner Studio | HCL Digital Experience"},{"location":"practitioner_studio/practitionerstudio_overview/#overview","text":"Practitioner Studio is a newly designed user experience for HCL Digital Experience. There are several advantages to this new look. The consolidated navigation has a consistent look and feel for most administration tasks so that commonly used tasks are found together. User assistance is easily found and is provided for pages that are in the navigation. In time, this interface also serves as the launching point for newly developed features. Enabling Practitioner Studio deactivates the legacy Administration and Applications pages. However, all of these functions are still available. Generated by XML WebHelp","title":"Overview"}]}